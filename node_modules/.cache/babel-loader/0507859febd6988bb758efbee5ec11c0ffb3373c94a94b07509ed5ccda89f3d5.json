{"ast":null,"code":"/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nfunction createHiddenTextElement(text) {\n  const textElement = document.createElement('span');\n  textElement.textContent = text;\n  // @ts-ignore .all is a real property - https://drafts.csswg.org/css-cascade/#all-shorthand\n  textElement.style.all = 'unset';\n  // prevents scrolling to the end of the page\n  textElement.style.position = 'fixed';\n  textElement.style.top = '0';\n  textElement.style.clip = 'rect(0, 0, 0, 0)';\n  // used to preserve spaces and line breaks\n  textElement.style.whiteSpace = 'pre';\n  // do not inherit user-select (it may be `none`)\n  textElement.style.webkitUserSelect = 'text';\n  // @ts-ignore this one doesn't appear in the TS definitions for some reason\n  textElement.style.MozUserSelect = 'text';\n  // @ts-ignore this one doesn't appear in the TS definitions for some reason\n  textElement.style.msUserSelect = 'text';\n  textElement.style.userSelect = 'text';\n  return textElement;\n}\nexport function copyToClipboard(text) {\n  let isCopied = true;\n  const range = document.createRange();\n  const selection = window.getSelection();\n  const elementToBeCopied = createHiddenTextElement(text);\n  document.body.appendChild(elementToBeCopied);\n  range.selectNode(elementToBeCopied);\n  if (selection) {\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n  if (!document.execCommand('copy')) {\n    isCopied = false;\n    console.warn('Unable to copy to clipboard.');\n  }\n  if (selection) {\n    if (typeof selection.removeRange === 'function') {\n      selection.removeRange(range);\n    } else {\n      selection.removeAllRanges();\n    }\n  }\n  document.body.removeChild(elementToBeCopied);\n  return isCopied;\n}","map":{"version":3,"names":["createHiddenTextElement","text","textElement","document","createElement","textContent","style","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","copyToClipboard","isCopied","range","createRange","selection","window","getSelection","elementToBeCopied","body","appendChild","selectNode","removeAllRanges","addRange","execCommand","console","warn","removeRange","removeChild"],"sources":["/Users/nikita/Downloads/super_date_picker/src/services/copy_to_clipboard.ts"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nfunction createHiddenTextElement(text: string): HTMLSpanElement {\n  const textElement = document.createElement('span');\n  textElement.textContent = text;\n  // @ts-ignore .all is a real property - https://drafts.csswg.org/css-cascade/#all-shorthand\n  textElement.style.all = 'unset';\n  // prevents scrolling to the end of the page\n  textElement.style.position = 'fixed';\n  textElement.style.top = '0';\n  textElement.style.clip = 'rect(0, 0, 0, 0)';\n  // used to preserve spaces and line breaks\n  textElement.style.whiteSpace = 'pre';\n  // do not inherit user-select (it may be `none`)\n  textElement.style.webkitUserSelect = 'text';\n  // @ts-ignore this one doesn't appear in the TS definitions for some reason\n  textElement.style.MozUserSelect = 'text';\n  // @ts-ignore this one doesn't appear in the TS definitions for some reason\n  textElement.style.msUserSelect = 'text';\n  textElement.style.userSelect = 'text';\n  return textElement;\n}\n\nexport function copyToClipboard(text: string): boolean {\n  let isCopied = true;\n  const range = document.createRange();\n  const selection = window.getSelection();\n  const elementToBeCopied = createHiddenTextElement(text);\n\n  document.body.appendChild(elementToBeCopied);\n  range.selectNode(elementToBeCopied);\n  if (selection) {\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n\n  if (!document.execCommand('copy')) {\n    isCopied = false;\n    console.warn('Unable to copy to clipboard.');\n  }\n\n  if (selection) {\n    if (typeof selection.removeRange === 'function') {\n      selection.removeRange(range);\n    } else {\n      selection.removeAllRanges();\n    }\n  }\n\n  document.body.removeChild(elementToBeCopied);\n\n  return isCopied;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,uBAAuB,CAACC,IAAY,EAAmB;EAC9D,MAAMC,WAAW,GAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;EAClDF,WAAW,CAACG,WAAW,GAAGJ,IAAI;EAC9B;EACAC,WAAW,CAACI,KAAK,CAACC,GAAG,GAAG,OAAO;EAC/B;EACAL,WAAW,CAACI,KAAK,CAACE,QAAQ,GAAG,OAAO;EACpCN,WAAW,CAACI,KAAK,CAACG,GAAG,GAAG,GAAG;EAC3BP,WAAW,CAACI,KAAK,CAACI,IAAI,GAAG,kBAAkB;EAC3C;EACAR,WAAW,CAACI,KAAK,CAACK,UAAU,GAAG,KAAK;EACpC;EACAT,WAAW,CAACI,KAAK,CAACM,gBAAgB,GAAG,MAAM;EAC3C;EACAV,WAAW,CAACI,KAAK,CAACO,aAAa,GAAG,MAAM;EACxC;EACAX,WAAW,CAACI,KAAK,CAACQ,YAAY,GAAG,MAAM;EACvCZ,WAAW,CAACI,KAAK,CAACS,UAAU,GAAG,MAAM;EACrC,OAAOb,WAAW;AACpB;AAEA,OAAO,SAASc,eAAe,CAACf,IAAY,EAAW;EACrD,IAAIgB,QAAQ,GAAG,IAAI;EACnB,MAAMC,KAAK,GAAGf,QAAQ,CAACgB,WAAW,EAAE;EACpC,MAAMC,SAAS,GAAGC,MAAM,CAACC,YAAY,EAAE;EACvC,MAAMC,iBAAiB,GAAGvB,uBAAuB,CAACC,IAAI,CAAC;EAEvDE,QAAQ,CAACqB,IAAI,CAACC,WAAW,CAACF,iBAAiB,CAAC;EAC5CL,KAAK,CAACQ,UAAU,CAACH,iBAAiB,CAAC;EACnC,IAAIH,SAAS,EAAE;IACbA,SAAS,CAACO,eAAe,EAAE;IAC3BP,SAAS,CAACQ,QAAQ,CAACV,KAAK,CAAC;EAC3B;EAEA,IAAI,CAACf,QAAQ,CAAC0B,WAAW,CAAC,MAAM,CAAC,EAAE;IACjCZ,QAAQ,GAAG,KAAK;IAChBa,OAAO,CAACC,IAAI,CAAC,8BAA8B,CAAC;EAC9C;EAEA,IAAIX,SAAS,EAAE;IACb,IAAI,OAAOA,SAAS,CAACY,WAAW,KAAK,UAAU,EAAE;MAC/CZ,SAAS,CAACY,WAAW,CAACd,KAAK,CAAC;IAC9B,CAAC,MAAM;MACLE,SAAS,CAACO,eAAe,EAAE;IAC7B;EACF;EAEAxB,QAAQ,CAACqB,IAAI,CAACS,WAAW,CAACV,iBAAiB,CAAC;EAE5C,OAAON,QAAQ;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}