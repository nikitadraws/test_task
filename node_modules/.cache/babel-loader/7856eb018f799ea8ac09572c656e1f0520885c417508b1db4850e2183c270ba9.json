{"ast":null,"code":"/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { Children, cloneElement, Component } from 'react';\nimport { htmlIdGenerator } from '../services/accessibility';\nexport class EuiOutsideClickDetector extends Component {\n  // We are working with the assumption that a click event is\n  // equivalent to a sequential, compound press and release of\n  // the pointing device (mouse, finger, stylus, etc.).\n  // A click event's target can be imprecise, as the value will be\n  // the closest common ancestor of the press (mousedown, touchstart)\n  // and release (mouseup, touchend) events (often <body />) if\n  // the the target of each event differs.\n  // We need the actual event targets to make the correct decisions\n  // about user intention. So, consider the down/start and up/end\n  // items below as the deconstruction of a click event.\n\n  constructor(props) {\n    super(props);\n\n    // the id is used to identify which EuiOutsideClickDetector\n    // is the source of a click event; as the click event bubbles\n    // up and reaches the click detector's child component the\n    // id value is stamped on the event. This id is inspected\n    // in the document's click handler, and if the id doesn't\n    // exist or doesn't match this detector's id, then trigger\n    // the outsideClick callback.\n    //\n    // Taking this approach instead of checking if the event's\n    // target element exists in this component's DOM sub-tree is\n    // necessary for handling clicks originating from children\n    // rendered through React's portals (EuiPortal). The id tracking\n    // works because React guarantees the event bubbles through the\n    // virtual DOM and executes EuiClickDetector's onClick handler,\n    // stamping the id even though the event originates outside\n    // this component's reified DOM tree.\n    this.id = void 0;\n    this.capturedDownIds = void 0;\n    this.onClickOutside = e => {\n      const {\n        isDisabled,\n        onOutsideClick\n      } = this.props;\n      if (isDisabled) {\n        this.capturedDownIds = [];\n        return;\n      }\n      const event = e;\n      if (event.euiGeneratedBy && event.euiGeneratedBy.includes(this.id) || this.capturedDownIds.includes(this.id)) {\n        this.capturedDownIds = [];\n        return;\n      }\n      this.capturedDownIds = [];\n      return onOutsideClick(event);\n    };\n    this.onChildClick = (event, cb) => {\n      // to support nested click detectors, build an array\n      // of detector ids that have been encountered;\n      if (event.nativeEvent.hasOwnProperty('euiGeneratedBy')) {\n        event.nativeEvent.euiGeneratedBy.push(this.id);\n      } else {\n        event.nativeEvent.euiGeneratedBy = [this.id];\n      }\n      if (cb) cb(event);\n    };\n    this.onChildMouseDown = event => {\n      this.onChildClick(event, e => {\n        const nativeEvent = e.nativeEvent;\n        this.capturedDownIds = nativeEvent.euiGeneratedBy;\n        if (this.props.onMouseDown) this.props.onMouseDown(e);\n        if (this.props.onTouchStart) this.props.onTouchStart(e);\n      });\n    };\n    this.onChildMouseUp = event => {\n      this.onChildClick(event, e => {\n        if (this.props.onMouseUp) this.props.onMouseUp(e);\n        if (this.props.onTouchEnd) this.props.onTouchEnd(e);\n      });\n    };\n    this.id = htmlIdGenerator()();\n    this.capturedDownIds = [];\n  }\n  componentDidMount() {\n    document.addEventListener('mouseup', this.onClickOutside);\n    document.addEventListener('touchend', this.onClickOutside);\n  }\n  componentWillUnmount() {\n    document.removeEventListener('mouseup', this.onClickOutside);\n    document.removeEventListener('touchend', this.onClickOutside);\n  }\n  render() {\n    const props = {\n      ...this.props.children.props,\n      ...{\n        onMouseDown: this.onChildMouseDown,\n        onTouchStart: this.onChildMouseDown,\n        onMouseUp: this.onChildMouseUp,\n        onTouchEnd: this.onChildMouseUp\n      }\n    };\n    const child = Children.only(this.props.children);\n    return /*#__PURE__*/cloneElement(child, props);\n  }\n}","map":{"version":3,"names":["Children","cloneElement","Component","htmlIdGenerator","EuiOutsideClickDetector","constructor","props","id","capturedDownIds","onClickOutside","e","isDisabled","onOutsideClick","event","euiGeneratedBy","includes","onChildClick","cb","nativeEvent","hasOwnProperty","push","onChildMouseDown","onMouseDown","onTouchStart","onChildMouseUp","onMouseUp","onTouchEnd","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render","children","child","only"],"sources":["/Users/nikita/Downloads/super_date_picker/src/outside_click_detector/outside_click_detector.ts"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport {\n  Children,\n  cloneElement,\n  Component,\n  EventHandler,\n  MouseEvent as ReactMouseEvent,\n  ReactElement,\n} from 'react';\nimport { htmlIdGenerator } from '../services/accessibility';\n\nexport interface EuiEvent extends Event {\n  euiGeneratedBy: string[];\n}\n\nexport interface EuiOutsideClickDetectorProps {\n  /**\n   * ReactNode to render as this component's content\n   */\n  children: ReactElement<any>;\n  onOutsideClick: (event: Event) => void;\n  isDisabled?: boolean;\n  onMouseDown?: (event: ReactMouseEvent) => void;\n  onMouseUp?: (event: ReactMouseEvent) => void;\n  onTouchStart?: (event: ReactMouseEvent) => void;\n  onTouchEnd?: (event: ReactMouseEvent) => void;\n}\n\nexport class EuiOutsideClickDetector extends Component<\n  EuiOutsideClickDetectorProps\n> {\n  // We are working with the assumption that a click event is\n  // equivalent to a sequential, compound press and release of\n  // the pointing device (mouse, finger, stylus, etc.).\n  // A click event's target can be imprecise, as the value will be\n  // the closest common ancestor of the press (mousedown, touchstart)\n  // and release (mouseup, touchend) events (often <body />) if\n  // the the target of each event differs.\n  // We need the actual event targets to make the correct decisions\n  // about user intention. So, consider the down/start and up/end\n  // items below as the deconstruction of a click event.\n\n  private id: string;\n\n  private capturedDownIds: string[];\n\n  constructor(props: EuiOutsideClickDetectorProps) {\n    super(props);\n\n    // the id is used to identify which EuiOutsideClickDetector\n    // is the source of a click event; as the click event bubbles\n    // up and reaches the click detector's child component the\n    // id value is stamped on the event. This id is inspected\n    // in the document's click handler, and if the id doesn't\n    // exist or doesn't match this detector's id, then trigger\n    // the outsideClick callback.\n    //\n    // Taking this approach instead of checking if the event's\n    // target element exists in this component's DOM sub-tree is\n    // necessary for handling clicks originating from children\n    // rendered through React's portals (EuiPortal). The id tracking\n    // works because React guarantees the event bubbles through the\n    // virtual DOM and executes EuiClickDetector's onClick handler,\n    // stamping the id even though the event originates outside\n    // this component's reified DOM tree.\n    this.id = htmlIdGenerator()();\n\n    this.capturedDownIds = [];\n  }\n\n  onClickOutside: EventHandler<any> = (e: Event) => {\n    const { isDisabled, onOutsideClick } = this.props;\n\n    if (isDisabled) {\n      this.capturedDownIds = [];\n      return;\n    }\n\n    const event = (e as unknown) as EuiEvent;\n\n    if (\n      (event.euiGeneratedBy && event.euiGeneratedBy.includes(this.id)) ||\n      this.capturedDownIds.includes(this.id)\n    ) {\n      this.capturedDownIds = [];\n      return;\n    }\n\n    this.capturedDownIds = [];\n    return onOutsideClick(event);\n  };\n\n  componentDidMount() {\n    document.addEventListener('mouseup', this.onClickOutside);\n    document.addEventListener('touchend', this.onClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mouseup', this.onClickOutside);\n    document.removeEventListener('touchend', this.onClickOutside);\n  }\n\n  onChildClick = (\n    event: ReactMouseEvent,\n    cb: (event: ReactMouseEvent) => void\n  ) => {\n    // to support nested click detectors, build an array\n    // of detector ids that have been encountered;\n    if (event.nativeEvent.hasOwnProperty('euiGeneratedBy')) {\n      ((event.nativeEvent as unknown) as EuiEvent).euiGeneratedBy.push(this.id);\n    } else {\n      ((event.nativeEvent as unknown) as EuiEvent).euiGeneratedBy = [this.id];\n    }\n    if (cb) cb(event);\n  };\n\n  onChildMouseDown = (event: ReactMouseEvent) => {\n    this.onChildClick(event, (e) => {\n      const nativeEvent = (e.nativeEvent as unknown) as EuiEvent;\n      this.capturedDownIds = nativeEvent.euiGeneratedBy;\n      if (this.props.onMouseDown) this.props.onMouseDown(e);\n      if (this.props.onTouchStart) this.props.onTouchStart(e);\n    });\n  };\n\n  onChildMouseUp = (event: ReactMouseEvent) => {\n    this.onChildClick(event, (e) => {\n      if (this.props.onMouseUp) this.props.onMouseUp(e);\n      if (this.props.onTouchEnd) this.props.onTouchEnd(e);\n    });\n  };\n\n  render() {\n    const props = {\n      ...this.props.children.props,\n      ...{\n        onMouseDown: this.onChildMouseDown,\n        onTouchStart: this.onChildMouseDown,\n        onMouseUp: this.onChildMouseUp,\n        onTouchEnd: this.onChildMouseUp,\n      },\n    };\n\n    const child = Children.only(this.props.children);\n    return cloneElement(child, props);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}