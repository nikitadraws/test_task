{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/Downloads/super_date_picker/src/form/switch/switch.tsx\",\n  _s = $RefreshSig$();\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { useCallback, Fragment } from \"react\";\n/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport classNames from \"classnames\";\nimport { useGeneratedHtmlId } from \"../../services/accessibility\";\nimport { EuiIcon } from \"../../icon\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport const EuiSwitch = _ref => {\n  _s();\n  let {\n    label,\n    id,\n    checked,\n    disabled,\n    compressed,\n    onChange,\n    className,\n    css: customCss,\n    showLabel = true,\n    type = \"button\",\n    labelProps,\n    ...rest\n  } = _ref;\n  const switchId = useGeneratedHtmlId({\n    conditionalId: id\n  });\n  const labelId = useGeneratedHtmlId({\n    conditionalId: labelProps === null || labelProps === void 0 ? void 0 : labelProps.id\n  });\n  const onClick = useCallback(e => {\n    if (disabled) {\n      return;\n    }\n    const event = e;\n    event.target.checked = !checked;\n    onChange(event);\n  }, [checked, disabled, onChange]);\n  const classes = classNames(\"euiSwitch\", {\n    \"euiSwitch--compressed\": compressed\n  }, className);\n  const labelClasses = classNames(\"euiSwitch__label\", labelProps === null || labelProps === void 0 ? void 0 : labelProps.className);\n  if (showLabel === false && typeof label !== \"string\") {\n    console.warn(\"EuiSwitch `label` must be a string when `showLabel` is false.\");\n  }\n  const styles = {\n    euiSwitch: css``\n  }; // TODO: Emotion conversion\n  const cssStyles = [styles.euiSwitch, customCss];\n  return _jsxDEV(\"div\", {\n    css: cssStyles,\n    className: classes,\n    children: [_jsxDEV(\"button\", {\n      id: switchId,\n      \"aria-checked\": checked || false,\n      className: \"euiSwitch__button\",\n      role: \"switch\",\n      type: type,\n      disabled: disabled,\n      onClick: onClick,\n      \"aria-label\": showLabel ? undefined : label,\n      \"aria-labelledby\": showLabel ? labelId : undefined,\n      ...rest,\n      children: _jsxDEV(\"span\", {\n        className: \"euiSwitch__body\",\n        children: [_jsxDEV(\"span\", {\n          className: \"euiSwitch__thumb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), _jsxDEV(\"span\", {\n          className: \"euiSwitch__track\",\n          children: !compressed && _jsxDEV(Fragment, {\n            children: [_jsxDEV(EuiIcon, {\n              type: \"cross\",\n              size: \"m\",\n              className: \"euiSwitch__icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), _jsxDEV(EuiIcon, {\n              type: \"check\",\n              size: \"m\",\n              className: \"euiSwitch__icon euiSwitch__icon--checked\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), showLabel &&\n    // <button> + <label> has poor screen reader support.\n    // Click handler added to simulate natural, secondary <label> interactivity.\n    // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\n    _jsxDEV(\"span\", {\n      ...labelProps,\n      className: labelClasses,\n      id: labelId,\n      onClick: onClick,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(EuiSwitch, \"iyIamgzH4T+NER3+gIU8yoRJoso=\", false, function () {\n  return [useGeneratedHtmlId, useGeneratedHtmlId];\n});\n_c = EuiSwitch;\nvar _c;\n$RefreshReg$(_c, \"EuiSwitch\");","map":{"version":3,"names":["useCallback","Fragment","css","classNames","useGeneratedHtmlId","EuiIcon","EuiSwitch","label","id","checked","disabled","compressed","onChange","className","customCss","showLabel","type","labelProps","rest","switchId","conditionalId","labelId","onClick","e","event","target","classes","labelClasses","console","warn","styles","euiSwitch","cssStyles","undefined"],"sources":["/Users/nikita/Downloads/super_date_picker/src/form/switch/switch.tsx"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport {\n  ButtonHTMLAttributes,\n  HTMLAttributes,\n  FunctionComponent,\n  ReactNode,\n  useCallback,\n  Fragment,\n} from \"react\";\n/** @jsxImportSource @emotion/react */ \nimport { css } from \"@emotion/react\";\nimport classNames from \"classnames\";\n\nimport { CommonProps } from \"../../common\";\nimport { useGeneratedHtmlId } from \"../../services/accessibility\";\nimport { EuiIcon } from \"../../icon\";\n\nexport type EuiSwitchEvent = React.BaseSyntheticEvent<\n  React.MouseEvent<HTMLButtonElement>,\n  HTMLButtonElement,\n  EventTarget & {\n    checked: boolean;\n  }\n>;\n\nexport type EuiSwitchProps = CommonProps &\n  Omit<\n    ButtonHTMLAttributes<HTMLButtonElement>,\n    \"onChange\" | \"type\" | \"disabled\"\n  > & {\n    /**\n     * Whether to render the render the text label\n     */\n    showLabel?: boolean;\n    /**\n     * Must be a string if `showLabel` prop is false\n     */\n    label: ReactNode | string;\n    checked: boolean;\n    onChange: (event: EuiSwitchEvent) => void;\n    disabled?: boolean;\n    compressed?: boolean;\n    type?: \"submit\" | \"reset\" | \"button\";\n    /**\n     * Object of props passed to the label's <span/>\n     */\n    labelProps?: CommonProps & HTMLAttributes<HTMLSpanElement>;\n  };\n\nexport const EuiSwitch: FunctionComponent<EuiSwitchProps> = ({\n  label,\n  id,\n  checked,\n  disabled,\n  compressed,\n  onChange,\n  className,\n  css: customCss,\n  showLabel = true,\n  type = \"button\",\n  labelProps,\n  ...rest\n}) => {\n  const switchId = useGeneratedHtmlId({ conditionalId: id });\n  const labelId = useGeneratedHtmlId({ conditionalId: labelProps?.id });\n\n  const onClick = useCallback(\n    (e: React.MouseEvent<HTMLButtonElement | HTMLParagraphElement>) => {\n      if (disabled) {\n        return;\n      }\n\n      const event = e as unknown as EuiSwitchEvent;\n      event.target.checked = !checked;\n      onChange(event);\n    },\n    [checked, disabled, onChange]\n  );\n\n  const classes = classNames(\n    \"euiSwitch\",\n    {\n      \"euiSwitch--compressed\": compressed,\n    },\n    className\n  );\n  const labelClasses = classNames(\"euiSwitch__label\", labelProps?.className);\n  if (showLabel === false && typeof label !== \"string\") {\n    console.warn(\n      \"EuiSwitch `label` must be a string when `showLabel` is false.\"\n    );\n  }\n\n  const styles = { euiSwitch: css`` }; // TODO: Emotion conversion\n  const cssStyles = [styles.euiSwitch, customCss];\n\n  return (\n    <div css={cssStyles} className={classes}>\n      <button\n        id={switchId}\n        aria-checked={checked || false}\n        className=\"euiSwitch__button\"\n        role=\"switch\"\n        type={type}\n        disabled={disabled}\n        onClick={onClick}\n        aria-label={showLabel ? undefined : (label as string)}\n        aria-labelledby={showLabel ? labelId : undefined}\n        {...rest}\n      >\n        <span className=\"euiSwitch__body\">\n          <span className=\"euiSwitch__thumb\" />\n          <span className=\"euiSwitch__track\">\n            {!compressed && (\n              <Fragment>\n                <EuiIcon type=\"cross\" size=\"m\" className=\"euiSwitch__icon\" />\n\n                <EuiIcon\n                  type=\"check\"\n                  size=\"m\"\n                  className=\"euiSwitch__icon euiSwitch__icon--checked\"\n                />\n              </Fragment>\n            )}\n          </span>\n        </span>\n      </button>\n\n      {showLabel && (\n        // <button> + <label> has poor screen reader support.\n        // Click handler added to simulate natural, secondary <label> interactivity.\n        // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\n        <span\n          {...labelProps}\n          className={labelClasses}\n          id={labelId}\n          onClick={onClick}\n        >\n          {label}\n        </span>\n      )}\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}