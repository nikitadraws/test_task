{"ast":null,"code":"/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport chroma from 'chroma-js';\nimport { colorPalette } from './color_palette';\nconst flatten = arr => [].concat(...arr);\nconst euiPalette = function (colors, steps) {\n  let diverge = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  let categorical = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  // This function also trims the first color so white/black is never a color\n  if (!diverge && steps > 1) {\n    const palette = colorPalette(colors, steps + 1);\n    palette.shift();\n    return palette;\n  }\n  return colorPalette(colors, steps, diverge, categorical);\n};\nexport const euiPaletteColorBlind = function () {\n  let {\n    rotations = 1,\n    order = 'append',\n    direction = 'lighter',\n    sortBy = 'default',\n    sortShift = '-100'\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let colors = [];\n  let base = ['#54B399',\n  // 0 green\n  '#6092C0',\n  // 1 blue\n  '#D36086',\n  // 2 dark pink\n  '#9170B8',\n  // 3 purple\n  '#CA8EAE',\n  // 4 light pink\n  '#D6BF57',\n  // 5 yellow\n  '#B9A888',\n  // 6 tan\n  '#DA8B45',\n  // 7 orange\n  '#AA6556',\n  // 8 brown\n  '#E7664C' // 9 red\n  ];\n\n  if (sortBy === 'natural') {\n    // Sort the colors based on the color wheel, but shifting the values based on sortShift\n    base = [...base].sort(function (a, b) {\n      return chroma(a).set('hsl.h', sortShift).hsl()[0] - chroma(b).set('hsl.h', sortShift).hsl()[0];\n    });\n  }\n  if (rotations > 1) {\n    const palettes = base.map(color => {\n      // Create the darkest and lightest versions of each color using black and white\n      const palette = colorPalette(['black', color, 'white'], 5, false, true);\n      // Then removing the extremes\n      palette.pop();\n      palette.shift();\n      switch (direction) {\n        case 'lighter':\n          return colorPalette([palette[1], palette[2]], rotations, false, true);\n        case 'darker':\n          return colorPalette([palette[1], palette[0]], rotations, false, true);\n        case 'both':\n          return colorPalette(palette, rotations, false, true);\n      }\n    });\n    if (order === 'group') {\n      colors = flatten(palettes);\n    } else {\n      for (let i = 0; i < rotations; i++) {\n        const rotation = palettes.map(palette => palette[i]);\n        colors.push(...rotation);\n      }\n    }\n  } else {\n    colors = base;\n  }\n  return colors;\n};\n\n/**\n * Color blind palette with text is meant for use when text is applied on top of the color.\n * It increases the brightness of the color to give the text more contrast.\n */\nexport const euiPaletteColorBlindBehindText = function () {\n  let paletteProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const originalPalette = euiPaletteColorBlind(paletteProps);\n  const newPalette = originalPalette.map(color => chroma(color).brighten(0.5).hex());\n  return newPalette;\n};\nexport const euiPaletteForLightBackground = function () {\n  return ['#006BB4', '#017D73', '#F5A700', '#BD271E', '#DD0A73'];\n};\nexport const euiPaletteForDarkBackground = function () {\n  return ['#1BA9F5', '#7DE2D1', '#F990C0', '#F66', '#FFCE7A'];\n};\nconst positiveColor = '#209280';\nconst negativeColor = '#CC5642';\nconst lightNegativeColor = euiPaletteColorBlind()[9];\nconst coolArray = [euiPaletteColorBlind()[1], '#6092C0'];\nconst warmArray = [euiPaletteColorBlind()[7], euiPaletteColorBlind()[9]];\nexport const euiPaletteForStatus = function (steps) {\n  if (steps === 1) {\n    return [positiveColor];\n  }\n  if (steps <= 3) {\n    return euiPalette([positiveColor, euiPaletteColorBlind()[5], negativeColor], steps, true);\n  }\n  return euiPalette([positiveColor, euiPaletteColorBlind()[0], euiPaletteColorBlind()[5], lightNegativeColor, negativeColor], steps, true);\n};\nexport const euiPaletteForTemperature = function (steps) {\n  const cools = colorPalette([...coolArray.slice().reverse(), '#EBEFF5'], 3);\n  const warms = colorPalette(['#F4F3DB', ...warmArray], 3);\n  if (steps === 1) {\n    return [cools[0]];\n  } else if (steps <= 3) {\n    return euiPalette([cools[0], lightNegativeColor], steps, true);\n  }\n  return euiPalette([...cools, ...warms], steps, true);\n};\nexport const euiPaletteComplimentary = function (steps) {\n  if (steps === 1) {\n    return [euiPaletteColorBlind()[1]];\n  }\n  return euiPalette([euiPaletteColorBlind()[1], euiPaletteColorBlind()[7]], steps, true);\n};\nexport const euiPaletteNegative = function (steps) {\n  if (steps === 1) {\n    return [lightNegativeColor];\n  }\n  return euiPalette(['white', negativeColor], steps);\n};\nexport const euiPalettePositive = function (steps) {\n  if (steps === 1) {\n    return [euiPaletteColorBlind()[0]];\n  }\n  return euiPalette(['white', positiveColor], steps);\n};\nexport const euiPaletteCool = function (steps) {\n  if (steps === 1) {\n    return [coolArray[1]];\n  }\n  return euiPalette(['white', ...coolArray], steps);\n};\nexport const euiPaletteWarm = function (steps) {\n  if (steps === 1) {\n    return [lightNegativeColor];\n  }\n  return euiPalette(['#FBFBDC', ...warmArray], steps);\n};\nexport const euiPaletteGray = function (steps) {\n  if (steps === 1) {\n    return ['#98a2b3'];\n  }\n  return euiPalette(['white', '#d3dae6', '#98a2b3', '#69707d', '#343741'], steps, false);\n};","map":{"version":3,"names":["chroma","colorPalette","flatten","arr","concat","euiPalette","colors","steps","diverge","categorical","palette","shift","euiPaletteColorBlind","rotations","order","direction","sortBy","sortShift","base","sort","a","b","set","hsl","palettes","map","color","pop","i","rotation","push","euiPaletteColorBlindBehindText","paletteProps","originalPalette","newPalette","brighten","hex","euiPaletteForLightBackground","euiPaletteForDarkBackground","positiveColor","negativeColor","lightNegativeColor","coolArray","warmArray","euiPaletteForStatus","euiPaletteForTemperature","cools","slice","reverse","warms","euiPaletteComplimentary","euiPaletteNegative","euiPalettePositive","euiPaletteCool","euiPaletteWarm","euiPaletteGray"],"sources":["/Users/nikita/Downloads/super_date_picker/src/services/color/eui_palettes.ts"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport chroma from 'chroma-js';\nimport { HEX } from './color_types';\nimport { colorPalette } from './color_palette';\n\nexport type EuiPalette = string[];\n\nconst flatten = (arr: any[]) => [].concat(...arr);\n\nconst euiPalette = function (\n  colors: string[],\n  steps: number,\n  diverge: boolean = false,\n  categorical: boolean = true\n): EuiPalette {\n  // This function also trims the first color so white/black is never a color\n  if (!diverge && steps > 1) {\n    const palette = colorPalette(colors, steps + 1);\n    palette.shift();\n    return palette;\n  }\n\n  return colorPalette(colors, steps, diverge, categorical);\n};\n\nexport interface EuiPaletteColorBlindProps {\n  /**\n   * How many variations of the series is needed\n   */\n  rotations?: number;\n  /**\n   * Order similar colors as `group`s or just `append` each variation\n   */\n  order?: 'append' | 'group';\n  /**\n   * Specifies if the direction of the color variations\n   */\n  direction?: 'lighter' | 'darker' | 'both';\n  /**\n   * Use the default sort order, or re-sort them based on the color wheel (natural)\n   */\n  sortBy?: 'default' | 'natural';\n  /**\n   * Shift the sorting order by a certain number when used in conjunction with `'natural'` `sortBy`.\n   * Defaults to a number close to green.\n   */\n  sortShift?: string;\n}\n\nexport const euiPaletteColorBlind = ({\n  rotations = 1,\n  order = 'append',\n  direction = 'lighter',\n  sortBy = 'default',\n  sortShift = '-100',\n}: EuiPaletteColorBlindProps = {}): EuiPalette => {\n  let colors: string[] = [];\n\n  let base = [\n    '#54B399', // 0 green\n    '#6092C0', // 1 blue\n    '#D36086', // 2 dark pink\n    '#9170B8', // 3 purple\n    '#CA8EAE', // 4 light pink\n    '#D6BF57', // 5 yellow\n    '#B9A888', // 6 tan\n    '#DA8B45', // 7 orange\n    '#AA6556', // 8 brown\n    '#E7664C', // 9 red\n  ];\n\n  if (sortBy === 'natural') {\n    // Sort the colors based on the color wheel, but shifting the values based on sortShift\n    base = [...base].sort(function (a, b) {\n      return (\n        chroma(a).set('hsl.h', sortShift).hsl()[0] -\n        chroma(b).set('hsl.h', sortShift).hsl()[0]\n      );\n    });\n  }\n\n  if (rotations > 1) {\n    const palettes = base.map((color) => {\n      // Create the darkest and lightest versions of each color using black and white\n      const palette = colorPalette(['black', color, 'white'], 5, false, true);\n      // Then removing the extremes\n      palette.pop();\n      palette.shift();\n\n      switch (direction) {\n        case 'lighter':\n          return colorPalette([palette[1], palette[2]], rotations, false, true);\n        case 'darker':\n          return colorPalette([palette[1], palette[0]], rotations, false, true);\n        case 'both':\n          return colorPalette(palette, rotations, false, true);\n      }\n    });\n\n    if (order === 'group') {\n      colors = flatten(palettes);\n    } else {\n      for (let i = 0; i < rotations; i++) {\n        const rotation = palettes.map((palette) => palette[i]);\n        colors.push(...rotation);\n      }\n    }\n  } else {\n    colors = base;\n  }\n\n  return colors;\n};\n\n/**\n * Color blind palette with text is meant for use when text is applied on top of the color.\n * It increases the brightness of the color to give the text more contrast.\n */\nexport const euiPaletteColorBlindBehindText = (\n  paletteProps: EuiPaletteColorBlindProps = {}\n) => {\n  const originalPalette = euiPaletteColorBlind(paletteProps);\n  const newPalette = originalPalette.map((color) =>\n    chroma(color).brighten(0.5).hex()\n  );\n  return newPalette;\n};\n\nexport const euiPaletteForLightBackground = function (): EuiPalette {\n  return ['#006BB4', '#017D73', '#F5A700', '#BD271E', '#DD0A73'];\n};\n\nexport const euiPaletteForDarkBackground = function (): EuiPalette {\n  return ['#1BA9F5', '#7DE2D1', '#F990C0', '#F66', '#FFCE7A'];\n};\n\nconst positiveColor: HEX = '#209280';\nconst negativeColor: HEX = '#CC5642';\nconst lightNegativeColor: HEX = euiPaletteColorBlind()[9];\nconst coolArray: HEX[] = [euiPaletteColorBlind()[1], '#6092C0'];\nconst warmArray: HEX[] = [euiPaletteColorBlind()[7], euiPaletteColorBlind()[9]];\n\nexport const euiPaletteForStatus = function (steps: number): EuiPalette {\n  if (steps === 1) {\n    return [positiveColor];\n  }\n  if (steps <= 3) {\n    return euiPalette(\n      [positiveColor, euiPaletteColorBlind()[5], negativeColor],\n      steps,\n      true\n    );\n  }\n  return euiPalette(\n    [\n      positiveColor,\n      euiPaletteColorBlind()[0],\n      euiPaletteColorBlind()[5],\n      lightNegativeColor,\n      negativeColor,\n    ],\n    steps,\n    true\n  );\n};\n\nexport const euiPaletteForTemperature = function (steps: number): EuiPalette {\n  const cools = colorPalette([...coolArray.slice().reverse(), '#EBEFF5'], 3);\n  const warms = colorPalette(['#F4F3DB', ...warmArray], 3);\n\n  if (steps === 1) {\n    return [cools[0]];\n  } else if (steps <= 3) {\n    return euiPalette([cools[0], lightNegativeColor], steps, true);\n  }\n\n  return euiPalette([...cools, ...warms], steps, true);\n};\n\nexport const euiPaletteComplimentary = function (steps: number): EuiPalette {\n  if (steps === 1) {\n    return [euiPaletteColorBlind()[1]];\n  }\n\n  return euiPalette(\n    [euiPaletteColorBlind()[1], euiPaletteColorBlind()[7]],\n    steps,\n    true\n  );\n};\n\nexport const euiPaletteNegative = function (steps: number): EuiPalette {\n  if (steps === 1) {\n    return [lightNegativeColor];\n  }\n\n  return euiPalette(['white', negativeColor], steps);\n};\n\nexport const euiPalettePositive = function (steps: number): EuiPalette {\n  if (steps === 1) {\n    return [euiPaletteColorBlind()[0]];\n  }\n\n  return euiPalette(['white', positiveColor], steps);\n};\n\nexport const euiPaletteCool = function (steps: number): EuiPalette {\n  if (steps === 1) {\n    return [coolArray[1]];\n  }\n\n  return euiPalette(['white', ...coolArray], steps);\n};\n\nexport const euiPaletteWarm = function (steps: number): EuiPalette {\n  if (steps === 1) {\n    return [lightNegativeColor];\n  }\n\n  return euiPalette(['#FBFBDC', ...warmArray], steps);\n};\n\nexport const euiPaletteGray = function (steps: number): EuiPalette {\n  if (steps === 1) {\n    return ['#98a2b3'];\n  }\n\n  return euiPalette(\n    ['white', '#d3dae6', '#98a2b3', '#69707d', '#343741'],\n    steps,\n    false\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}