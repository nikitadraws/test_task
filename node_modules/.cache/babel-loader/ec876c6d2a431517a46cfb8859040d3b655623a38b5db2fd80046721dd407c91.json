{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/Downloads/super_date_picker/src/form/field_number/field_number.tsx\",\n  _s = $RefreshSig$();\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport classNames from \"classnames\";\nimport { EuiFormControlLayout } from \"../form_control_layout\";\nimport { EuiValidatableControl } from \"../validatable_control\";\nimport { useFormContext } from \"../eui_form_context\";\nimport { getFormControlClassNameForIconCount } from \"../form_control_layout/_num_icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EuiFieldNumber = props => {\n  _s();\n  const {\n    defaultFullWidth\n  } = useFormContext();\n  const {\n    className,\n    icon,\n    id,\n    placeholder,\n    name,\n    min,\n    max,\n    value,\n    isInvalid,\n    fullWidth = defaultFullWidth,\n    isLoading = false,\n    compressed = false,\n    prepend,\n    append,\n    inputRef,\n    readOnly,\n    controlOnly,\n    ...rest\n  } = props;\n  const numIconsClass = getFormControlClassNameForIconCount({\n    isInvalid,\n    isLoading\n  });\n  const classes = classNames(\"euiFieldNumber\", className, numIconsClass, {\n    \"euiFieldNumber--withIcon\": icon,\n    \"euiFieldNumber--fullWidth\": fullWidth,\n    \"euiFieldNumber--compressed\": compressed,\n    \"euiFieldNumber--inGroup\": prepend || append,\n    \"euiFieldNumber-isLoading\": isLoading\n  });\n  const control = /*#__PURE__*/_jsxDEV(EuiValidatableControl, {\n    isInvalid: isInvalid,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      id: id,\n      min: min,\n      max: max,\n      name: name,\n      value: value,\n      placeholder: placeholder,\n      readOnly: readOnly,\n      className: classes,\n      ref: inputRef,\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n  if (controlOnly) {\n    return control;\n  }\n  return /*#__PURE__*/_jsxDEV(EuiFormControlLayout, {\n    icon: icon,\n    fullWidth: fullWidth,\n    isLoading: isLoading,\n    isInvalid: isInvalid,\n    compressed: compressed,\n    readOnly: readOnly,\n    prepend: prepend,\n    append: append,\n    inputId: id,\n    children: control\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(EuiFieldNumber, \"r29orIZyy5tmCzP1W2OcvSFKH7Q=\", false, function () {\n  return [useFormContext];\n});\n_c = EuiFieldNumber;\nvar _c;\n$RefreshReg$(_c, \"EuiFieldNumber\");","map":{"version":3,"names":["classNames","EuiFormControlLayout","EuiValidatableControl","useFormContext","getFormControlClassNameForIconCount","EuiFieldNumber","props","defaultFullWidth","className","icon","id","placeholder","name","min","max","value","isInvalid","fullWidth","isLoading","compressed","prepend","append","inputRef","readOnly","controlOnly","rest","numIconsClass","classes","control"],"sources":["/Users/nikita/Downloads/super_date_picker/src/form/field_number/field_number.tsx"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { InputHTMLAttributes, Ref, FunctionComponent } from \"react\";\nimport { CommonProps } from \"../../common\";\nimport classNames from \"classnames\";\n\nimport {\n  EuiFormControlLayout,\n  EuiFormControlLayoutProps,\n} from \"../form_control_layout\";\n\nimport { EuiValidatableControl } from \"../validatable_control\";\n\nimport { IconType } from \"../../icon\";\nimport { useFormContext } from \"../eui_form_context\";\nimport { getFormControlClassNameForIconCount } from \"../form_control_layout/_num_icons\";\n\nexport type EuiFieldNumberProps = Omit<\n  InputHTMLAttributes<HTMLInputElement>,\n  \"min\" | \"max\" | \"readOnly\" | \"step\"\n> &\n  CommonProps & {\n    icon?: IconType;\n    isInvalid?: boolean;\n    /**\n     * Expand to fill 100% of the parent.\n     * Defaults to `fullWidth` prop of `<EuiForm>`.\n     * @default false\n     */\n    fullWidth?: boolean;\n    /**\n     * @default false\n     */\n    isLoading?: boolean;\n    readOnly?: boolean;\n    min?: number;\n    max?: number;\n    /**\n     * Specifies the granularity that the value must adhere to.\n     * Accepts a `number` or the string `'any'` for no stepping to allow for any value.\n     * Defaults to `1`\n     */\n    step?: number | \"any\";\n    inputRef?: Ref<HTMLInputElement>;\n\n    /**\n     * Creates an input group with element(s) coming before input.\n     * `string` | `ReactElement` or an array of these\n     */\n    prepend?: EuiFormControlLayoutProps[\"prepend\"];\n\n    /**\n     * Creates an input group with element(s) coming after input.\n     * `string` | `ReactElement` or an array of these\n     */\n    append?: EuiFormControlLayoutProps[\"append\"];\n\n    /**\n     * Completely removes form control layout wrapper and ignores\n     * icon, prepend, and append. Best used inside EuiFormControlLayoutDelimited.\n     */\n    controlOnly?: boolean;\n\n    /**\n     * when `true` creates a shorter height input\n     * @default false\n     */\n    compressed?: boolean;\n  };\n\nexport const EuiFieldNumber: FunctionComponent<EuiFieldNumberProps> = (\n  props\n) => {\n  const { defaultFullWidth } = useFormContext();\n  const {\n    className,\n    icon,\n    id,\n    placeholder,\n    name,\n    min,\n    max,\n    value,\n    isInvalid,\n    fullWidth = defaultFullWidth,\n    isLoading = false,\n    compressed = false,\n    prepend,\n    append,\n    inputRef,\n    readOnly,\n    controlOnly,\n    ...rest\n  } = props;\n\n  const numIconsClass = getFormControlClassNameForIconCount({\n    isInvalid,\n    isLoading,\n  });\n\n  const classes = classNames(\"euiFieldNumber\", className, numIconsClass, {\n    \"euiFieldNumber--withIcon\": icon,\n    \"euiFieldNumber--fullWidth\": fullWidth,\n    \"euiFieldNumber--compressed\": compressed,\n    \"euiFieldNumber--inGroup\": prepend || append,\n    \"euiFieldNumber-isLoading\": isLoading,\n  });\n\n  const control = (\n    <EuiValidatableControl isInvalid={isInvalid}>\n      <input\n        type=\"number\"\n        id={id}\n        min={min}\n        max={max}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        className={classes}\n        ref={inputRef}\n        {...rest}\n      />\n    </EuiValidatableControl>\n  );\n\n  if (controlOnly) {\n    return control;\n  }\n\n  return (\n    <EuiFormControlLayout\n      icon={icon}\n      fullWidth={fullWidth}\n      isLoading={isLoading}\n      isInvalid={isInvalid}\n      compressed={compressed}\n      readOnly={readOnly}\n      prepend={prepend}\n      append={append}\n      inputId={id}\n    >\n      {control}\n    </EuiFormControlLayout>\n  );\n};\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,OAAOA,UAAU,MAAM,YAAY;AAEnC,SACEC,oBAAoB,QAEf,wBAAwB;AAE/B,SAASC,qBAAqB,QAAQ,wBAAwB;AAG9D,SAASC,cAAc,QAAQ,qBAAqB;AACpD,SAASC,mCAAmC,QAAQ,mCAAmC;AAAC;AAuDxF,OAAO,MAAMC,cAAsD,GACjEC,KAAK,IACF;EAAA;EACH,MAAM;IAAEC;EAAiB,CAAC,GAAGJ,cAAc,EAAE;EAC7C,MAAM;IACJK,SAAS;IACTC,IAAI;IACJC,EAAE;IACFC,WAAW;IACXC,IAAI;IACJC,GAAG;IACHC,GAAG;IACHC,KAAK;IACLC,SAAS;IACTC,SAAS,GAAGV,gBAAgB;IAC5BW,SAAS,GAAG,KAAK;IACjBC,UAAU,GAAG,KAAK;IAClBC,OAAO;IACPC,MAAM;IACNC,QAAQ;IACRC,QAAQ;IACRC,WAAW;IACX,GAAGC;EACL,CAAC,GAAGnB,KAAK;EAET,MAAMoB,aAAa,GAAGtB,mCAAmC,CAAC;IACxDY,SAAS;IACTE;EACF,CAAC,CAAC;EAEF,MAAMS,OAAO,GAAG3B,UAAU,CAAC,gBAAgB,EAAEQ,SAAS,EAAEkB,aAAa,EAAE;IACrE,0BAA0B,EAAEjB,IAAI;IAChC,2BAA2B,EAAEQ,SAAS;IACtC,4BAA4B,EAAEE,UAAU;IACxC,yBAAyB,EAAEC,OAAO,IAAIC,MAAM;IAC5C,0BAA0B,EAAEH;EAC9B,CAAC,CAAC;EAEF,MAAMU,OAAO,gBACX,QAAC,qBAAqB;IAAC,SAAS,EAAEZ,SAAU;IAAA,uBAC1C;MACE,IAAI,EAAC,QAAQ;MACb,EAAE,EAAEN,EAAG;MACP,GAAG,EAAEG,GAAI;MACT,GAAG,EAAEC,GAAI;MACT,IAAI,EAAEF,IAAK;MACX,KAAK,EAAEG,KAAM;MACb,WAAW,EAAEJ,WAAY;MACzB,QAAQ,EAAEY,QAAS;MACnB,SAAS,EAAEI,OAAQ;MACnB,GAAG,EAAEL,QAAS;MAAA,GACVG;IAAI;MAAA;MAAA;MAAA;IAAA;EACR;IAAA;IAAA;IAAA;EAAA,QAEL;EAED,IAAID,WAAW,EAAE;IACf,OAAOI,OAAO;EAChB;EAEA,oBACE,QAAC,oBAAoB;IACnB,IAAI,EAAEnB,IAAK;IACX,SAAS,EAAEQ,SAAU;IACrB,SAAS,EAAEC,SAAU;IACrB,SAAS,EAAEF,SAAU;IACrB,UAAU,EAAEG,UAAW;IACvB,QAAQ,EAAEI,QAAS;IACnB,OAAO,EAAEH,OAAQ;IACjB,MAAM,EAAEC,MAAO;IACf,OAAO,EAAEX,EAAG;IAAA,UAEXkB;EAAO;IAAA;IAAA;IAAA;EAAA,QACa;AAE3B,CAAC;AAAC,GA3EWvB,cAAsD;EAAA,QAGpCF,cAAc;AAAA;AAAA,KAHhCE,cAAsD;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}