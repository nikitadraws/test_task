{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/Downloads/super_date_picker/src/form/form_control_layout/form_control_layout_custom_icon.tsx\";\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport classNames from \"classnames\";\nimport { EuiIcon } from \"../../icon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EuiFormControlLayoutCustomIcon = _ref => {\n  let {\n    className,\n    onClick,\n    type,\n    iconRef,\n    size,\n    color,\n    ...rest\n  } = _ref;\n  const classes = classNames(\"euiFormControlLayoutCustomIcon\", className, {\n    \"euiFormControlLayoutCustomIcon--clickable\": onClick\n  });\n  if (onClick) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onClick,\n      className: classes,\n      ref: iconRef,\n      ...rest,\n      children: /*#__PURE__*/_jsxDEV(EuiIcon, {\n        className: \"euiFormControlLayoutCustomIcon__icon\",\n        \"aria-hidden\": \"true\",\n        size: size,\n        type: type,\n        color: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: classes,\n    ref: iconRef,\n    ...rest,\n    children: /*#__PURE__*/_jsxDEV(EuiIcon, {\n      className: \"euiFormControlLayoutCustomIcon__icon\",\n      \"aria-hidden\": \"true\",\n      size: size,\n      type: type,\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_c = EuiFormControlLayoutCustomIcon;\nvar _c;\n$RefreshReg$(_c, \"EuiFormControlLayoutCustomIcon\");","map":{"version":3,"names":["classNames","EuiIcon","EuiFormControlLayoutCustomIcon","className","onClick","type","iconRef","size","color","rest","classes"],"sources":["/Users/nikita/Downloads/super_date_picker/src/form/form_control_layout/form_control_layout_custom_icon.tsx"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { ButtonHTMLAttributes, FunctionComponent, HTMLAttributes } from \"react\";\nimport classNames from \"classnames\";\n\nimport { EuiIcon, EuiIconProps, IconType } from \"../../icon\";\nimport { CommonProps, ExclusiveUnion } from \"../../common\";\n\nexport type EuiFormControlLayoutCustomIconProps = CommonProps &\n  ExclusiveUnion<\n    Omit<ButtonHTMLAttributes<HTMLButtonElement>, \"type\">,\n    HTMLAttributes<HTMLSpanElement>\n  > & {\n    type: IconType;\n    size?: EuiIconProps[\"size\"];\n    iconRef?:\n      | string\n      | ((el: HTMLButtonElement | HTMLSpanElement | null) => void);\n  };\n\nexport const EuiFormControlLayoutCustomIcon: FunctionComponent<\n  EuiFormControlLayoutCustomIconProps\n> = ({ className, onClick, type, iconRef, size, color, ...rest }) => {\n  const classes = classNames(\"euiFormControlLayoutCustomIcon\", className, {\n    \"euiFormControlLayoutCustomIcon--clickable\": onClick,\n  });\n\n  if (onClick) {\n    return (\n      <button\n        type=\"button\"\n        onClick={onClick}\n        className={classes}\n        ref={iconRef}\n        {...rest}\n      >\n        <EuiIcon\n          className=\"euiFormControlLayoutCustomIcon__icon\"\n          aria-hidden=\"true\"\n          size={size}\n          type={type}\n          color={color}\n        />\n      </button>\n    );\n  }\n\n  return (\n    <span className={classes} ref={iconRef} {...rest}>\n      <EuiIcon\n        className=\"euiFormControlLayoutCustomIcon__icon\"\n        aria-hidden=\"true\"\n        size={size}\n        type={type}\n        color={color}\n      />\n    </span>\n  );\n};\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,UAAU,MAAM,YAAY;AAEnC,SAASC,OAAO,QAAgC,YAAY;AAAC;AAe7D,OAAO,MAAMC,8BAEZ,GAAG,QAAiE;EAAA,IAAhE;IAAEC,SAAS;IAAEC,OAAO;IAAEC,IAAI;IAAEC,OAAO;IAAEC,IAAI;IAAEC,KAAK;IAAE,GAAGC;EAAK,CAAC;EAC9D,MAAMC,OAAO,GAAGV,UAAU,CAAC,gCAAgC,EAAEG,SAAS,EAAE;IACtE,2CAA2C,EAAEC;EAC/C,CAAC,CAAC;EAEF,IAAIA,OAAO,EAAE;IACX,oBACE;MACE,IAAI,EAAC,QAAQ;MACb,OAAO,EAAEA,OAAQ;MACjB,SAAS,EAAEM,OAAQ;MACnB,GAAG,EAAEJ,OAAQ;MAAA,GACTG,IAAI;MAAA,uBAER,QAAC,OAAO;QACN,SAAS,EAAC,sCAAsC;QAChD,eAAY,MAAM;QAClB,IAAI,EAAEF,IAAK;QACX,IAAI,EAAEF,IAAK;QACX,KAAK,EAAEG;MAAM;QAAA;QAAA;QAAA;MAAA;IACb;MAAA;MAAA;MAAA;IAAA,QACK;EAEb;EAEA,oBACE;IAAM,SAAS,EAAEE,OAAQ;IAAC,GAAG,EAAEJ,OAAQ;IAAA,GAAKG,IAAI;IAAA,uBAC9C,QAAC,OAAO;MACN,SAAS,EAAC,sCAAsC;MAChD,eAAY,MAAM;MAClB,IAAI,EAAEF,IAAK;MACX,IAAI,EAAEF,IAAK;MACX,KAAK,EAAEG;IAAM;MAAA;MAAA;MAAA;IAAA;EACb;IAAA;IAAA;IAAA;EAAA,QACG;AAEX,CAAC;AAAC,KAtCWN,8BAEZ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}