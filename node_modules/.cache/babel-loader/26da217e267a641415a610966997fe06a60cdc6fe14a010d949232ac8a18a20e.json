{"ast":null,"code":"/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport dateMath from '@elastic/datemath';\nimport { parseRelativeParts, toRelativeStringFromParts } from './relative_utils';\nimport moment from 'moment';\nexport const DATE_MODES = {\n  ABSOLUTE: 'absolute',\n  RELATIVE: 'relative',\n  NOW: 'now'\n};\nexport const INVALID_DATE = 'invalid_date';\nexport function getDateMode(value) {\n  if (value === 'now') {\n    return DATE_MODES.NOW;\n  }\n  if (value.includes('now')) {\n    return DATE_MODES.RELATIVE;\n  }\n  return DATE_MODES.ABSOLUTE;\n}\nexport function toAbsoluteString(value) {\n  let roundUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const valueAsMoment = dateMath.parse(value, {\n    roundUp\n  });\n  if (!valueAsMoment) {\n    return value;\n  }\n  if (!moment(valueAsMoment).isValid()) {\n    return INVALID_DATE;\n  }\n  return valueAsMoment.toISOString();\n}\nexport function toRelativeString(value) {\n  return toRelativeStringFromParts(parseRelativeParts(value));\n}","map":{"version":3,"names":["dateMath","parseRelativeParts","toRelativeStringFromParts","moment","DATE_MODES","ABSOLUTE","RELATIVE","NOW","INVALID_DATE","getDateMode","value","includes","toAbsoluteString","roundUp","valueAsMoment","parse","isValid","toISOString","toRelativeString"],"sources":["/Users/nikita/Downloads/super_date_picker/src/date_picker/super_date_picker/date_modes.ts"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport dateMath from '@elastic/datemath';\nimport {\n  parseRelativeParts,\n  toRelativeStringFromParts,\n} from './relative_utils';\nimport {\n  AbsoluteDateMode,\n  RelativeDateMode,\n  NowDateMode,\n  ShortDate,\n} from '../types';\nimport moment from 'moment';\n\nexport const DATE_MODES: {\n  ABSOLUTE: AbsoluteDateMode;\n  RELATIVE: RelativeDateMode;\n  NOW: NowDateMode;\n} = {\n  ABSOLUTE: 'absolute',\n  RELATIVE: 'relative',\n  NOW: 'now',\n};\n\nexport const INVALID_DATE = 'invalid_date';\n\nexport function getDateMode(value: ShortDate) {\n  if (value === 'now') {\n    return DATE_MODES.NOW;\n  }\n\n  if (value.includes('now')) {\n    return DATE_MODES.RELATIVE;\n  }\n\n  return DATE_MODES.ABSOLUTE;\n}\n\nexport function toAbsoluteString(value: string, roundUp: boolean = false) {\n  const valueAsMoment = dateMath.parse(value, { roundUp });\n  if (!valueAsMoment) {\n    return value;\n  }\n  if (!moment(valueAsMoment).isValid()) {\n    return INVALID_DATE;\n  }\n  return valueAsMoment.toISOString();\n}\n\nexport function toRelativeString(value: string) {\n  return toRelativeStringFromParts(parseRelativeParts(value));\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,QAAQ,MAAM,mBAAmB;AACxC,SACEC,kBAAkB,EAClBC,yBAAyB,QACpB,kBAAkB;AAOzB,OAAOC,MAAM,MAAM,QAAQ;AAE3B,OAAO,MAAMC,UAIZ,GAAG;EACFC,QAAQ,EAAE,UAAU;EACpBC,QAAQ,EAAE,UAAU;EACpBC,GAAG,EAAE;AACP,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,cAAc;AAE1C,OAAO,SAASC,WAAW,CAACC,KAAgB,EAAE;EAC5C,IAAIA,KAAK,KAAK,KAAK,EAAE;IACnB,OAAON,UAAU,CAACG,GAAG;EACvB;EAEA,IAAIG,KAAK,CAACC,QAAQ,CAAC,KAAK,CAAC,EAAE;IACzB,OAAOP,UAAU,CAACE,QAAQ;EAC5B;EAEA,OAAOF,UAAU,CAACC,QAAQ;AAC5B;AAEA,OAAO,SAASO,gBAAgB,CAACF,KAAa,EAA4B;EAAA,IAA1BG,OAAgB,uEAAG,KAAK;EACtE,MAAMC,aAAa,GAAGd,QAAQ,CAACe,KAAK,CAACL,KAAK,EAAE;IAAEG;EAAQ,CAAC,CAAC;EACxD,IAAI,CAACC,aAAa,EAAE;IAClB,OAAOJ,KAAK;EACd;EACA,IAAI,CAACP,MAAM,CAACW,aAAa,CAAC,CAACE,OAAO,EAAE,EAAE;IACpC,OAAOR,YAAY;EACrB;EACA,OAAOM,aAAa,CAACG,WAAW,EAAE;AACpC;AAEA,OAAO,SAASC,gBAAgB,CAACR,KAAa,EAAE;EAC9C,OAAOR,yBAAyB,CAACD,kBAAkB,CAACS,KAAK,CAAC,CAAC;AAC7D"},"metadata":{},"sourceType":"module","externalDependencies":[]}