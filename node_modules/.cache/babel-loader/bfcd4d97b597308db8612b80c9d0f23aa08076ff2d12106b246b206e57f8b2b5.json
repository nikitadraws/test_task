{"ast":null,"code":"/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nexport const throttle = function (fn) {\n  let wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;\n  let time = Date.now();\n  return function () {\n    if (time + wait - Date.now() < 0) {\n      fn(...arguments);\n      time = Date.now();\n    }\n  };\n};","map":{"version":3,"names":["throttle","fn","wait","time","Date","now"],"sources":["/Users/nikita/Downloads/super_date_picker/src/services/throttle.ts"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nexport const throttle = (fn: (...args: any[]) => void, wait = 50) => {\n  let time = Date.now();\n  return (...args: any[]) => {\n    if (time + wait - Date.now() < 0) {\n      fn(...args);\n      time = Date.now();\n    }\n  };\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMA,QAAQ,GAAG,UAACC,EAA4B,EAAgB;EAAA,IAAdC,IAAI,uEAAG,EAAE;EAC9D,IAAIC,IAAI,GAAGC,IAAI,CAACC,GAAG,EAAE;EACrB,OAAO,YAAoB;IACzB,IAAIF,IAAI,GAAGD,IAAI,GAAGE,IAAI,CAACC,GAAG,EAAE,GAAG,CAAC,EAAE;MAChCJ,EAAE,CAAC,YAAO,CAAC;MACXE,IAAI,GAAGC,IAAI,CAACC,GAAG,EAAE;IACnB;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}