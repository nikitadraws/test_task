{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/Downloads/super_date_picker/src/global_styling/reset/global_styles.tsx\",\n  _s = $RefreshSig$();\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { Global, css } from '@emotion/react';\nimport { euiFocusRing, euiScrollBarStyles } from '../mixins';\nimport { logicalCSS } from '../functions';\nimport { shade, tint, transparentize } from '../../services/color';\nimport { useEuiTheme } from '../../services/theme';\nimport { resetStyles as reset } from './reset';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EuiGlobalStyles = _ref => {\n  _s();\n  let {} = _ref;\n  const euiThemeContext = useEuiTheme();\n  const {\n    euiTheme,\n    colorMode\n  } = euiThemeContext;\n  const {\n    base,\n    colors,\n    font\n  } = euiTheme;\n\n  /**\n   * Declaring the top level scrollbar colors to match the theme also requires setting the sizes on Chrome\n   * so that it knows to use custom styles. Therefore, we just reuse the same scrollbar mixin with thick size.\n   */\n  const scrollbarStyles = euiScrollBarStyles(euiThemeContext, {\n    trackColor: colorMode === 'LIGHT' ? shade(colors.body, 0.03) : tint(colors.body, 0.07),\n    width: 'auto'\n  });\n\n  /**\n   * This font reset sets all our base font/typography related properties\n   * that are needed to override browser-specific element settings.\n   */\n  const fontReset = `\n    font-family: ${font.family};\n    font-size: ${`${font.scale[font.body.scale] * base}px`};\n    line-height: ${base / (font.scale[font.body.scale] * base)};\n    font-weight: ${font.weight[font.body.weight]};\n  `;\n\n  /**\n   * Final styles\n   */\n  const styles = css`\n    ${reset}\n\n    html {\n      ${scrollbarStyles}\n      ${fontReset}\n      text-size-adjust: 100%;\n      font-kerning: normal;\n      ${logicalCSS('height', '100%')}\n      background-color: ${colors.body};\n      color: ${colors.text};\n    }\n\n    code,\n    pre,\n    kbd,\n    samp {\n      font-family: ${font.familyCode};\n    }\n\n    input,\n    textarea,\n    select {\n      ${fontReset}\n    }\n\n    button {\n      font-family: ${font.family};\n    }\n\n    em {\n      font-style: italic;\n    }\n\n    strong {\n      font-weight: ${font.weight.bold};\n    }\n\n    *:focus {\n      ${euiFocusRing(euiThemeContext)}\n    }\n\n    // Dark mode's highlighted doesn't work well so lets just set it the same as our focus background\n    ::selection {\n      background: ${transparentize(colors.primary, colorMode === 'LIGHT' ? 0.1 : 0.2)};\n    }\n\n    a {\n      color: ${colors.primaryText};\n\n      &,\n      &:hover,\n      &:focus {\n        text-decoration: none;\n      }\n    }\n\n    // A few EUI components (e.g. tooltip, combobox) use a portal to render content outside of the DOM hierarchy.\n    // The portal content is absolutely positioned relative to the body.\n    .euiBody-hasPortalContent {\n      position: relative;\n    }\n  `;\n  return /*#__PURE__*/_jsxDEV(Global, {\n    styles: styles\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 10\n  }, this);\n};\n_s(EuiGlobalStyles, \"5VDpvev48WZ0dqD9aASoxKeQzss=\", false, function () {\n  return [useEuiTheme];\n});\n_c = EuiGlobalStyles;\nvar _c;\n$RefreshReg$(_c, \"EuiGlobalStyles\");","map":{"version":3,"names":["Global","css","euiFocusRing","euiScrollBarStyles","logicalCSS","shade","tint","transparentize","useEuiTheme","resetStyles","reset","EuiGlobalStyles","euiThemeContext","euiTheme","colorMode","base","colors","font","scrollbarStyles","trackColor","body","width","fontReset","family","scale","weight","styles","text","familyCode","bold","primary","primaryText"],"sources":["/Users/nikita/Downloads/super_date_picker/src/global_styling/reset/global_styles.tsx"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { Global, css } from '@emotion/react';\nimport { euiFocusRing, euiScrollBarStyles } from '../mixins';\nimport { logicalCSS } from '../functions';\nimport { shade, tint, transparentize } from '../../services/color';\nimport { useEuiTheme } from '../../services/theme';\nimport { resetStyles as reset } from './reset';\n\nexport interface EuiGlobalStylesProps {}\n\nexport const EuiGlobalStyles = ({}: EuiGlobalStylesProps) => {\n  const euiThemeContext = useEuiTheme();\n  const { euiTheme, colorMode } = euiThemeContext;\n  const { base, colors, font } = euiTheme;\n\n  /**\n   * Declaring the top level scrollbar colors to match the theme also requires setting the sizes on Chrome\n   * so that it knows to use custom styles. Therefore, we just reuse the same scrollbar mixin with thick size.\n   */\n  const scrollbarStyles = euiScrollBarStyles(euiThemeContext, {\n    trackColor:\n      colorMode === 'LIGHT'\n        ? shade(colors.body, 0.03)\n        : tint(colors.body, 0.07),\n    width: 'auto',\n  });\n\n  /**\n   * This font reset sets all our base font/typography related properties\n   * that are needed to override browser-specific element settings.\n   */\n  const fontReset = `\n    font-family: ${font.family};\n    font-size: ${`${font.scale[font.body.scale] * base}px`};\n    line-height: ${base / (font.scale[font.body.scale] * base)};\n    font-weight: ${font.weight[font.body.weight]};\n  `;\n\n  /**\n   * Final styles\n   */\n  const styles = css`\n    ${reset}\n\n    html {\n      ${scrollbarStyles}\n      ${fontReset}\n      text-size-adjust: 100%;\n      font-kerning: normal;\n      ${logicalCSS('height', '100%')}\n      background-color: ${colors.body};\n      color: ${colors.text};\n    }\n\n    code,\n    pre,\n    kbd,\n    samp {\n      font-family: ${font.familyCode};\n    }\n\n    input,\n    textarea,\n    select {\n      ${fontReset}\n    }\n\n    button {\n      font-family: ${font.family};\n    }\n\n    em {\n      font-style: italic;\n    }\n\n    strong {\n      font-weight: ${font.weight.bold};\n    }\n\n    *:focus {\n      ${euiFocusRing(euiThemeContext)}\n    }\n\n    // Dark mode's highlighted doesn't work well so lets just set it the same as our focus background\n    ::selection {\n      background: ${transparentize(\n        colors.primary,\n        colorMode === 'LIGHT' ? 0.1 : 0.2\n      )};\n    }\n\n    a {\n      color: ${colors.primaryText};\n\n      &,\n      &:hover,\n      &:focus {\n        text-decoration: none;\n      }\n    }\n\n    // A few EUI components (e.g. tooltip, combobox) use a portal to render content outside of the DOM hierarchy.\n    // The portal content is absolutely positioned relative to the body.\n    .euiBody-hasPortalContent {\n      position: relative;\n    }\n  `;\n\n  return <Global styles={styles} />;\n};\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,MAAM,EAAEC,GAAG,QAAQ,gBAAgB;AAC5C,SAASC,YAAY,EAAEC,kBAAkB,QAAQ,WAAW;AAC5D,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,KAAK,EAAEC,IAAI,EAAEC,cAAc,QAAQ,sBAAsB;AAClE,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,WAAW,IAAIC,KAAK,QAAQ,SAAS;AAAC;AAI/C,OAAO,MAAMC,eAAe,GAAG,QAA8B;EAAA;EAAA,IAA7B,CAAuB,CAAC;EACtD,MAAMC,eAAe,GAAGJ,WAAW,EAAE;EACrC,MAAM;IAAEK,QAAQ;IAAEC;EAAU,CAAC,GAAGF,eAAe;EAC/C,MAAM;IAAEG,IAAI;IAAEC,MAAM;IAAEC;EAAK,CAAC,GAAGJ,QAAQ;;EAEvC;AACF;AACA;AACA;EACE,MAAMK,eAAe,GAAGf,kBAAkB,CAACS,eAAe,EAAE;IAC1DO,UAAU,EACRL,SAAS,KAAK,OAAO,GACjBT,KAAK,CAACW,MAAM,CAACI,IAAI,EAAE,IAAI,CAAC,GACxBd,IAAI,CAACU,MAAM,CAACI,IAAI,EAAE,IAAI,CAAC;IAC7BC,KAAK,EAAE;EACT,CAAC,CAAC;;EAEF;AACF;AACA;AACA;EACE,MAAMC,SAAS,GAAI;AACrB,mBAAmBL,IAAI,CAACM,MAAO;AAC/B,iBAAkB,GAAEN,IAAI,CAACO,KAAK,CAACP,IAAI,CAACG,IAAI,CAACI,KAAK,CAAC,GAAGT,IAAK,IAAI;AAC3D,mBAAmBA,IAAI,IAAIE,IAAI,CAACO,KAAK,CAACP,IAAI,CAACG,IAAI,CAACI,KAAK,CAAC,GAAGT,IAAI,CAAE;AAC/D,mBAAmBE,IAAI,CAACQ,MAAM,CAACR,IAAI,CAACG,IAAI,CAACK,MAAM,CAAE;AACjD,GAAG;;EAED;AACF;AACA;EACE,MAAMC,MAAM,GAAGzB,GAAI;AACrB,MAAMS,KAAM;AACZ;AACA;AACA,QAAQQ,eAAgB;AACxB,QAAQI,SAAU;AAClB;AACA;AACA,QAAQlB,UAAU,CAAC,QAAQ,EAAE,MAAM,CAAE;AACrC,0BAA0BY,MAAM,CAACI,IAAK;AACtC,eAAeJ,MAAM,CAACW,IAAK;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqBV,IAAI,CAACW,UAAW;AACrC;AACA;AACA;AACA;AACA;AACA,QAAQN,SAAU;AAClB;AACA;AACA;AACA,qBAAqBL,IAAI,CAACM,MAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqBN,IAAI,CAACQ,MAAM,CAACI,IAAK;AACtC;AACA;AACA;AACA,QAAQ3B,YAAY,CAACU,eAAe,CAAE;AACtC;AACA;AACA;AACA;AACA,oBAAoBL,cAAc,CAC1BS,MAAM,CAACc,OAAO,EACdhB,SAAS,KAAK,OAAO,GAAG,GAAG,GAAG,GAAG,CACjC;AACR;AACA;AACA;AACA,eAAeE,MAAM,CAACe,WAAY;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;EAED,oBAAO,QAAC,MAAM;IAAC,MAAM,EAAEL;EAAO;IAAA;IAAA;IAAA;EAAA,QAAG;AACnC,CAAC;AAAC,GAnGWf,eAAe;EAAA,QACFH,WAAW;AAAA;AAAA,KADxBG,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}