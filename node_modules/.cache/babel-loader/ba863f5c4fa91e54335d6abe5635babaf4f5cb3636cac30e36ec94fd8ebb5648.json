{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/Downloads/super_date_picker/src/services/breakpoint/current_breakpoint.tsx\",\n  _s = $RefreshSig$();\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { createContext, useState, useEffect, useMemo, useCallback } from \"react\";\nimport { keysOf } from \"../../common\";\nimport { useEuiTheme } from \"../theme\";\nimport { throttle } from \"../throttle\";\nimport { sortMapByLargeToSmallValues } from \"./_sorting\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CurrentEuiBreakpointContext = /*#__PURE__*/createContext(undefined);\n\n/**\n * Top level provider (nested within EuiProvider) which provides a single\n * resize listener that returns the current breakpoint based on window width\n */\nexport const CurrentEuiBreakpointProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  // Obtain the breakpoints map from the EUI theme\n  const {\n    euiTheme: {\n      breakpoint: breakpoints\n    }\n  } = useEuiTheme();\n\n  // Ensure the breakpoints map is sorted from largest value to smallest\n  const sortedBreakpoints = useMemo(() => sortMapByLargeToSmallValues(breakpoints), [breakpoints]);\n\n  // Find the breakpoint (key) whose value is <= windowWidth starting with largest first\n  const getBreakpoint = useCallback(width => keysOf(sortedBreakpoints).find(key => sortedBreakpoints[key] <= width), [sortedBreakpoints]);\n  const [currentBreakpoint, setCurrentBreakpoint] = useState(typeof window !== \"undefined\" ? getBreakpoint(window.innerWidth) : undefined);\n  useEffect(() => {\n    const onWindowResize = throttle(() => {\n      setCurrentBreakpoint(getBreakpoint(window.innerWidth));\n    }, 50);\n    window.addEventListener(\"resize\", onWindowResize);\n    return () => window.removeEventListener(\"resize\", onWindowResize);\n  }, [getBreakpoint]);\n  return /*#__PURE__*/_jsxDEV(CurrentEuiBreakpointContext.Provider, {\n    value: currentBreakpoint,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(CurrentEuiBreakpointProvider, \"ugqRHu1+X6NqrJgy8zKWlXub/P4=\", false, function () {\n  return [useEuiTheme];\n});\n_c = CurrentEuiBreakpointProvider;\nvar _c;\n$RefreshReg$(_c, \"CurrentEuiBreakpointProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useMemo","useCallback","keysOf","useEuiTheme","throttle","sortMapByLargeToSmallValues","CurrentEuiBreakpointContext","undefined","CurrentEuiBreakpointProvider","children","euiTheme","breakpoint","breakpoints","sortedBreakpoints","getBreakpoint","width","find","key","currentBreakpoint","setCurrentBreakpoint","window","innerWidth","onWindowResize","addEventListener","removeEventListener"],"sources":["/Users/nikita/Downloads/super_date_picker/src/services/breakpoint/current_breakpoint.tsx"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport {\n  createContext,\n  useState,\n  useEffect,\n  useMemo,\n  useCallback,\n} from \"react\";\n\nimport { keysOf } from \"../../common\";\nimport {\n  _EuiThemeBreakpoint,\n  _EuiThemeBreakpoints,\n} from \"../../global_styling/variables/breakpoint\";\nimport { useEuiTheme } from \"../theme\";\nimport { throttle } from \"../throttle\";\nimport { sortMapByLargeToSmallValues } from \"./_sorting\";\n\ntype CurrentEuiBreakpoint = _EuiThemeBreakpoint | undefined;\n\nexport const CurrentEuiBreakpointContext =\n  createContext<CurrentEuiBreakpoint>(undefined);\n\n/**\n * Top level provider (nested within EuiProvider) which provides a single\n * resize listener that returns the current breakpoint based on window width\n */\nexport const CurrentEuiBreakpointProvider = ({\n  children,\n}: {\n  children: React.ReactNode;\n}) => {\n  // Obtain the breakpoints map from the EUI theme\n  const {\n    euiTheme: { breakpoint: breakpoints },\n  } = useEuiTheme();\n\n  // Ensure the breakpoints map is sorted from largest value to smallest\n  const sortedBreakpoints: _EuiThemeBreakpoints = useMemo(\n    () => sortMapByLargeToSmallValues(breakpoints),\n    [breakpoints]\n  );\n\n  // Find the breakpoint (key) whose value is <= windowWidth starting with largest first\n  const getBreakpoint = useCallback(\n    (width: number) =>\n      keysOf(sortedBreakpoints).find((key) => sortedBreakpoints[key] <= width),\n    [sortedBreakpoints]\n  );\n\n  const [currentBreakpoint, setCurrentBreakpoint] =\n    useState<CurrentEuiBreakpoint>(\n      typeof window !== \"undefined\"\n        ? getBreakpoint(window.innerWidth)\n        : undefined\n    );\n\n  useEffect(() => {\n    const onWindowResize = throttle(() => {\n      setCurrentBreakpoint(getBreakpoint(window.innerWidth));\n    }, 50);\n\n    window.addEventListener(\"resize\", onWindowResize);\n\n    return () => window.removeEventListener(\"resize\", onWindowResize);\n  }, [getBreakpoint]);\n\n  return (\n    <CurrentEuiBreakpointContext.Provider value={currentBreakpoint}>\n      {children}\n    </CurrentEuiBreakpointContext.Provider>\n  );\n};\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACEA,aAAa,EACbC,QAAQ,EACRC,SAAS,EACTC,OAAO,EACPC,WAAW,QACN,OAAO;AAEd,SAASC,MAAM,QAAQ,cAAc;AAKrC,SAASC,WAAW,QAAQ,UAAU;AACtC,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,2BAA2B,QAAQ,YAAY;AAAC;AAIzD,OAAO,MAAMC,2BAA2B,gBACtCT,aAAa,CAAuBU,SAAS,CAAC;;AAEhD;AACA;AACA;AACA;AACA,OAAO,MAAMC,4BAA4B,GAAG,QAItC;EAAA;EAAA,IAJuC;IAC3CC;EAGF,CAAC;EACC;EACA,MAAM;IACJC,QAAQ,EAAE;MAAEC,UAAU,EAAEC;IAAY;EACtC,CAAC,GAAGT,WAAW,EAAE;;EAEjB;EACA,MAAMU,iBAAuC,GAAGb,OAAO,CACrD,MAAMK,2BAA2B,CAACO,WAAW,CAAC,EAC9C,CAACA,WAAW,CAAC,CACd;;EAED;EACA,MAAME,aAAa,GAAGb,WAAW,CAC9Bc,KAAa,IACZb,MAAM,CAACW,iBAAiB,CAAC,CAACG,IAAI,CAAEC,GAAG,IAAKJ,iBAAiB,CAACI,GAAG,CAAC,IAAIF,KAAK,CAAC,EAC1E,CAACF,iBAAiB,CAAC,CACpB;EAED,MAAM,CAACK,iBAAiB,EAAEC,oBAAoB,CAAC,GAC7CrB,QAAQ,CACN,OAAOsB,MAAM,KAAK,WAAW,GACzBN,aAAa,CAACM,MAAM,CAACC,UAAU,CAAC,GAChCd,SAAS,CACd;EAEHR,SAAS,CAAC,MAAM;IACd,MAAMuB,cAAc,GAAGlB,QAAQ,CAAC,MAAM;MACpCe,oBAAoB,CAACL,aAAa,CAACM,MAAM,CAACC,UAAU,CAAC,CAAC;IACxD,CAAC,EAAE,EAAE,CAAC;IAEND,MAAM,CAACG,gBAAgB,CAAC,QAAQ,EAAED,cAAc,CAAC;IAEjD,OAAO,MAAMF,MAAM,CAACI,mBAAmB,CAAC,QAAQ,EAAEF,cAAc,CAAC;EACnE,CAAC,EAAE,CAACR,aAAa,CAAC,CAAC;EAEnB,oBACE,QAAC,2BAA2B,CAAC,QAAQ;IAAC,KAAK,EAAEI,iBAAkB;IAAA,UAC5DT;EAAQ;IAAA;IAAA;IAAA;EAAA,QAC4B;AAE3C,CAAC;AAAC,GA7CWD,4BAA4B;EAAA,QAQnCL,WAAW;AAAA;AAAA,KARJK,4BAA4B;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}