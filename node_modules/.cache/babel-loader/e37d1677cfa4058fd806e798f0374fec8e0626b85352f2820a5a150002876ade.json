{"ast":null,"code":"/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { Component } from 'react';\nexport class EuiWindowEvent extends Component {\n  componentDidMount() {\n    this.addEvent(this.props);\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.event !== this.props.event || prevProps.handler !== this.props.handler) {\n      this.removeEvent(prevProps);\n      this.addEvent(this.props);\n    }\n  }\n  componentWillUnmount() {\n    this.removeEvent(this.props);\n  }\n  addEvent(_ref) {\n    let {\n      event,\n      handler\n    } = _ref;\n    window.addEventListener(event, handler);\n  }\n  removeEvent(_ref2) {\n    let {\n      event,\n      handler\n    } = _ref2;\n    window.removeEventListener(event, handler);\n  }\n  render() {\n    return null;\n  }\n}","map":{"version":3,"names":["Component","EuiWindowEvent","componentDidMount","addEvent","props","componentDidUpdate","prevProps","event","handler","removeEvent","componentWillUnmount","window","addEventListener","removeEventListener","render"],"sources":["/Users/nikita/Downloads/super_date_picker/src/services/window_event/window_event.ts"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { Component } from 'react';\n\ntype EventNames = keyof WindowEventMap;\n\ninterface Props<Ev extends EventNames> {\n  event: Ev;\n  handler: (this: Window, ev: WindowEventMap[Ev]) => any;\n}\n\nexport class EuiWindowEvent<E extends EventNames> extends Component<Props<E>> {\n  componentDidMount() {\n    this.addEvent(this.props);\n  }\n\n  componentDidUpdate(prevProps: Props<E>) {\n    if (\n      prevProps.event !== this.props.event ||\n      prevProps.handler !== this.props.handler\n    ) {\n      this.removeEvent(prevProps);\n      this.addEvent(this.props);\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeEvent(this.props);\n  }\n\n  addEvent<Ev extends EventNames>({ event, handler }: Props<Ev>) {\n    window.addEventListener(event, handler);\n  }\n\n  removeEvent<Ev extends EventNames>({ event, handler }: Props<Ev>) {\n    window.removeEventListener(event, handler);\n  }\n\n  render() {\n    return null;\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,SAAS,QAAQ,OAAO;AASjC,OAAO,MAAMC,cAAc,SAA+BD,SAAS,CAAW;EAC5EE,iBAAiB,GAAG;IAClB,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACC,KAAK,CAAC;EAC3B;EAEAC,kBAAkB,CAACC,SAAmB,EAAE;IACtC,IACEA,SAAS,CAACC,KAAK,KAAK,IAAI,CAACH,KAAK,CAACG,KAAK,IACpCD,SAAS,CAACE,OAAO,KAAK,IAAI,CAACJ,KAAK,CAACI,OAAO,EACxC;MACA,IAAI,CAACC,WAAW,CAACH,SAAS,CAAC;MAC3B,IAAI,CAACH,QAAQ,CAAC,IAAI,CAACC,KAAK,CAAC;IAC3B;EACF;EAEAM,oBAAoB,GAAG;IACrB,IAAI,CAACD,WAAW,CAAC,IAAI,CAACL,KAAK,CAAC;EAC9B;EAEAD,QAAQ,OAAuD;IAAA,IAA/B;MAAEI,KAAK;MAAEC;IAAmB,CAAC;IAC3DG,MAAM,CAACC,gBAAgB,CAACL,KAAK,EAAEC,OAAO,CAAC;EACzC;EAEAC,WAAW,QAAuD;IAAA,IAA/B;MAAEF,KAAK;MAAEC;IAAmB,CAAC;IAC9DG,MAAM,CAACE,mBAAmB,CAACN,KAAK,EAAEC,OAAO,CAAC;EAC5C;EAEAM,MAAM,GAAG;IACP,OAAO,IAAI;EACb;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}