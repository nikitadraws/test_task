{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/Downloads/super_date_picker/src/date_picker/super_date_picker/super_date_picker.tsx\";\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { Component, Fragment } from \"react\";\nimport classNames from \"classnames\";\nimport moment from \"moment\"; // eslint-disable-line import/named\nimport dateMath from \"@elastic/datemath\";\nimport { EuiI18nConsumer } from \"../../context\";\nimport { EuiDatePickerRange } from \"../date_picker_range\";\nimport { EuiFormControlLayout } from \"../../form\";\nimport { EuiFlexGroup, EuiFlexItem } from \"../../flex\";\nimport { RenderI18nTimeOptions } from \"./time_options\";\nimport { PrettyDuration, showPrettyDuration } from \"./pretty_duration\";\nimport { EuiSuperUpdateButton } from \"./super_update_button\";\nimport { EuiQuickSelectPopover } from \"./quick_select_popover/quick_select_popover\";\nimport { EuiDatePopoverButton } from \"./date_popover/date_popover_button\";\nimport { EuiAutoRefresh, EuiAutoRefreshButton } from \"../auto_refresh/auto_refresh\";\nimport { AsyncInterval } from \"./async_interval\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction isRangeInvalid(start, end) {\n  if (start === \"now\" && end === \"now\") {\n    return true;\n  }\n  const startMoment = dateMath.parse(start);\n  const endMoment = dateMath.parse(end, {\n    roundUp: true\n  });\n  const isInvalid = !startMoment || !endMoment || !startMoment.isValid() || !endMoment.isValid() || !moment(startMoment).isValid() || !moment(endMoment).isValid() || startMoment.isAfter(endMoment);\n  return isInvalid;\n}\nexport class EuiSuperDatePickerInternal extends Component {\n  constructor() {\n    super(...arguments);\n    this.asyncInterval = void 0;\n    this.state = {\n      prevProps: {\n        start: this.props.start,\n        end: this.props.end\n      },\n      start: this.props.start,\n      end: this.props.end,\n      isInvalid: isRangeInvalid(this.props.start, this.props.end),\n      hasChanged: false,\n      showPrettyDuration: showPrettyDuration(this.props.start, this.props.end, this.props.commonlyUsedRanges),\n      isStartDatePopoverOpen: false,\n      isEndDatePopoverOpen: false\n    };\n    this.setTime = _ref => {\n      let {\n        end,\n        start\n      } = _ref;\n      const isInvalid = isRangeInvalid(start, end);\n      this.setState({\n        start,\n        end,\n        isInvalid,\n        hasChanged: !(this.state.prevProps.start === start && this.state.prevProps.end === end)\n      });\n      if (!this.props.showUpdateButton) {\n        this.props.onTimeChange({\n          start,\n          end,\n          isQuickSelection: false,\n          isInvalid\n        });\n      }\n    };\n    this.componentDidMount = () => {\n      if (!this.props.isPaused) {\n        this.startInterval(this.props.refreshInterval);\n      }\n    };\n    this.componentDidUpdate = () => {\n      this.stopInterval();\n      if (!this.props.isPaused) {\n        this.startInterval(this.props.refreshInterval);\n      }\n    };\n    this.componentWillUnmount = () => {\n      this.stopInterval();\n    };\n    this.setStart = start => {\n      this.setTime({\n        start,\n        end: this.state.end\n      });\n    };\n    this.setEnd = end => {\n      this.setTime({\n        start: this.state.start,\n        end\n      });\n    };\n    this.applyTime = () => {\n      this.props.onTimeChange({\n        start: this.state.start,\n        end: this.state.end,\n        isQuickSelection: false,\n        isInvalid: false\n      });\n    };\n    this.applyQuickTime = _ref2 => {\n      let {\n        start,\n        end\n      } = _ref2;\n      this.setState({\n        showPrettyDuration: showPrettyDuration(start, end, this.props.commonlyUsedRanges)\n      });\n      this.props.onTimeChange({\n        start,\n        end,\n        isQuickSelection: true,\n        isInvalid: false\n      });\n    };\n    this.hidePrettyDuration = () => {\n      this.setState({\n        showPrettyDuration: false,\n        isStartDatePopoverOpen: true\n      });\n    };\n    this.onStartDatePopoverToggle = () => {\n      this.setState(prevState => {\n        return {\n          isStartDatePopoverOpen: !prevState.isStartDatePopoverOpen\n        };\n      });\n    };\n    this.onStartDatePopoverClose = () => {\n      this.setState({\n        isStartDatePopoverOpen: false\n      });\n    };\n    this.onEndDatePopoverToggle = () => {\n      this.setState(prevState => {\n        return {\n          isEndDatePopoverOpen: !prevState.isEndDatePopoverOpen\n        };\n      });\n    };\n    this.onEndDatePopoverClose = () => {\n      this.setState({\n        isEndDatePopoverOpen: false\n      });\n    };\n    this.onRefreshChange = _ref3 => {\n      let {\n        refreshInterval,\n        isPaused\n      } = _ref3;\n      this.stopInterval();\n      if (!isPaused) {\n        this.startInterval(refreshInterval);\n      }\n      if (this.props.onRefreshChange) {\n        this.props.onRefreshChange({\n          refreshInterval,\n          isPaused\n        });\n      }\n    };\n    this.stopInterval = () => {\n      if (this.asyncInterval) {\n        this.asyncInterval.stop();\n      }\n    };\n    this.startInterval = refreshInterval => {\n      const {\n        onRefresh\n      } = this.props;\n      if (onRefresh) {\n        const handler = () => {\n          const {\n            start,\n            end\n          } = this.props;\n          onRefresh({\n            start,\n            end,\n            refreshInterval\n          });\n        };\n        this.asyncInterval = new AsyncInterval(handler, refreshInterval);\n      }\n    };\n    this.renderDatePickerRange = () => {\n      const {\n        end,\n        hasChanged,\n        isEndDatePopoverOpen,\n        isInvalid,\n        isStartDatePopoverOpen,\n        showPrettyDuration,\n        start\n      } = this.state;\n      const {\n        commonlyUsedRanges,\n        timeOptions,\n        dateFormat,\n        isDisabled,\n        locale,\n        timeFormat,\n        utcOffset,\n        compressed,\n        onFocus\n      } = this.props;\n      if (showPrettyDuration && !isStartDatePopoverOpen && !isEndDatePopoverOpen) {\n        return /*#__PURE__*/_jsxDEV(EuiDatePickerRange, {\n          className: \"euiDatePickerRange--inGroup\",\n          iconType: false,\n          isCustom: true,\n          startDateControl: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 29\n          }, this),\n          endDateControl: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 27\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: classNames(\"euiSuperDatePicker__prettyFormat\", {\n              \"euiSuperDatePicker__prettyFormat--disabled\": isDisabled\n            }),\n            \"data-test-subj\": \"superDatePickerShowDatesButton\",\n            disabled: isDisabled,\n            onClick: this.hidePrettyDuration,\n            onFocus: onFocus,\n            children: [/*#__PURE__*/_jsxDEV(PrettyDuration, {\n              timeFrom: start,\n              timeTo: end,\n              quickRanges: commonlyUsedRanges,\n              dateFormat: dateFormat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"euiSuperDatePicker__prettyFormatLink\",\n              children: \"Show dates\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 9\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(EuiI18nConsumer, {\n        children: _ref4 => {\n          let {\n            locale: contextLocale\n          } = _ref4;\n          return /*#__PURE__*/_jsxDEV(EuiDatePickerRange, {\n            className: \"euiDatePickerRange--inGroup\",\n            iconType: false,\n            isInvalid: isInvalid,\n            disabled: isDisabled,\n            isCustom: true,\n            startDateControl: /*#__PURE__*/_jsxDEV(EuiDatePopoverButton, {\n              className: \"euiSuperDatePicker__startPopoverButton\",\n              compressed: compressed,\n              position: \"start\",\n              needsUpdating: hasChanged,\n              isInvalid: isInvalid,\n              isDisabled: isDisabled,\n              onChange: this.setStart,\n              value: start,\n              dateFormat: dateFormat,\n              utcOffset: utcOffset,\n              timeFormat: timeFormat,\n              locale: locale || contextLocale,\n              isOpen: this.state.isStartDatePopoverOpen,\n              onPopoverToggle: this.onStartDatePopoverToggle,\n              onPopoverClose: this.onStartDatePopoverClose,\n              timeOptions: timeOptions,\n              buttonProps: {\n                onFocus\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 15\n            }, this),\n            endDateControl: /*#__PURE__*/_jsxDEV(EuiDatePopoverButton, {\n              position: \"end\",\n              compressed: compressed,\n              needsUpdating: hasChanged,\n              isInvalid: isInvalid,\n              isDisabled: isDisabled,\n              onChange: this.setEnd,\n              value: end,\n              dateFormat: dateFormat,\n              utcOffset: utcOffset,\n              timeFormat: timeFormat,\n              locale: locale || contextLocale,\n              roundUp: true,\n              isOpen: this.state.isEndDatePopoverOpen,\n              onPopoverToggle: this.onEndDatePopoverToggle,\n              onPopoverClose: this.onEndDatePopoverClose,\n              timeOptions: timeOptions,\n              buttonProps: {\n                onFocus\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 11\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 7\n      }, this);\n    };\n    this.handleClickUpdateButton = () => {\n      if (!this.state.hasChanged && this.props.onRefresh) {\n        const {\n          start,\n          end,\n          refreshInterval\n        } = this.props;\n        this.props.onRefresh({\n          start,\n          end,\n          refreshInterval\n        });\n      } else {\n        this.applyTime();\n      }\n    };\n    this.renderUpdateButton = () => {\n      const {\n        isLoading,\n        isDisabled,\n        updateButtonProps,\n        showUpdateButton,\n        compressed\n      } = this.props;\n      if (!showUpdateButton) return null;\n      return /*#__PURE__*/_jsxDEV(EuiFlexItem, {\n        grow: false,\n        children: /*#__PURE__*/_jsxDEV(EuiSuperUpdateButton, {\n          needsUpdate: this.state.hasChanged,\n          showTooltip: !this.state.isStartDatePopoverOpen && !this.state.isEndDatePopoverOpen,\n          isLoading: isLoading,\n          isDisabled: isDisabled || this.state.isInvalid,\n          onClick: this.handleClickUpdateButton,\n          \"data-test-subj\": \"superDatePickerApplyTimeButton\",\n          size: compressed ? \"s\" : \"m\",\n          iconOnly: showUpdateButton === \"iconOnly\",\n          ...updateButtonProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 7\n      }, this);\n    };\n  }\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.start !== prevState.prevProps.start || nextProps.end !== prevState.prevProps.end) {\n      return {\n        prevProps: {\n          start: nextProps.start,\n          end: nextProps.end\n        },\n        start: nextProps.start,\n        end: nextProps.end,\n        isInvalid: isRangeInvalid(nextProps.start, nextProps.end),\n        hasChanged: false,\n        showPrettyDuration: showPrettyDuration(nextProps.start, nextProps.end, nextProps.commonlyUsedRanges)\n      };\n    }\n    return null;\n  }\n  render() {\n    const {\n      commonlyUsedRanges,\n      timeOptions,\n      customQuickSelectPanels,\n      dateFormat,\n      end,\n      isAutoRefreshOnly,\n      isDisabled,\n      isPaused,\n      onRefreshChange,\n      recentlyUsedRanges,\n      refreshInterval,\n      showUpdateButton,\n      start,\n      \"data-test-subj\": dataTestSubj,\n      width: _width,\n      isQuickSelectOnly,\n      compressed,\n      className\n    } = this.props;\n\n    // Force reduction in width if showing quick select only\n    const width = isQuickSelectOnly ? \"auto\" : _width;\n    const autoRefreshAppend = !isPaused ? /*#__PURE__*/_jsxDEV(EuiAutoRefreshButton, {\n      className: \"euiFormControlLayout__append\",\n      refreshInterval: refreshInterval,\n      isDisabled: isDisabled,\n      isPaused: isPaused,\n      onRefreshChange: this.onRefreshChange,\n      shortHand: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 7\n    }, this) : undefined;\n    const quickSelect = /*#__PURE__*/_jsxDEV(EuiQuickSelectPopover, {\n      applyRefreshInterval: onRefreshChange ? this.onRefreshChange : undefined,\n      applyTime: this.applyQuickTime,\n      commonlyUsedRanges: commonlyUsedRanges,\n      customQuickSelectPanels: customQuickSelectPanels,\n      dateFormat: dateFormat,\n      end: end,\n      isDisabled: isDisabled,\n      isPaused: isPaused,\n      recentlyUsedRanges: recentlyUsedRanges,\n      refreshInterval: refreshInterval,\n      start: start,\n      timeOptions: timeOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 7\n    }, this);\n    const flexWrapperClasses = classNames(\"euiSuperDatePicker__flexWrapper\", {\n      \"euiSuperDatePicker__flexWrapper--noUpdateButton\": !showUpdateButton,\n      \"euiSuperDatePicker__flexWrapper--isAutoRefreshOnly\": isAutoRefreshOnly,\n      \"euiSuperDatePicker__flexWrapper--isQuickSelectOnly\": isQuickSelectOnly,\n      \"euiSuperDatePicker__flexWrapper--fullWidth\": width === \"full\",\n      \"euiSuperDatePicker__flexWrapper--autoWidth\": width === \"auto\"\n    });\n    return /*#__PURE__*/_jsxDEV(EuiFlexGroup, {\n      gutterSize: \"s\",\n      responsive: false,\n      className: flexWrapperClasses,\n      children: isAutoRefreshOnly && onRefreshChange ? /*#__PURE__*/_jsxDEV(EuiFlexItem, {\n        children: /*#__PURE__*/_jsxDEV(EuiAutoRefresh, {\n          isPaused: isPaused,\n          refreshInterval: refreshInterval,\n          onRefreshChange: onRefreshChange,\n          fullWidth: width === \"full\",\n          compressed: compressed,\n          isDisabled: isDisabled,\n          \"data-test-subj\": dataTestSubj,\n          className: className\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(EuiFlexItem, {\n          children: /*#__PURE__*/_jsxDEV(EuiFormControlLayout, {\n            className: classNames(\"euiSuperDatePicker\", className),\n            compressed: compressed,\n            isDisabled: isDisabled,\n            prepend: quickSelect,\n            append: autoRefreshAppend,\n            \"data-test-subj\": dataTestSubj,\n            children: !isQuickSelectOnly && this.renderDatePickerRange()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 13\n        }, this), this.renderUpdateButton()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// Because EuiSuperDatePicker is a class component and not a functional component,\n// we have to use a render prop here in order for us to pass i18n'd strings/objects/etc\n// to all underlying usages of our timeOptions constants. If someday we convert\n// EuiSuperDatePicker to an FC, we can likely get rid of this wrapper.\nEuiSuperDatePickerInternal.defaultProps = {\n  dateFormat: \"MMM D, YYYY @ HH:mm:ss.SSS\",\n  end: \"now\",\n  isAutoRefreshOnly: false,\n  isDisabled: false,\n  isPaused: true,\n  recentlyUsedRanges: [],\n  refreshInterval: 1000,\n  showUpdateButton: true,\n  start: \"now-15m\",\n  timeFormat: \"HH:mm\",\n  width: \"restricted\"\n};\nexport const EuiSuperDatePicker = props => /*#__PURE__*/_jsxDEV(RenderI18nTimeOptions, {\n  children: timeOptions => /*#__PURE__*/_jsxDEV(EuiSuperDatePickerInternal, {\n    ...props,\n    timeOptions: timeOptions,\n    commonlyUsedRanges: props.commonlyUsedRanges || timeOptions.commonDurationRanges\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 658,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 656,\n  columnNumber: 3\n}, this);\n_c = EuiSuperDatePicker;\nvar _c;\n$RefreshReg$(_c, \"EuiSuperDatePicker\");","map":{"version":3,"names":["Component","Fragment","classNames","moment","dateMath","EuiI18nConsumer","EuiDatePickerRange","EuiFormControlLayout","EuiFlexGroup","EuiFlexItem","RenderI18nTimeOptions","PrettyDuration","showPrettyDuration","EuiSuperUpdateButton","EuiQuickSelectPopover","EuiDatePopoverButton","EuiAutoRefresh","EuiAutoRefreshButton","AsyncInterval","isRangeInvalid","start","end","startMoment","parse","endMoment","roundUp","isInvalid","isValid","isAfter","EuiSuperDatePickerInternal","asyncInterval","state","prevProps","props","hasChanged","commonlyUsedRanges","isStartDatePopoverOpen","isEndDatePopoverOpen","setTime","setState","showUpdateButton","onTimeChange","isQuickSelection","componentDidMount","isPaused","startInterval","refreshInterval","componentDidUpdate","stopInterval","componentWillUnmount","setStart","setEnd","applyTime","applyQuickTime","hidePrettyDuration","onStartDatePopoverToggle","prevState","onStartDatePopoverClose","onEndDatePopoverToggle","onEndDatePopoverClose","onRefreshChange","stop","onRefresh","handler","renderDatePickerRange","timeOptions","dateFormat","isDisabled","locale","timeFormat","utcOffset","compressed","onFocus","contextLocale","handleClickUpdateButton","renderUpdateButton","isLoading","updateButtonProps","getDerivedStateFromProps","nextProps","render","customQuickSelectPanels","isAutoRefreshOnly","recentlyUsedRanges","dataTestSubj","width","_width","isQuickSelectOnly","className","autoRefreshAppend","undefined","quickSelect","flexWrapperClasses","defaultProps","EuiSuperDatePicker","commonDurationRanges"],"sources":["/Users/nikita/Downloads/super_date_picker/src/date_picker/super_date_picker/super_date_picker.tsx"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { Component, FocusEventHandler, Fragment, FunctionComponent } from \"react\";\nimport classNames from \"classnames\";\nimport moment, { LocaleSpecifier } from \"moment\"; // eslint-disable-line import/named\nimport dateMath from \"@elastic/datemath\";\n\nimport { EuiI18nConsumer } from \"../../context\";\nimport { EuiDatePickerRange } from \"../date_picker_range\";\nimport { EuiFormControlLayout, EuiFormControlLayoutProps } from \"../../form\";\nimport { EuiFlexGroup, EuiFlexItem } from \"../../flex\";\n\nimport {\n  ShortDate,\n  Milliseconds,\n  DurationRange,\n  ApplyTime,\n  ApplyRefreshInterval,\n  QuickSelectPanel,\n} from \"../types\";\n\nimport { TimeOptions, RenderI18nTimeOptions } from \"./time_options\";\nimport { PrettyDuration, showPrettyDuration } from \"./pretty_duration\";\n\nimport {\n  EuiSuperUpdateButton,\n  EuiSuperUpdateButtonProps,\n} from \"./super_update_button\";\nimport { EuiQuickSelectPopover } from \"./quick_select_popover/quick_select_popover\";\nimport { EuiDatePopoverButton } from \"./date_popover/date_popover_button\";\n\nimport { EuiDatePopoverContentProps } from \"./date_popover/date_popover_content\";\nimport {\n  EuiAutoRefresh,\n  EuiAutoRefreshButton,\n} from \"../auto_refresh/auto_refresh\";\n\nimport { Interpolation, Theme } from \"@emotion/react\";\n\nimport { AsyncInterval } from \"./async_interval\";\n\nexport interface CommonProps {\n  className?: string;\n  \"aria-label\"?: string;\n  \"data-test-subj\"?: string;\n  css?: Interpolation<Theme>;\n}\n\nexport interface OnTimeChangeProps extends DurationRange {\n  isInvalid: boolean;\n  isQuickSelection: boolean;\n}\n\nexport interface OnRefreshProps extends DurationRange {\n  refreshInterval: number;\n}\n\nexport type EuiSuperDatePickerProps = CommonProps & {\n  commonlyUsedRanges?: DurationRange[];\n  customQuickSelectPanels?: QuickSelectPanel[];\n\n  /**\n   * Specifies the formatted used when displaying dates and/or datetimes\n   */\n  dateFormat?: string;\n\n  /**\n   * Set isAutoRefreshOnly to true to limit the component to only display auto refresh content.\n   */\n  isAutoRefreshOnly?: boolean;\n  isDisabled?: boolean;\n  isLoading?: boolean;\n  isPaused?: boolean;\n\n  /**\n   * Sets the overall width by adding sensible min and max widths.\n   * - `auto`: fits width to internal content / time string.\n   * - `restricted`: static width that fits the longest possible time string.\n   * - `full`: expands to 100% of the container.\n   */\n  width?: \"restricted\" | \"full\" | \"auto\";\n\n  /**\n   * Reduces overall height to compressed form size\n   */\n  compressed?: boolean;\n\n  /**\n   * Used to localize e.g. month names, passed to `moment`\n   */\n  locale?: LocaleSpecifier;\n\n  /**\n   * Triggered whenever the EuiSuperDatePicker's dates are focused\n   */\n  onFocus?: FocusEventHandler;\n\n  /**\n   * Callback for when the refresh interval is fired.\n   * EuiSuperDatePicker will only manage a refresh interval timer when onRefresh callback is supplied\n   * If a promise is returned, the next refresh interval will not start until the promise has resolved.\n   * If the promise rejects the refresh interval will stop and the error thrown\n   */\n  onRefresh?: (props: OnRefreshProps) => void;\n\n  /**\n   * Callback for when the refresh interval changes.\n   * Supply onRefreshChange to show refresh interval inputs in quick select popover\n   */\n  onRefreshChange?: ApplyRefreshInterval;\n\n  /**\n   * Callback for when the time changes.\n   */\n  onTimeChange: (props: OnTimeChangeProps) => void;\n  recentlyUsedRanges?: DurationRange[];\n\n  /**\n   * Refresh interval in milliseconds\n   */\n  refreshInterval?: Milliseconds;\n\n  start?: ShortDate;\n  end?: ShortDate;\n\n  /**\n   * Specifies the formatted used when displaying times\n   */\n  timeFormat?: string;\n  utcOffset?: number;\n\n  /**\n   * Set showUpdateButton to false to immediately invoke onTimeChange for all start and end changes.\n   */\n  showUpdateButton?: boolean | \"iconOnly\";\n\n  /**\n   * Hides the actual input reducing to just the quick select button.\n   */\n  isQuickSelectOnly?: boolean;\n\n  /**\n   * Props passed to the update button #EuiSuperUpdateButtonProps\n   */\n  updateButtonProps?: EuiSuperUpdateButtonProps;\n};\n\ntype EuiSuperDatePickerInternalProps = EuiSuperDatePickerProps & {\n  timeOptions: TimeOptions;\n  // The below options are marked as required because they have default fallbacks\n  commonlyUsedRanges: DurationRange[];\n  recentlyUsedRanges: DurationRange[];\n  start: ShortDate;\n  end: ShortDate;\n  refreshInterval: Milliseconds;\n  dateFormat: string;\n  timeFormat: string;\n  isPaused: boolean;\n  isDisabled: boolean;\n};\n\ninterface EuiSuperDatePickerState {\n  end: ShortDate;\n  hasChanged: boolean;\n  isEndDatePopoverOpen: boolean;\n  isInvalid: boolean;\n  isStartDatePopoverOpen: boolean;\n  prevProps: {\n    end: ShortDate;\n    start: ShortDate;\n  };\n  showPrettyDuration: boolean;\n  start: ShortDate;\n}\n\nfunction isRangeInvalid(start: ShortDate, end: ShortDate) {\n  if (start === \"now\" && end === \"now\") {\n    return true;\n  }\n\n  const startMoment = dateMath.parse(start);\n  const endMoment = dateMath.parse(end, { roundUp: true });\n\n  const isInvalid =\n    !startMoment ||\n    !endMoment ||\n    !startMoment.isValid() ||\n    !endMoment.isValid() ||\n    !moment(startMoment).isValid() ||\n    !moment(endMoment).isValid() ||\n    startMoment.isAfter(endMoment);\n\n  return isInvalid;\n}\n\nexport class EuiSuperDatePickerInternal extends Component<\n  EuiSuperDatePickerInternalProps,\n  EuiSuperDatePickerState\n> {\n  static defaultProps = {\n    dateFormat: \"MMM D, YYYY @ HH:mm:ss.SSS\",\n    end: \"now\",\n    isAutoRefreshOnly: false,\n    isDisabled: false,\n    isPaused: true,\n    recentlyUsedRanges: [],\n    refreshInterval: 1000,\n    showUpdateButton: true,\n    start: \"now-15m\",\n    timeFormat: \"HH:mm\",\n    width: \"restricted\",\n  };\n\n  asyncInterval?: AsyncInterval;\n\n  state: EuiSuperDatePickerState = {\n    prevProps: {\n      start: this.props.start,\n      end: this.props.end,\n    },\n    start: this.props.start,\n    end: this.props.end,\n    isInvalid: isRangeInvalid(this.props.start, this.props.end),\n    hasChanged: false,\n    showPrettyDuration: showPrettyDuration(\n      this.props.start,\n      this.props.end,\n      this.props.commonlyUsedRanges\n    ),\n    isStartDatePopoverOpen: false,\n    isEndDatePopoverOpen: false,\n  };\n\n  static getDerivedStateFromProps(\n    nextProps: EuiSuperDatePickerInternalProps,\n    prevState: EuiSuperDatePickerState\n  ) {\n    if (\n      nextProps.start !== prevState.prevProps.start ||\n      nextProps.end !== prevState.prevProps.end\n    ) {\n      return {\n        prevProps: {\n          start: nextProps.start,\n          end: nextProps.end,\n        },\n        start: nextProps.start,\n        end: nextProps.end,\n        isInvalid: isRangeInvalid(nextProps.start, nextProps.end),\n        hasChanged: false,\n        showPrettyDuration: showPrettyDuration(\n          nextProps.start,\n          nextProps.end,\n          nextProps.commonlyUsedRanges\n        ),\n      };\n    }\n\n    return null;\n  }\n\n  setTime = ({ end, start }: DurationRange) => {\n    const isInvalid = isRangeInvalid(start, end);\n\n    this.setState({\n      start,\n      end,\n      isInvalid,\n      hasChanged: !(\n        this.state.prevProps.start === start && this.state.prevProps.end === end\n      ),\n    });\n\n    if (!this.props.showUpdateButton) {\n      this.props.onTimeChange({\n        start,\n        end,\n        isQuickSelection: false,\n        isInvalid,\n      });\n    }\n  };\n\n  componentDidMount = () => {\n    if (!this.props.isPaused) {\n      this.startInterval(this.props.refreshInterval);\n    }\n  };\n\n  componentDidUpdate = () => {\n    this.stopInterval();\n    if (!this.props.isPaused) {\n      this.startInterval(this.props.refreshInterval);\n    }\n  };\n\n  componentWillUnmount = () => {\n    this.stopInterval();\n  };\n\n  setStart: EuiDatePopoverContentProps[\"onChange\"] = (start: ShortDate) => {\n    this.setTime({ start, end: this.state.end });\n  };\n\n  setEnd: EuiDatePopoverContentProps[\"onChange\"] = (end: ShortDate) => {\n    this.setTime({ start: this.state.start, end });\n  };\n\n  applyTime = () => {\n    this.props.onTimeChange({\n      start: this.state.start,\n      end: this.state.end,\n      isQuickSelection: false,\n      isInvalid: false,\n    });\n  };\n\n  applyQuickTime: ApplyTime = ({ start, end }) => {\n    this.setState({\n      showPrettyDuration: showPrettyDuration(\n        start,\n        end,\n        this.props.commonlyUsedRanges\n      ),\n    });\n    this.props.onTimeChange({\n      start,\n      end,\n      isQuickSelection: true,\n      isInvalid: false,\n    });\n  };\n\n  hidePrettyDuration = () => {\n    this.setState({ showPrettyDuration: false, isStartDatePopoverOpen: true });\n  };\n\n  onStartDatePopoverToggle = () => {\n    this.setState((prevState) => {\n      return { isStartDatePopoverOpen: !prevState.isStartDatePopoverOpen };\n    });\n  };\n\n  onStartDatePopoverClose = () => {\n    this.setState({ isStartDatePopoverOpen: false });\n  };\n\n  onEndDatePopoverToggle = () => {\n    this.setState((prevState) => {\n      return { isEndDatePopoverOpen: !prevState.isEndDatePopoverOpen };\n    });\n  };\n\n  onEndDatePopoverClose = () => {\n    this.setState({ isEndDatePopoverOpen: false });\n  };\n\n  onRefreshChange: ApplyRefreshInterval = ({ refreshInterval, isPaused }) => {\n    this.stopInterval();\n    if (!isPaused) {\n      this.startInterval(refreshInterval);\n    }\n    if (this.props.onRefreshChange) {\n      this.props.onRefreshChange({ refreshInterval, isPaused });\n    }\n  };\n\n  stopInterval = () => {\n    if (this.asyncInterval) {\n      this.asyncInterval.stop();\n    }\n  };\n\n  startInterval = (refreshInterval: number) => {\n    const { onRefresh } = this.props;\n    if (onRefresh) {\n      const handler = () => {\n        const { start, end } = this.props;\n        onRefresh({ start, end, refreshInterval });\n      };\n      this.asyncInterval = new AsyncInterval(handler, refreshInterval);\n    }\n  };\n\n  renderDatePickerRange = () => {\n    const {\n      end,\n      hasChanged,\n      isEndDatePopoverOpen,\n      isInvalid,\n      isStartDatePopoverOpen,\n      showPrettyDuration,\n      start,\n    } = this.state;\n    const {\n      commonlyUsedRanges,\n      timeOptions,\n      dateFormat,\n      isDisabled,\n      locale,\n      timeFormat,\n      utcOffset,\n      compressed,\n      onFocus,\n    } = this.props;\n\n    if (\n      showPrettyDuration &&\n      !isStartDatePopoverOpen &&\n      !isEndDatePopoverOpen\n    ) {\n      return (\n        <EuiDatePickerRange\n          className=\"euiDatePickerRange--inGroup\"\n          iconType={false}\n          isCustom\n          startDateControl={<div />}\n          endDateControl={<div />}\n        >\n          <button\n            className={classNames(\"euiSuperDatePicker__prettyFormat\", {\n              \"euiSuperDatePicker__prettyFormat--disabled\": isDisabled,\n            })}\n            data-test-subj=\"superDatePickerShowDatesButton\"\n            disabled={isDisabled}\n            onClick={this.hidePrettyDuration}\n            onFocus={onFocus}\n          >\n            <PrettyDuration\n              timeFrom={start}\n              timeTo={end}\n              quickRanges={commonlyUsedRanges}\n              dateFormat={dateFormat}\n            />\n            <span className=\"euiSuperDatePicker__prettyFormatLink\">Show dates</span>\n\n          </button>\n        </EuiDatePickerRange>\n      );\n    }\n\n    return (\n      <EuiI18nConsumer>\n        {({ locale: contextLocale }) => (\n          <EuiDatePickerRange\n            className=\"euiDatePickerRange--inGroup\"\n            iconType={false}\n            isInvalid={isInvalid}\n            disabled={isDisabled}\n            isCustom\n            startDateControl={\n              <EuiDatePopoverButton\n                className=\"euiSuperDatePicker__startPopoverButton\"\n                compressed={compressed}\n                position=\"start\"\n                needsUpdating={hasChanged}\n                isInvalid={isInvalid}\n                isDisabled={isDisabled}\n                onChange={this.setStart}\n                value={start}\n                dateFormat={dateFormat}\n                utcOffset={utcOffset}\n                timeFormat={timeFormat}\n                locale={locale || contextLocale}\n                isOpen={this.state.isStartDatePopoverOpen}\n                onPopoverToggle={this.onStartDatePopoverToggle}\n                onPopoverClose={this.onStartDatePopoverClose}\n                timeOptions={timeOptions}\n                buttonProps={{ onFocus }}\n              />\n            }\n            endDateControl={\n              <EuiDatePopoverButton\n                position=\"end\"\n                compressed={compressed}\n                needsUpdating={hasChanged}\n                isInvalid={isInvalid}\n                isDisabled={isDisabled}\n                onChange={this.setEnd}\n                value={end}\n                dateFormat={dateFormat}\n                utcOffset={utcOffset}\n                timeFormat={timeFormat}\n                locale={locale || contextLocale}\n                roundUp\n                isOpen={this.state.isEndDatePopoverOpen}\n                onPopoverToggle={this.onEndDatePopoverToggle}\n                onPopoverClose={this.onEndDatePopoverClose}\n                timeOptions={timeOptions}\n                buttonProps={{ onFocus }}\n              />\n            }\n          />\n        )}\n      </EuiI18nConsumer>\n    );\n  };\n\n  handleClickUpdateButton = () => {\n    if (!this.state.hasChanged && this.props.onRefresh) {\n      const { start, end, refreshInterval } = this.props;\n      this.props.onRefresh({ start, end, refreshInterval });\n    } else {\n      this.applyTime();\n    }\n  };\n\n  renderUpdateButton = () => {\n    const {\n      isLoading,\n      isDisabled,\n      updateButtonProps,\n      showUpdateButton,\n      compressed,\n    } = this.props;\n\n    if (!showUpdateButton) return null;\n\n    return (\n      <EuiFlexItem grow={false}>\n        <EuiSuperUpdateButton\n          needsUpdate={this.state.hasChanged}\n          showTooltip={\n            !this.state.isStartDatePopoverOpen &&\n            !this.state.isEndDatePopoverOpen\n          }\n          isLoading={isLoading}\n          isDisabled={isDisabled || this.state.isInvalid}\n          onClick={this.handleClickUpdateButton}\n          data-test-subj=\"superDatePickerApplyTimeButton\"\n          size={compressed ? \"s\" : \"m\"}\n          iconOnly={showUpdateButton === \"iconOnly\"}\n          {...updateButtonProps}\n        />\n      </EuiFlexItem>\n    );\n  };\n\n  render() {\n    const {\n      commonlyUsedRanges,\n      timeOptions,\n      customQuickSelectPanels,\n      dateFormat,\n      end,\n      isAutoRefreshOnly,\n      isDisabled,\n      isPaused,\n      onRefreshChange,\n      recentlyUsedRanges,\n      refreshInterval,\n      showUpdateButton,\n      start,\n      \"data-test-subj\": dataTestSubj,\n      width: _width,\n      isQuickSelectOnly,\n      compressed,\n      className,\n    } = this.props;\n\n    // Force reduction in width if showing quick select only\n    const width = isQuickSelectOnly ? \"auto\" : _width;\n\n    const autoRefreshAppend: EuiFormControlLayoutProps[\"append\"] = !isPaused ? (\n      <EuiAutoRefreshButton\n        className=\"euiFormControlLayout__append\"\n        refreshInterval={refreshInterval}\n        isDisabled={isDisabled}\n        isPaused={isPaused}\n        onRefreshChange={this.onRefreshChange}\n        shortHand\n      />\n    ) : undefined;\n\n    const quickSelect = (\n      <EuiQuickSelectPopover\n        applyRefreshInterval={\n          onRefreshChange ? this.onRefreshChange : undefined\n        }\n        applyTime={this.applyQuickTime}\n        commonlyUsedRanges={commonlyUsedRanges}\n        customQuickSelectPanels={customQuickSelectPanels}\n        dateFormat={dateFormat}\n        end={end}\n        isDisabled={isDisabled}\n        isPaused={isPaused}\n        recentlyUsedRanges={recentlyUsedRanges}\n        refreshInterval={refreshInterval}\n        start={start}\n        timeOptions={timeOptions}\n      />\n    );\n\n    const flexWrapperClasses = classNames(\"euiSuperDatePicker__flexWrapper\", {\n      \"euiSuperDatePicker__flexWrapper--noUpdateButton\": !showUpdateButton,\n      \"euiSuperDatePicker__flexWrapper--isAutoRefreshOnly\": isAutoRefreshOnly,\n      \"euiSuperDatePicker__flexWrapper--isQuickSelectOnly\": isQuickSelectOnly,\n      \"euiSuperDatePicker__flexWrapper--fullWidth\": width === \"full\",\n      \"euiSuperDatePicker__flexWrapper--autoWidth\": width === \"auto\",\n    });\n\n    return (\n      <EuiFlexGroup\n        gutterSize=\"s\"\n        responsive={false}\n        className={flexWrapperClasses}\n      >\n        {isAutoRefreshOnly && onRefreshChange ? (\n          <EuiFlexItem>\n            <EuiAutoRefresh\n              isPaused={isPaused}\n              refreshInterval={refreshInterval}\n              onRefreshChange={onRefreshChange}\n              fullWidth={width === \"full\"}\n              compressed={compressed}\n              isDisabled={isDisabled}\n              data-test-subj={dataTestSubj}\n              className={className}\n            />\n          </EuiFlexItem>\n        ) : (\n          <Fragment>\n            <EuiFlexItem>\n              <EuiFormControlLayout\n                className={classNames(\"euiSuperDatePicker\", className)}\n                compressed={compressed}\n                isDisabled={isDisabled}\n                prepend={quickSelect}\n                append={autoRefreshAppend}\n                data-test-subj={dataTestSubj}\n              >\n                {!isQuickSelectOnly && this.renderDatePickerRange()}\n              </EuiFormControlLayout>\n            </EuiFlexItem>\n            {this.renderUpdateButton()}\n          </Fragment>\n        )}\n      </EuiFlexGroup>\n    );\n  }\n}\n\n// Because EuiSuperDatePicker is a class component and not a functional component,\n// we have to use a render prop here in order for us to pass i18n'd strings/objects/etc\n// to all underlying usages of our timeOptions constants. If someday we convert\n// EuiSuperDatePicker to an FC, we can likely get rid of this wrapper.\nexport const EuiSuperDatePicker: FunctionComponent<EuiSuperDatePickerProps> = (\n  props\n) => (\n  <RenderI18nTimeOptions>\n    {(timeOptions) => (\n      <EuiSuperDatePickerInternal\n        {...props}\n        timeOptions={timeOptions}\n        commonlyUsedRanges={\n          props.commonlyUsedRanges || timeOptions.commonDurationRanges\n        }\n      />\n    )}\n  </RenderI18nTimeOptions>\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}