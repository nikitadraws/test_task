{"ast":null,"code":"/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\n/** @jsxImportSource @emotion/react */import { css } from '@emotion/react';\nimport { euiBreakpoint } from '../global_styling';\n// Note: the only way to get column direction working with `display: grid`\n// the same way `display: flex` works is to manually set `grid-template-rows`,\n// calculated based on the number of children in the grid\nexport const euiFlexGridStyles = function (euiThemeContext) {\n  let gridTemplateRows = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  const {\n    euiTheme\n  } = euiThemeContext;\n  return {\n    euiFlexGrid: css`\n      display: grid;\n    `,\n    responsive: css`\n      ${euiBreakpoint(euiThemeContext, ['xs', 's'])} {\n        grid-template-columns: repeat(1, 1fr);\n        grid-auto-flow: row;\n      }\n    `,\n    direction: {\n      row: css``,\n      column: css`\n        grid-auto-flow: column;\n        grid-template-rows: repeat(${gridTemplateRows}, 1fr);\n      `\n    },\n    columnCount: {\n      '1': css`\n        grid-template-columns: repeat(1, 1fr);\n      `,\n      '2': css`\n        grid-template-columns: repeat(2, 1fr);\n      `,\n      '3': css`\n        grid-template-columns: repeat(3, 1fr);\n      `,\n      '4': css`\n        grid-template-columns: repeat(4, 1fr);\n      `\n    },\n    gutterSizes: {\n      none: css``,\n      s: css`\n        gap: ${euiTheme.size.s};\n      `,\n      m: css`\n        gap: ${euiTheme.size.m};\n      `,\n      l: css`\n        gap: ${euiTheme.size.l};\n      `,\n      xl: css`\n        gap: ${euiTheme.size.xl};\n      `\n    },\n    alignItems: {\n      stretch: css`\n        align-items: stretch;\n      `,\n      start: css`\n        align-items: start;\n      `,\n      end: css`\n        align-items: end;\n      `,\n      center: css`\n        align-items: center;\n      `,\n      baseline: css`\n        align-items: baseline;\n      `\n    }\n  };\n};","map":{"version":3,"names":["css","euiBreakpoint","euiFlexGridStyles","euiThemeContext","gridTemplateRows","euiTheme","euiFlexGrid","responsive","direction","row","column","columnCount","gutterSizes","none","s","size","m","l","xl","alignItems","stretch","start","end","center","baseline"],"sources":["/Users/nikita/Downloads/super_date_picker/src/flex/flex_grid.styles.ts"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\n/** @jsxImportSource @emotion/react */ import { css } from '@emotion/react';\nimport { euiBreakpoint } from '../global_styling';\nimport { UseEuiTheme } from '../services';\n\n// Note: the only way to get column direction working with `display: grid`\n// the same way `display: flex` works is to manually set `grid-template-rows`,\n// calculated based on the number of children in the grid\nexport const euiFlexGridStyles = (\n  euiThemeContext: UseEuiTheme,\n  gridTemplateRows = 0\n) => {\n  const { euiTheme } = euiThemeContext;\n  return {\n    euiFlexGrid: css`\n      display: grid;\n    `,\n    responsive: css`\n      ${euiBreakpoint(euiThemeContext, ['xs', 's'])} {\n        grid-template-columns: repeat(1, 1fr);\n        grid-auto-flow: row;\n      }\n    `,\n    direction: {\n      row: css``,\n      column: css`\n        grid-auto-flow: column;\n        grid-template-rows: repeat(${gridTemplateRows}, 1fr);\n      `,\n    },\n    columnCount: {\n      '1': css`\n        grid-template-columns: repeat(1, 1fr);\n      `,\n      '2': css`\n        grid-template-columns: repeat(2, 1fr);\n      `,\n      '3': css`\n        grid-template-columns: repeat(3, 1fr);\n      `,\n      '4': css`\n        grid-template-columns: repeat(4, 1fr);\n      `,\n    },\n    gutterSizes: {\n      none: css``,\n      s: css`\n        gap: ${euiTheme.size.s};\n      `,\n      m: css`\n        gap: ${euiTheme.size.m};\n      `,\n      l: css`\n        gap: ${euiTheme.size.l};\n      `,\n      xl: css`\n        gap: ${euiTheme.size.xl};\n      `,\n    },\n    alignItems: {\n      stretch: css`\n        align-items: stretch;\n      `,\n      start: css`\n        align-items: start;\n      `,\n      end: css`\n        align-items: end;\n      `,\n      center: css`\n        align-items: center;\n      `,\n      baseline: css`\n        align-items: baseline;\n      `,\n    },\n  };\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAuC,SAASA,GAAG,QAAQ,gBAAgB;AAC3E,SAASC,aAAa,QAAQ,mBAAmB;AAGjD;AACA;AACA;AACA,OAAO,MAAMC,iBAAiB,GAAG,UAC/BC,eAA4B,EAEzB;EAAA,IADHC,gBAAgB,uEAAG,CAAC;EAEpB,MAAM;IAAEC;EAAS,CAAC,GAAGF,eAAe;EACpC,OAAO;IACLG,WAAW,EAAEN,GAAI;AACrB;AACA,KAAK;IACDO,UAAU,EAAEP,GAAI;AACpB,QAAQC,aAAa,CAACE,eAAe,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,CAAE;AACpD;AACA;AACA;AACA,KAAK;IACDK,SAAS,EAAE;MACTC,GAAG,EAAET,GAAI,EAAC;MACVU,MAAM,EAAEV,GAAI;AAClB;AACA,qCAAqCI,gBAAiB;AACtD;IACI,CAAC;IACDO,WAAW,EAAE;MACX,GAAG,EAAEX,GAAI;AACf;AACA,OAAO;MACD,GAAG,EAAEA,GAAI;AACf;AACA,OAAO;MACD,GAAG,EAAEA,GAAI;AACf;AACA,OAAO;MACD,GAAG,EAAEA,GAAI;AACf;AACA;IACI,CAAC;IACDY,WAAW,EAAE;MACXC,IAAI,EAAEb,GAAI,EAAC;MACXc,CAAC,EAAEd,GAAI;AACb,eAAeK,QAAQ,CAACU,IAAI,CAACD,CAAE;AAC/B,OAAO;MACDE,CAAC,EAAEhB,GAAI;AACb,eAAeK,QAAQ,CAACU,IAAI,CAACC,CAAE;AAC/B,OAAO;MACDC,CAAC,EAAEjB,GAAI;AACb,eAAeK,QAAQ,CAACU,IAAI,CAACE,CAAE;AAC/B,OAAO;MACDC,EAAE,EAAElB,GAAI;AACd,eAAeK,QAAQ,CAACU,IAAI,CAACG,EAAG;AAChC;IACI,CAAC;IACDC,UAAU,EAAE;MACVC,OAAO,EAAEpB,GAAI;AACnB;AACA,OAAO;MACDqB,KAAK,EAAErB,GAAI;AACjB;AACA,OAAO;MACDsB,GAAG,EAAEtB,GAAI;AACf;AACA,OAAO;MACDuB,MAAM,EAAEvB,GAAI;AAClB;AACA,OAAO;MACDwB,QAAQ,EAAExB,GAAI;AACpB;AACA;IACI;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}