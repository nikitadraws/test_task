{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/Downloads/super_date_picker/src/button/button.tsx\",\n  _s = $RefreshSig$();\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { forwardRef } from \"react\";\n/** @jsxImportSource @emotion/react */\nimport classNames from \"classnames\";\nimport { EuiButtonContentDeprecated as EuiButtonContent } from \"./_button_content_deprecated\";\nimport { BUTTON_COLORS, useEuiButtonColorCSS, useEuiButtonFocusCSS } from \"themes/amsterdam/global_styling/mixins/button\";\nimport { EuiButtonDisplay, isButtonDisabled } from \"./button_display/_button_display\";\nimport { EuiThemeProvider } from \"../services\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport const COLORS = [...BUTTON_COLORS, \"ghost\"];\nexport const SIZES = [\"s\", \"m\"];\n/**\n * EuiButton is largely responsible for providing relevant props\n * and the logic for element-specific attributes\n */\nexport const EuiButton = props => {\n  _s();\n  const {\n    buttonRef,\n    color: _color = \"primary\",\n    fill,\n    ...rest\n  } = props;\n  const buttonIsDisabled = isButtonDisabled({\n    href: rest.href,\n    isDisabled: rest.isDisabled || rest.disabled,\n    isLoading: rest.isLoading\n  });\n\n  // eslint-disable-next-line no-nested-ternary\n  const color = buttonIsDisabled ? \"disabled\" : _color;\n  const buttonColorStyles = useEuiButtonColorCSS({\n    display: fill ? \"fill\" : \"base\"\n  })[color === \"ghost\" ? \"text\" : color];\n  const buttonFocusStyle = useEuiButtonFocusCSS();\n  const cssStyles = [buttonColorStyles, buttonFocusStyle];\n  if (_color === \"ghost\") {\n    // INCEPTION: If `ghost`, re-implement with a wrapping dark mode theme provider\n    return _jsxDEV(EuiThemeProvider, {\n      colorMode: \"dark\",\n      children: _jsxDEV(EuiButton, {\n        ...props,\n        color: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(EuiButtonDisplay, {\n    className: \"euiButton\",\n    ref: buttonRef,\n    css: cssStyles,\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(EuiButton, \"tWLNpT4O77ggfRKmXrPILMH0oMs=\", false, function () {\n  return [useEuiButtonColorCSS, useEuiButtonFocusCSS];\n});\n_c = EuiButton;\nEuiButton.displayName = \"EuiButton\";\n\n// Use defaultProps for simple pass-through props\nEuiButton.defaultProps = {\n  size: \"m\",\n  color: \"primary\"\n};\nexport const sizeToClassNameMap = {\n  s: \"--small\",\n  m: null\n};\nexport const colorToClassNameMap = {\n  primary: \"--primary\",\n  accent: \"--accent\",\n  success: \"--success\",\n  warning: \"--warning\",\n  danger: \"--danger\",\n  ghost: \"--ghost\",\n  text: \"--text\"\n};\n\n/**\n * *DEPRECATED*\n * EuiButtonDisplay is an internal-only component used for displaying\n * any element as a button.\n * NOTE: This component *must* be below EuiButton in the file and\n * EuiButton must also set a displayName for react-docgen-typescript\n * to correctly set EuiButton's docgenInfo and display a props table.\n * This component has been deprecated in favor of the new EuiButtonDisplay\n * that can be found in `src/components/button/button_display/_button_display.tsx`\n */\nexport const EuiButtonDisplayDeprecated = /*#__PURE__*/forwardRef(_c2 = (_ref, ref) => {\n  let {\n    element = \"button\",\n    baseClassName,\n    children,\n    className,\n    iconType,\n    iconSide = \"left\",\n    color,\n    size = \"m\",\n    isDisabled,\n    isLoading,\n    isSelected,\n    contentProps,\n    textProps,\n    fullWidth,\n    minWidth,\n    style,\n    ...rest\n  } = _ref;\n  const buttonIsDisabled = isButtonDisabled({\n    isLoading,\n    isDisabled\n  });\n  const classes = classNames(baseClassName, color && colorToClassNameMap[color] ? `${baseClassName}${colorToClassNameMap[color]}` : undefined, size && sizeToClassNameMap[size] ? `${baseClassName}${sizeToClassNameMap[size]}` : null, fullWidth && `${baseClassName}--fullWidth`, className);\n\n  /**\n   * Not changing the content or text class names to match baseClassName yet,\n   * as it is a major breaking change.\n   */\n  const contentClassNames = classNames(\"euiButton__content\", contentProps && contentProps.className);\n  const textClassNames = classNames(\"euiButton__text\", textProps && textProps.className);\n  const innerNode = _jsxDEV(EuiButtonContent, {\n    isLoading: isLoading,\n    iconType: iconType,\n    iconSide: iconSide,\n    textProps: {\n      ...textProps,\n      className: textClassNames\n    },\n    ...contentProps,\n    // className has to come last to override contentProps.className\n    className: contentClassNames,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 7\n  }, this);\n  let calculatedStyle = style;\n  if (minWidth !== undefined || minWidth !== null) {\n    calculatedStyle = {\n      ...calculatedStyle,\n      minWidth\n    };\n  }\n  return /*#__PURE__*/React.createElement(element, {\n    className: classes,\n    style: calculatedStyle,\n    disabled: element === \"button\" && buttonIsDisabled,\n    \"aria-pressed\": element === \"button\" ? isSelected : undefined,\n    ref,\n    ...rest\n  }, innerNode);\n});\n_c3 = EuiButtonDisplayDeprecated;\nEuiButtonDisplayDeprecated.displayName = \"EuiButtonDisplay\";\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"EuiButton\");\n$RefreshReg$(_c2, \"EuiButtonDisplayDeprecated$forwardRef\");\n$RefreshReg$(_c3, \"EuiButtonDisplayDeprecated\");","map":{"version":3,"names":["forwardRef","classNames","EuiButtonContentDeprecated","EuiButtonContent","BUTTON_COLORS","useEuiButtonColorCSS","useEuiButtonFocusCSS","EuiButtonDisplay","isButtonDisabled","EuiThemeProvider","React","COLORS","SIZES","EuiButton","props","buttonRef","color","_color","fill","rest","buttonIsDisabled","href","isDisabled","disabled","isLoading","buttonColorStyles","display","buttonFocusStyle","cssStyles","displayName","defaultProps","size","sizeToClassNameMap","s","m","colorToClassNameMap","primary","accent","success","warning","danger","ghost","text","EuiButtonDisplayDeprecated","ref","element","baseClassName","children","className","iconType","iconSide","isSelected","contentProps","textProps","fullWidth","minWidth","style","classes","undefined","contentClassNames","textClassNames","innerNode","calculatedStyle","createElement"],"sources":["/Users/nikita/Downloads/super_date_picker/src/button/button.tsx"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport {\n  forwardRef,\n  FunctionComponent,\n  Ref,\n  CSSProperties,\n  HTMLAttributes,\n  ReactNode,\n} from \"react\";\n/** @jsxImportSource @emotion/react */\nimport classNames from \"classnames\";\n\nimport {\n  CommonProps,\n  ExclusiveUnion,\n  PropsForAnchor,\n  PropsForButton,\n} from \"../common\";\n\nimport { EuiButtonContentDeprecated as EuiButtonContent } from \"./_button_content_deprecated\";\nimport {\n  BUTTON_COLORS,\n  useEuiButtonColorCSS,\n  useEuiButtonFocusCSS,\n  _EuiButtonColor,\n} from \"themes/amsterdam/global_styling/mixins/button\";\nimport {\n  EuiButtonDisplay,\n  EuiButtonDisplayCommonProps,\n  isButtonDisabled,\n} from \"./button_display/_button_display\";\nimport { EuiThemeProvider } from \"../services\";\nimport React from \"react\";\n\nexport const COLORS = [...BUTTON_COLORS, \"ghost\"] as const;\nexport type EuiButtonColor = _EuiButtonColor | \"ghost\";\n\nexport const SIZES = [\"s\", \"m\"] as const;\nexport type EuiButtonSize = typeof SIZES[number];\n\ninterface BaseProps {\n  children?: ReactNode;\n  /**\n   * Make button a solid color for prominence\n   */\n  fill?: boolean;\n  /**\n   * Any of the named color palette options.\n   * **`'ghost'` is set for deprecation. Use EuiThemeProvide.colorMode = 'dark' instead.**\n   */\n  color?: EuiButtonColor;\n  /**\n   * Use size `s` in confined spaces\n   */\n  size?: EuiButtonSize;\n  /**\n   * `disabled` is also allowed\n   */\n  isDisabled?: boolean;\n}\n\nexport interface EuiButtonProps\n  extends BaseProps,\n    Omit<EuiButtonDisplayCommonProps, \"size\">,\n    CommonProps {}\n\nexport type EuiButtonPropsForAnchor = PropsForAnchor<\n  EuiButtonProps,\n  {\n    buttonRef?: Ref<HTMLAnchorElement>;\n  }\n>;\n\nexport type EuiButtonPropsForButton = PropsForButton<\n  EuiButtonProps,\n  {\n    buttonRef?: Ref<HTMLButtonElement>;\n  }\n>;\n\nexport type Props = ExclusiveUnion<\n  EuiButtonPropsForAnchor,\n  EuiButtonPropsForButton\n>;\n\n/**\n * EuiButton is largely responsible for providing relevant props\n * and the logic for element-specific attributes\n */\nexport const EuiButton: FunctionComponent<Props> = (props) => {\n  const { buttonRef, color: _color = \"primary\", fill, ...rest } = props;\n\n  const buttonIsDisabled = isButtonDisabled({\n    href: rest.href,\n    isDisabled: rest.isDisabled || rest.disabled,\n    isLoading: rest.isLoading,\n  });\n\n  // eslint-disable-next-line no-nested-ternary\n  const color = buttonIsDisabled ? \"disabled\" : _color;\n\n  const buttonColorStyles = useEuiButtonColorCSS({\n    display: fill ? \"fill\" : \"base\",\n  })[color === \"ghost\" ? \"text\" : color];\n\n  const buttonFocusStyle = useEuiButtonFocusCSS();\n\n  const cssStyles = [buttonColorStyles, buttonFocusStyle];\n\n  if (_color === \"ghost\") {\n    // INCEPTION: If `ghost`, re-implement with a wrapping dark mode theme provider\n    return (\n      <EuiThemeProvider colorMode=\"dark\">\n        <EuiButton {...props} color=\"text\" />\n      </EuiThemeProvider>\n    );\n  }\n\n  return (\n    <EuiButtonDisplay\n      className=\"euiButton\"\n      ref={buttonRef}\n      css={cssStyles}\n      {...rest}\n    />\n  );\n};\n\nEuiButton.displayName = \"EuiButton\";\n\n// Use defaultProps for simple pass-through props\nEuiButton.defaultProps = {\n  size: \"m\",\n  color: \"primary\",\n};\n\nexport type EuiButtonDisplayProps = EuiButtonProps &\n  HTMLAttributes<HTMLElement> & {\n    /**\n     * Provide a valid element to render the element as\n     */\n    element: \"a\" | \"button\" | \"span\" | \"label\";\n    /**\n     * Provide the component's base class name to build the class list on\n     */\n    baseClassName: string;\n  };\n\nexport const sizeToClassNameMap: { [size in EuiButtonSize]: string | null } = {\n  s: \"--small\",\n  m: null,\n};\n\nexport const colorToClassNameMap: {\n  [color in EuiButtonColor]: string | null;\n} = {\n  primary: \"--primary\",\n  accent: \"--accent\",\n  success: \"--success\",\n  warning: \"--warning\",\n  danger: \"--danger\",\n  ghost: \"--ghost\",\n  text: \"--text\",\n};\n\n/**\n * *DEPRECATED*\n * EuiButtonDisplay is an internal-only component used for displaying\n * any element as a button.\n * NOTE: This component *must* be below EuiButton in the file and\n * EuiButton must also set a displayName for react-docgen-typescript\n * to correctly set EuiButton's docgenInfo and display a props table.\n * This component has been deprecated in favor of the new EuiButtonDisplay\n * that can be found in `src/components/button/button_display/_button_display.tsx`\n */\nexport const EuiButtonDisplayDeprecated = forwardRef<\n  HTMLElement,\n  EuiButtonDisplayProps\n>(\n  (\n    {\n      element = \"button\",\n      baseClassName,\n      children,\n      className,\n      iconType,\n      iconSide = \"left\",\n      color,\n      size = \"m\",\n      isDisabled,\n      isLoading,\n      isSelected,\n      contentProps,\n      textProps,\n      fullWidth,\n      minWidth,\n      style,\n      ...rest\n    },\n    ref\n  ) => {\n    const buttonIsDisabled = isButtonDisabled({ isLoading, isDisabled });\n\n    const classes = classNames(\n      baseClassName,\n      color && colorToClassNameMap[color]\n        ? `${baseClassName}${colorToClassNameMap[color]}`\n        : undefined,\n      size && sizeToClassNameMap[size]\n        ? `${baseClassName}${sizeToClassNameMap[size]}`\n        : null,\n      fullWidth && `${baseClassName}--fullWidth`,\n      className\n    );\n\n    /**\n     * Not changing the content or text class names to match baseClassName yet,\n     * as it is a major breaking change.\n     */\n    const contentClassNames = classNames(\n      \"euiButton__content\",\n      contentProps && contentProps.className\n    );\n\n    const textClassNames = classNames(\n      \"euiButton__text\",\n      textProps && textProps.className\n    );\n\n    const innerNode = (\n      <EuiButtonContent\n        isLoading={isLoading}\n        iconType={iconType}\n        iconSide={iconSide}\n        textProps={{ ...textProps, className: textClassNames }}\n        {...contentProps}\n        // className has to come last to override contentProps.className\n        className={contentClassNames}\n      >\n        {children}\n      </EuiButtonContent>\n    );\n\n    let calculatedStyle: CSSProperties | undefined = style;\n    if (minWidth !== undefined || minWidth !== null) {\n      calculatedStyle = {\n        ...calculatedStyle,\n        minWidth,\n      };\n    }\n\n    return React.createElement(\n      element,\n      {\n        className: classes,\n        style: calculatedStyle,\n        disabled: element === \"button\" && buttonIsDisabled,\n        \"aria-pressed\": element === \"button\" ? isSelected : undefined,\n        ref,\n        ...rest,\n      },\n      innerNode\n    );\n  }\n);\nEuiButtonDisplayDeprecated.displayName = \"EuiButtonDisplay\";\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}