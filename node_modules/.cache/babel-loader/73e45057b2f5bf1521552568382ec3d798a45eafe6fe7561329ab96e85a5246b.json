{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/Downloads/super_date_picker/src/button/_button_content_deprecated.tsx\";\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport classNames from \"classnames\";\nimport { keysOf } from \"../common\";\nimport { EuiLoadingSpinner } from \"../loading\";\nimport { EuiIcon } from \"../icon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst iconSideToClassNameMap = {\n  left: null,\n  right: \"euiButtonContent--iconRight\"\n};\nexport const ICON_SIDES = keysOf(iconSideToClassNameMap);\nexport const EuiButtonContentDeprecated = _ref => {\n  let {\n    children,\n    textProps,\n    isLoading = false,\n    iconType,\n    iconSize = \"m\",\n    iconSide = \"left\",\n    ...contentProps\n  } = _ref;\n  // Add an icon to the button if one exists.\n  let buttonIcon;\n  if (isLoading) {\n    buttonIcon = /*#__PURE__*/_jsxDEV(EuiLoadingSpinner, {\n      className: \"euiButtonContent__spinner\",\n      size: iconSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  } else if (iconType) {\n    buttonIcon = /*#__PURE__*/_jsxDEV(EuiIcon, {\n      className: \"euiButtonContent__icon\",\n      type: iconType,\n      size: iconSize,\n      color: \"inherit\" // forces the icon to inherit its parent color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n  const contentClassNames = classNames(\"euiButtonContent\", iconSide ? iconSideToClassNameMap[iconSide] : null, contentProps && contentProps.className);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    ...contentProps,\n    className: contentClassNames,\n    children: [buttonIcon, /*#__PURE__*/_jsxDEV(\"span\", {\n      ...textProps,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_c = EuiButtonContentDeprecated;\nvar _c;\n$RefreshReg$(_c, \"EuiButtonContentDeprecated\");","map":{"version":3,"names":["classNames","keysOf","EuiLoadingSpinner","EuiIcon","iconSideToClassNameMap","left","right","ICON_SIDES","EuiButtonContentDeprecated","children","textProps","isLoading","iconType","iconSize","iconSide","contentProps","buttonIcon","contentClassNames","className"],"sources":["/Users/nikita/Downloads/super_date_picker/src/button/_button_content_deprecated.tsx"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { HTMLAttributes, FunctionComponent, Ref } from \"react\";\nimport classNames from \"classnames\";\nimport { CommonProps, keysOf } from \"../common\";\nimport { EuiLoadingSpinner } from \"../loading\";\nimport { EuiIcon, IconType } from \"../icon\";\n\nexport type ButtonContentIconSide = \"left\" | \"right\";\n\nconst iconSideToClassNameMap: {\n  [side in ButtonContentIconSide]: string | null;\n} = {\n  left: null,\n  right: \"euiButtonContent--iconRight\",\n};\n\nexport const ICON_SIDES = keysOf(iconSideToClassNameMap);\n\nexport type EuiButtonContentType = HTMLAttributes<HTMLSpanElement>;\n\n/**\n * *INTERNAL ONLY / DEPRECATED*\n * This component is simply a helper component for reuse within other button components\n * This component has been deprecated in favor of the new EuiButtonDisplayContent\n * that can be found in `src/components/button/button_display/_button_display_content.tsx`.\n */\nexport interface EuiButtonContentProps extends CommonProps {\n  /**\n   * Any `type` accepted by EuiIcon\n   */\n  iconType?: IconType;\n  /**\n   * Can only be one side `left` or `right`\n   */\n  iconSide?: ButtonContentIconSide;\n  isLoading?: boolean;\n  /**\n   * Object of props passed to the <span/> wrapping the content's text (only if the children is a `string`)\n   * It doesn't apply to the icon.\n   */\n  textProps?: HTMLAttributes<HTMLSpanElement> &\n    CommonProps & {\n      ref?: Ref<HTMLSpanElement>;\n      \"data-text\"?: string;\n    };\n  iconSize?: \"s\" | \"m\";\n}\n\nexport const EuiButtonContentDeprecated: FunctionComponent<\n  EuiButtonContentType & EuiButtonContentProps\n> = ({\n  children,\n  textProps,\n  isLoading = false,\n  iconType,\n  iconSize = \"m\",\n  iconSide = \"left\",\n  ...contentProps\n}) => {\n  // Add an icon to the button if one exists.\n  let buttonIcon;\n\n  if (isLoading) {\n    buttonIcon = (\n      <EuiLoadingSpinner\n        className=\"euiButtonContent__spinner\"\n        size={iconSize}\n      />\n    );\n  } else if (iconType) {\n    buttonIcon = (\n      <EuiIcon\n        className=\"euiButtonContent__icon\"\n        type={iconType}\n        size={iconSize}\n        color=\"inherit\" // forces the icon to inherit its parent color\n      />\n    );\n  }\n\n  const contentClassNames = classNames(\n    \"euiButtonContent\",\n    iconSide ? iconSideToClassNameMap[iconSide] : null,\n    contentProps && contentProps.className\n  );\n\n  return (\n    <span {...contentProps} className={contentClassNames}>\n      {buttonIcon}\n      <span {...textProps}>{children}</span>\n    </span>\n  );\n};\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,UAAU,MAAM,YAAY;AACnC,SAAsBC,MAAM,QAAQ,WAAW;AAC/C,SAASC,iBAAiB,QAAQ,YAAY;AAC9C,SAASC,OAAO,QAAkB,SAAS;AAAC;AAI5C,MAAMC,sBAEL,GAAG;EACFC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGN,MAAM,CAACG,sBAAsB,CAAC;AAgCxD,OAAO,MAAMI,0BAEZ,GAAG,QAQE;EAAA,IARD;IACHC,QAAQ;IACRC,SAAS;IACTC,SAAS,GAAG,KAAK;IACjBC,QAAQ;IACRC,QAAQ,GAAG,GAAG;IACdC,QAAQ,GAAG,MAAM;IACjB,GAAGC;EACL,CAAC;EACC;EACA,IAAIC,UAAU;EAEd,IAAIL,SAAS,EAAE;IACbK,UAAU,gBACR,QAAC,iBAAiB;MAChB,SAAS,EAAC,2BAA2B;MACrC,IAAI,EAAEH;IAAS;MAAA;MAAA;MAAA;IAAA,QAElB;EACH,CAAC,MAAM,IAAID,QAAQ,EAAE;IACnBI,UAAU,gBACR,QAAC,OAAO;MACN,SAAS,EAAC,wBAAwB;MAClC,IAAI,EAAEJ,QAAS;MACf,IAAI,EAAEC,QAAS;MACf,KAAK,EAAC,SAAS,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAEnB;EACH;EAEA,MAAMI,iBAAiB,GAAGjB,UAAU,CAClC,kBAAkB,EAClBc,QAAQ,GAAGV,sBAAsB,CAACU,QAAQ,CAAC,GAAG,IAAI,EAClDC,YAAY,IAAIA,YAAY,CAACG,SAAS,CACvC;EAED,oBACE;IAAA,GAAUH,YAAY;IAAE,SAAS,EAAEE,iBAAkB;IAAA,WAClDD,UAAU,eACX;MAAA,GAAUN,SAAS;MAAA,UAAGD;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QACjC;AAEX,CAAC;AAAC,KA5CWD,0BAEZ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}