{"ast":null,"code":"/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport _isFunction from 'lodash/isFunction';\nimport _isArray from 'lodash/isArray';\nimport _isString from 'lodash/isString';\nimport _isBoolean from 'lodash/isBoolean';\nimport _isNumber from 'lodash/isNumber';\nimport _isNaN from 'lodash/isNaN';\nimport _isObject from 'lodash/isObject';\n\n// wrap the lodash functions to avoid having lodash's TS type definition from being\n// exported, which can conflict with the lodash namespace if other versions are used\n\nexport const isFunction = value => _isFunction(value);\nexport const isArray = value => _isArray(value);\nexport const isString = value => _isString(value);\nexport const isBoolean = value => _isBoolean(value);\nexport const isNumber = value => _isNumber(value);\nexport const isNaN = value => _isNaN(value);\nexport const isObject = value => _isObject(value);","map":{"version":3,"names":["_isFunction","_isArray","_isString","_isBoolean","_isNumber","_isNaN","_isObject","isFunction","value","isArray","isString","isBoolean","isNumber","isNaN","isObject"],"sources":["/Users/nikita/Downloads/super_date_picker/src/services/predicate/lodash_predicates.ts"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport _isFunction from 'lodash/isFunction';\nimport _isArray from 'lodash/isArray';\nimport _isString from 'lodash/isString';\nimport _isBoolean from 'lodash/isBoolean';\nimport _isNumber from 'lodash/isNumber';\nimport _isNaN from 'lodash/isNaN';\nimport _isObject from 'lodash/isObject';\n\n// wrap the lodash functions to avoid having lodash's TS type definition from being\n// exported, which can conflict with the lodash namespace if other versions are used\n\nexport const isFunction = (value: any): value is (...args: any[]) => any =>\n  _isFunction(value);\nexport const isArray = (value: any): value is any[] => _isArray(value);\nexport const isString = (value: any): value is string => _isString(value);\nexport const isBoolean = (value: any): value is boolean => _isBoolean(value);\nexport const isNumber = (value: any): value is number => _isNumber(value);\nexport const isNaN = (value: any) => _isNaN(value);\nexport const isObject = (value: any): value is object => _isObject(value);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,WAAW,MAAM,mBAAmB;AAC3C,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,SAAS,MAAM,iBAAiB;;AAEvC;AACA;;AAEA,OAAO,MAAMC,UAAU,GAAIC,KAAU,IACnCR,WAAW,CAACQ,KAAK,CAAC;AACpB,OAAO,MAAMC,OAAO,GAAID,KAAU,IAAqBP,QAAQ,CAACO,KAAK,CAAC;AACtE,OAAO,MAAME,QAAQ,GAAIF,KAAU,IAAsBN,SAAS,CAACM,KAAK,CAAC;AACzE,OAAO,MAAMG,SAAS,GAAIH,KAAU,IAAuBL,UAAU,CAACK,KAAK,CAAC;AAC5E,OAAO,MAAMI,QAAQ,GAAIJ,KAAU,IAAsBJ,SAAS,CAACI,KAAK,CAAC;AACzE,OAAO,MAAMK,KAAK,GAAIL,KAAU,IAAKH,MAAM,CAACG,KAAK,CAAC;AAClD,OAAO,MAAMM,QAAQ,GAAIN,KAAU,IAAsBF,SAAS,CAACE,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}