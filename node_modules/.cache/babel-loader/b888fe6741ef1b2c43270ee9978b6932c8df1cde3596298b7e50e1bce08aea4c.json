{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { useEuiI18n } from '../../i18n';\nconst MS_IN_SECOND = 1000;\nconst MS_IN_MINUTE = 60 * MS_IN_SECOND;\nconst MS_IN_HOUR = 60 * MS_IN_MINUTE;\nconst MS_IN_DAY = 24 * MS_IN_HOUR;\n/**\n * Pretty interval i18n strings\n *\n * Units should not be simply concatenated because different languages\n * will have different grammar/positions for time than English\n */\nconst usePrettyIntervalI18n = interval => {\n  _s();\n  return {\n    s: useEuiI18n('euiPrettyInterval.seconds', _ref => {\n      let {\n        interval\n      } = _ref;\n      return `${interval} second${interval > 1 ? 's' : ''}`;\n    }, {\n      interval\n    }),\n    m: useEuiI18n('euiPrettyInterval.minutes', _ref2 => {\n      let {\n        interval\n      } = _ref2;\n      return `${interval} minute${interval > 1 ? 's' : ''}`;\n    }, {\n      interval\n    }),\n    h: useEuiI18n('euiPrettyInterval.hours', _ref3 => {\n      let {\n        interval\n      } = _ref3;\n      return `${interval} hour${interval > 1 ? 's' : ''}`;\n    }, {\n      interval\n    }),\n    d: useEuiI18n('euiPrettyInterval.days', _ref4 => {\n      let {\n        interval\n      } = _ref4;\n      return `${interval} day${interval > 1 ? 's' : ''}`;\n    }, {\n      interval\n    }),\n    shorthand: {\n      s: useEuiI18n('euiPrettyInterval.secondsShorthand', '{interval} s', {\n        interval\n      }),\n      m: useEuiI18n('euiPrettyInterval.minutesShorthand', '{interval} m', {\n        interval\n      }),\n      h: useEuiI18n('euiPrettyInterval.hoursShorthand', '{interval} h', {\n        interval\n      }),\n      d: useEuiI18n('euiPrettyInterval.daysShorthand', '{interval} d', {\n        interval\n      })\n    }\n  };\n};\n_s(usePrettyIntervalI18n, \"uSEcmvsm375TGCa6riRR7L5BjpI=\", false, function () {\n  return [useEuiI18n, useEuiI18n, useEuiI18n, useEuiI18n, useEuiI18n, useEuiI18n, useEuiI18n, useEuiI18n];\n});\nexport const usePrettyInterval = function (isPaused, intervalInMs) {\n  _s2();\n  let shortHand = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  let prettyInterval = '';\n  let interval;\n  let unitId;\n  if (intervalInMs < MS_IN_MINUTE) {\n    interval = Math.round(intervalInMs / MS_IN_SECOND);\n    unitId = 's';\n  } else if (intervalInMs < MS_IN_HOUR) {\n    interval = Math.round(intervalInMs / MS_IN_MINUTE);\n    unitId = 'm';\n  } else if (intervalInMs < MS_IN_DAY) {\n    interval = Math.round(intervalInMs / MS_IN_HOUR);\n    unitId = 'h';\n  } else {\n    interval = Math.round(intervalInMs / MS_IN_DAY);\n    unitId = 'd';\n  }\n  const prettyIntervalI18n = usePrettyIntervalI18n(interval);\n  prettyInterval = shortHand ? prettyIntervalI18n.shorthand[unitId] : prettyIntervalI18n[unitId];\n  const off = useEuiI18n('euiPrettyInterval.off', 'Off');\n  if (isPaused || intervalInMs === 0) {\n    prettyInterval = off;\n  }\n  return prettyInterval;\n};\n_s2(usePrettyInterval, \"aogX/5q3UWTz3HK9K362oXG+U84=\", false, function () {\n  return [usePrettyIntervalI18n, useEuiI18n];\n});","map":{"version":3,"names":["useEuiI18n","MS_IN_SECOND","MS_IN_MINUTE","MS_IN_HOUR","MS_IN_DAY","usePrettyIntervalI18n","interval","s","m","h","d","shorthand","usePrettyInterval","isPaused","intervalInMs","shortHand","prettyInterval","unitId","Math","round","prettyIntervalI18n","off"],"sources":["/Users/nikita/Downloads/super_date_picker/src/date_picker/super_date_picker/pretty_interval.ts"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { useEuiI18n } from '../../i18n';\n\nconst MS_IN_SECOND = 1000;\nconst MS_IN_MINUTE = 60 * MS_IN_SECOND;\nconst MS_IN_HOUR = 60 * MS_IN_MINUTE;\nconst MS_IN_DAY = 24 * MS_IN_HOUR;\n\ntype IntervalUnitId = 's' | 'm' | 'h' | 'd';\n\n/**\n * Pretty interval i18n strings\n *\n * Units should not be simply concatenated because different languages\n * will have different grammar/positions for time than English\n */\nconst usePrettyIntervalI18n = (interval: number) => ({\n  s: useEuiI18n(\n    'euiPrettyInterval.seconds',\n    ({ interval }) => `${interval} second${interval > 1 ? 's' : ''}`,\n    { interval }\n  ),\n  m: useEuiI18n(\n    'euiPrettyInterval.minutes',\n    ({ interval }) => `${interval} minute${interval > 1 ? 's' : ''}`,\n    { interval }\n  ),\n  h: useEuiI18n(\n    'euiPrettyInterval.hours',\n    ({ interval }) => `${interval} hour${interval > 1 ? 's' : ''}`,\n    { interval }\n  ),\n  d: useEuiI18n(\n    'euiPrettyInterval.days',\n    ({ interval }) => `${interval} day${interval > 1 ? 's' : ''}`,\n    { interval }\n  ),\n  shorthand: {\n    s: useEuiI18n('euiPrettyInterval.secondsShorthand', '{interval} s', {\n      interval,\n    }),\n    m: useEuiI18n('euiPrettyInterval.minutesShorthand', '{interval} m', {\n      interval,\n    }),\n    h: useEuiI18n('euiPrettyInterval.hoursShorthand', '{interval} h', {\n      interval,\n    }),\n    d: useEuiI18n('euiPrettyInterval.daysShorthand', '{interval} d', {\n      interval,\n    }),\n  },\n});\n\nexport const usePrettyInterval = (\n  isPaused: boolean,\n  intervalInMs: number,\n  shortHand: boolean = false\n) => {\n  let prettyInterval = '';\n  let interval: number;\n  let unitId: IntervalUnitId;\n\n  if (intervalInMs < MS_IN_MINUTE) {\n    interval = Math.round(intervalInMs / MS_IN_SECOND);\n    unitId = 's';\n  } else if (intervalInMs < MS_IN_HOUR) {\n    interval = Math.round(intervalInMs / MS_IN_MINUTE);\n    unitId = 'm';\n  } else if (intervalInMs < MS_IN_DAY) {\n    interval = Math.round(intervalInMs / MS_IN_HOUR);\n    unitId = 'h';\n  } else {\n    interval = Math.round(intervalInMs / MS_IN_DAY);\n    unitId = 'd';\n  }\n  const prettyIntervalI18n = usePrettyIntervalI18n(interval);\n  prettyInterval = shortHand\n    ? prettyIntervalI18n.shorthand[unitId]\n    : prettyIntervalI18n[unitId];\n\n  const off = useEuiI18n('euiPrettyInterval.off', 'Off');\n  if (isPaused || intervalInMs === 0) {\n    prettyInterval = off;\n  }\n\n  return prettyInterval;\n};\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,UAAU,QAAQ,YAAY;AAEvC,MAAMC,YAAY,GAAG,IAAI;AACzB,MAAMC,YAAY,GAAG,EAAE,GAAGD,YAAY;AACtC,MAAME,UAAU,GAAG,EAAE,GAAGD,YAAY;AACpC,MAAME,SAAS,GAAG,EAAE,GAAGD,UAAU;AAIjC;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,qBAAqB,GAAIC,QAAgB;EAAA;EAAA,OAAM;IACnDC,CAAC,EAAEP,UAAU,CACX,2BAA2B,EAC3B;MAAA,IAAC;QAAEM;MAAS,CAAC;MAAA,OAAM,GAAEA,QAAS,UAASA,QAAQ,GAAG,CAAC,GAAG,GAAG,GAAG,EAAG,EAAC;IAAA,GAChE;MAAEA;IAAS,CAAC,CACb;IACDE,CAAC,EAAER,UAAU,CACX,2BAA2B,EAC3B;MAAA,IAAC;QAAEM;MAAS,CAAC;MAAA,OAAM,GAAEA,QAAS,UAASA,QAAQ,GAAG,CAAC,GAAG,GAAG,GAAG,EAAG,EAAC;IAAA,GAChE;MAAEA;IAAS,CAAC,CACb;IACDG,CAAC,EAAET,UAAU,CACX,yBAAyB,EACzB;MAAA,IAAC;QAAEM;MAAS,CAAC;MAAA,OAAM,GAAEA,QAAS,QAAOA,QAAQ,GAAG,CAAC,GAAG,GAAG,GAAG,EAAG,EAAC;IAAA,GAC9D;MAAEA;IAAS,CAAC,CACb;IACDI,CAAC,EAAEV,UAAU,CACX,wBAAwB,EACxB;MAAA,IAAC;QAAEM;MAAS,CAAC;MAAA,OAAM,GAAEA,QAAS,OAAMA,QAAQ,GAAG,CAAC,GAAG,GAAG,GAAG,EAAG,EAAC;IAAA,GAC7D;MAAEA;IAAS,CAAC,CACb;IACDK,SAAS,EAAE;MACTJ,CAAC,EAAEP,UAAU,CAAC,oCAAoC,EAAE,cAAc,EAAE;QAClEM;MACF,CAAC,CAAC;MACFE,CAAC,EAAER,UAAU,CAAC,oCAAoC,EAAE,cAAc,EAAE;QAClEM;MACF,CAAC,CAAC;MACFG,CAAC,EAAET,UAAU,CAAC,kCAAkC,EAAE,cAAc,EAAE;QAChEM;MACF,CAAC,CAAC;MACFI,CAAC,EAAEV,UAAU,CAAC,iCAAiC,EAAE,cAAc,EAAE;QAC/DM;MACF,CAAC;IACH;EACF,CAAC;AAAA,CAAC;AAAC,GAnCGD,qBAAqB;EAAA,QACtBL,UAAU,EAKVA,UAAU,EAKVA,UAAU,EAKVA,UAAU,EAMRA,UAAU,EAGVA,UAAU,EAGVA,UAAU,EAGVA,UAAU;AAAA;AAMjB,OAAO,MAAMY,iBAAiB,GAAG,UAC/BC,QAAiB,EACjBC,YAAoB,EAEjB;EAAA;EAAA,IADHC,SAAkB,uEAAG,KAAK;EAE1B,IAAIC,cAAc,GAAG,EAAE;EACvB,IAAIV,QAAgB;EACpB,IAAIW,MAAsB;EAE1B,IAAIH,YAAY,GAAGZ,YAAY,EAAE;IAC/BI,QAAQ,GAAGY,IAAI,CAACC,KAAK,CAACL,YAAY,GAAGb,YAAY,CAAC;IAClDgB,MAAM,GAAG,GAAG;EACd,CAAC,MAAM,IAAIH,YAAY,GAAGX,UAAU,EAAE;IACpCG,QAAQ,GAAGY,IAAI,CAACC,KAAK,CAACL,YAAY,GAAGZ,YAAY,CAAC;IAClDe,MAAM,GAAG,GAAG;EACd,CAAC,MAAM,IAAIH,YAAY,GAAGV,SAAS,EAAE;IACnCE,QAAQ,GAAGY,IAAI,CAACC,KAAK,CAACL,YAAY,GAAGX,UAAU,CAAC;IAChDc,MAAM,GAAG,GAAG;EACd,CAAC,MAAM;IACLX,QAAQ,GAAGY,IAAI,CAACC,KAAK,CAACL,YAAY,GAAGV,SAAS,CAAC;IAC/Ca,MAAM,GAAG,GAAG;EACd;EACA,MAAMG,kBAAkB,GAAGf,qBAAqB,CAACC,QAAQ,CAAC;EAC1DU,cAAc,GAAGD,SAAS,GACtBK,kBAAkB,CAACT,SAAS,CAACM,MAAM,CAAC,GACpCG,kBAAkB,CAACH,MAAM,CAAC;EAE9B,MAAMI,GAAG,GAAGrB,UAAU,CAAC,uBAAuB,EAAE,KAAK,CAAC;EACtD,IAAIa,QAAQ,IAAIC,YAAY,KAAK,CAAC,EAAE;IAClCE,cAAc,GAAGK,GAAG;EACtB;EAEA,OAAOL,cAAc;AACvB,CAAC;AAAC,IAjCWJ,iBAAiB;EAAA,QAsBDP,qBAAqB,EAKpCL,UAAU;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}