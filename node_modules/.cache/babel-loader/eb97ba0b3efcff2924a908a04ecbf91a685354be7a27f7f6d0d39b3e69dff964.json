{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/Downloads/super_date_picker/src/form/field_text/field_text.tsx\",\n  _s = $RefreshSig$();\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport classNames from \"classnames\";\nimport { EuiFormControlLayout } from \"../form_control_layout\";\nimport { EuiValidatableControl } from \"../validatable_control\";\nimport { getFormControlClassNameForIconCount } from \"../form_control_layout/_num_icons\";\nimport { useFormContext } from \"../eui_form_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EuiFieldText = props => {\n  _s();\n  const {\n    defaultFullWidth\n  } = useFormContext();\n  const {\n    id,\n    name,\n    placeholder,\n    value,\n    className,\n    icon,\n    isInvalid,\n    inputRef,\n    fullWidth = defaultFullWidth,\n    isLoading,\n    compressed,\n    prepend,\n    append,\n    readOnly,\n    controlOnly,\n    ...rest\n  } = props;\n  const numIconsClass = getFormControlClassNameForIconCount({\n    isInvalid,\n    isLoading\n  });\n  const classes = classNames(\"euiFieldText\", className, numIconsClass, {\n    \"euiFieldText--withIcon\": icon,\n    \"euiFieldText--fullWidth\": fullWidth,\n    \"euiFieldText--compressed\": compressed,\n    \"euiFieldText--inGroup\": prepend || append,\n    \"euiFieldText-isLoading\": isLoading\n  });\n  const control = /*#__PURE__*/_jsxDEV(EuiValidatableControl, {\n    isInvalid: isInvalid,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: id,\n      name: name,\n      placeholder: placeholder,\n      className: classes,\n      value: value,\n      ref: inputRef,\n      readOnly: readOnly,\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n  if (controlOnly) return control;\n  return /*#__PURE__*/_jsxDEV(EuiFormControlLayout, {\n    icon: icon,\n    fullWidth: fullWidth,\n    isLoading: isLoading,\n    isInvalid: isInvalid,\n    compressed: compressed,\n    readOnly: readOnly,\n    prepend: prepend,\n    append: append,\n    inputId: id,\n    children: control\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(EuiFieldText, \"r29orIZyy5tmCzP1W2OcvSFKH7Q=\", false, function () {\n  return [useFormContext];\n});\n_c = EuiFieldText;\nvar _c;\n$RefreshReg$(_c, \"EuiFieldText\");","map":{"version":3,"names":["classNames","EuiFormControlLayout","EuiValidatableControl","getFormControlClassNameForIconCount","useFormContext","EuiFieldText","props","defaultFullWidth","id","name","placeholder","value","className","icon","isInvalid","inputRef","fullWidth","isLoading","compressed","prepend","append","readOnly","controlOnly","rest","numIconsClass","classes","control"],"sources":["/Users/nikita/Downloads/super_date_picker/src/form/field_text/field_text.tsx"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { InputHTMLAttributes, Ref, FunctionComponent } from \"react\";\nimport { CommonProps } from \"../../common\";\nimport classNames from \"classnames\";\n\nimport {\n  EuiFormControlLayout,\n  EuiFormControlLayoutProps,\n} from \"../form_control_layout\";\n\nimport { EuiValidatableControl } from \"../validatable_control\";\nimport { getFormControlClassNameForIconCount } from \"../form_control_layout/_num_icons\";\nimport { useFormContext } from \"../eui_form_context\";\n\nexport type EuiFieldTextProps = InputHTMLAttributes<HTMLInputElement> &\n  CommonProps & {\n    icon?: EuiFormControlLayoutProps[\"icon\"];\n    isInvalid?: boolean;\n    /**\n     * Expand to fill 100% of the parent.\n     * Defaults to `fullWidth` prop of `<EuiForm>`.\n     * @default false\n     */\n    fullWidth?: boolean;\n    isLoading?: boolean;\n    readOnly?: boolean;\n    inputRef?: Ref<HTMLInputElement>;\n\n    /**\n     * Creates an input group with element(s) coming before input.\n     * `string` | `ReactElement` or an array of these\n     */\n    prepend?: EuiFormControlLayoutProps[\"prepend\"];\n\n    /**\n     * Creates an input group with element(s) coming after input.\n     * `string` | `ReactElement` or an array of these\n     */\n    append?: EuiFormControlLayoutProps[\"append\"];\n\n    /**\n     * Completely removes form control layout wrapper and ignores\n     * icon, prepend, and append. Best used inside EuiFormControlLayoutDelimited.\n     */\n    controlOnly?: boolean;\n\n    /**\n     * when `true` creates a shorter height input\n     */\n    compressed?: boolean;\n  };\n\nexport const EuiFieldText: FunctionComponent<EuiFieldTextProps> = (props) => {\n  const { defaultFullWidth } = useFormContext();\n  const {\n    id,\n    name,\n    placeholder,\n    value,\n    className,\n    icon,\n    isInvalid,\n    inputRef,\n    fullWidth = defaultFullWidth,\n    isLoading,\n    compressed,\n    prepend,\n    append,\n    readOnly,\n    controlOnly,\n    ...rest\n  } = props;\n\n  const numIconsClass = getFormControlClassNameForIconCount({\n    isInvalid,\n    isLoading,\n  });\n\n  const classes = classNames(\"euiFieldText\", className, numIconsClass, {\n    \"euiFieldText--withIcon\": icon,\n    \"euiFieldText--fullWidth\": fullWidth,\n    \"euiFieldText--compressed\": compressed,\n    \"euiFieldText--inGroup\": prepend || append,\n    \"euiFieldText-isLoading\": isLoading,\n  });\n\n  const control = (\n    <EuiValidatableControl isInvalid={isInvalid}>\n      <input\n        type=\"text\"\n        id={id}\n        name={name}\n        placeholder={placeholder}\n        className={classes}\n        value={value}\n        ref={inputRef}\n        readOnly={readOnly}\n        {...rest}\n      />\n    </EuiValidatableControl>\n  );\n\n  if (controlOnly) return control;\n\n  return (\n    <EuiFormControlLayout\n      icon={icon}\n      fullWidth={fullWidth}\n      isLoading={isLoading}\n      isInvalid={isInvalid}\n      compressed={compressed}\n      readOnly={readOnly}\n      prepend={prepend}\n      append={append}\n      inputId={id}\n    >\n      {control}\n    </EuiFormControlLayout>\n  );\n};\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,OAAOA,UAAU,MAAM,YAAY;AAEnC,SACEC,oBAAoB,QAEf,wBAAwB;AAE/B,SAASC,qBAAqB,QAAQ,wBAAwB;AAC9D,SAASC,mCAAmC,QAAQ,mCAAmC;AACvF,SAASC,cAAc,QAAQ,qBAAqB;AAAC;AAwCrD,OAAO,MAAMC,YAAkD,GAAIC,KAAK,IAAK;EAAA;EAC3E,MAAM;IAAEC;EAAiB,CAAC,GAAGH,cAAc,EAAE;EAC7C,MAAM;IACJI,EAAE;IACFC,IAAI;IACJC,WAAW;IACXC,KAAK;IACLC,SAAS;IACTC,IAAI;IACJC,SAAS;IACTC,QAAQ;IACRC,SAAS,GAAGT,gBAAgB;IAC5BU,SAAS;IACTC,UAAU;IACVC,OAAO;IACPC,MAAM;IACNC,QAAQ;IACRC,WAAW;IACX,GAAGC;EACL,CAAC,GAAGjB,KAAK;EAET,MAAMkB,aAAa,GAAGrB,mCAAmC,CAAC;IACxDW,SAAS;IACTG;EACF,CAAC,CAAC;EAEF,MAAMQ,OAAO,GAAGzB,UAAU,CAAC,cAAc,EAAEY,SAAS,EAAEY,aAAa,EAAE;IACnE,wBAAwB,EAAEX,IAAI;IAC9B,yBAAyB,EAAEG,SAAS;IACpC,0BAA0B,EAAEE,UAAU;IACtC,uBAAuB,EAAEC,OAAO,IAAIC,MAAM;IAC1C,wBAAwB,EAAEH;EAC5B,CAAC,CAAC;EAEF,MAAMS,OAAO,gBACX,QAAC,qBAAqB;IAAC,SAAS,EAAEZ,SAAU;IAAA,uBAC1C;MACE,IAAI,EAAC,MAAM;MACX,EAAE,EAAEN,EAAG;MACP,IAAI,EAAEC,IAAK;MACX,WAAW,EAAEC,WAAY;MACzB,SAAS,EAAEe,OAAQ;MACnB,KAAK,EAAEd,KAAM;MACb,GAAG,EAAEI,QAAS;MACd,QAAQ,EAAEM,QAAS;MAAA,GACfE;IAAI;MAAA;MAAA;MAAA;IAAA;EACR;IAAA;IAAA;IAAA;EAAA,QAEL;EAED,IAAID,WAAW,EAAE,OAAOI,OAAO;EAE/B,oBACE,QAAC,oBAAoB;IACnB,IAAI,EAAEb,IAAK;IACX,SAAS,EAAEG,SAAU;IACrB,SAAS,EAAEC,SAAU;IACrB,SAAS,EAAEH,SAAU;IACrB,UAAU,EAAEI,UAAW;IACvB,QAAQ,EAAEG,QAAS;IACnB,OAAO,EAAEF,OAAQ;IACjB,MAAM,EAAEC,MAAO;IACf,OAAO,EAAEZ,EAAG;IAAA,UAEXkB;EAAO;IAAA;IAAA;IAAA;EAAA,QACa;AAE3B,CAAC;AAAC,GAnEWrB,YAAkD;EAAA,QAChCD,cAAc;AAAA;AAAA,KADhCC,YAAkD;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}