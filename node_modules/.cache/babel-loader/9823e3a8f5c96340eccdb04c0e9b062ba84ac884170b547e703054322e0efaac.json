{"ast":null,"code":"var _s = $RefreshSig$();\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { useRef } from 'react';\n\n/**\n * Wraps the given `value` into a `MutableRefObject` and keeps the `current`\n * value up-to-date on every render cycle.\n */\nexport function useLatest(value) {\n  _s();\n  const latestValueRef = useRef(value);\n  latestValueRef.current = value;\n  return latestValueRef;\n}\n_s(useLatest, \"++T9lCMQbLpfF+T+Lhv5ucRwDDg=\");","map":{"version":3,"names":["useRef","useLatest","value","latestValueRef","current"],"sources":["/Users/nikita/Downloads/super_date_picker/src/services/hooks/useLatest.ts"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { MutableRefObject, useRef } from 'react';\n\n/**\n * Wraps the given `value` into a `MutableRefObject` and keeps the `current`\n * value up-to-date on every render cycle.\n */\nexport function useLatest<Value>(value: Value): MutableRefObject<Value | null> {\n  const latestValueRef = useRef(value);\n  latestValueRef.current = value;\n  return latestValueRef;\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAA2BA,MAAM,QAAQ,OAAO;;AAEhD;AACA;AACA;AACA;AACA,OAAO,SAASC,SAAS,CAAQC,KAAY,EAAkC;EAAA;EAC7E,MAAMC,cAAc,GAAGH,MAAM,CAACE,KAAK,CAAC;EACpCC,cAAc,CAACC,OAAO,GAAGF,KAAK;EAC9B,OAAOC,cAAc;AACvB;AAAC,GAJeF,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}