{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/Downloads/super_date_picker/src/date_picker/super_date_picker/date_popover/date_popover_button.tsx\",\n  _s = $RefreshSig$();\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport classNames from \"classnames\";\nimport { useEuiI18n } from \"../../../i18n\";\nimport { EuiPopover } from \"../../../popover\";\nimport { useFormatTimeString } from \"../pretty_duration\";\nimport { EuiDatePopoverContent } from \"./date_popover_content\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EuiDatePopoverButton = props => {\n  _s();\n  const {\n    position,\n    isDisabled,\n    isInvalid,\n    needsUpdating,\n    value,\n    buttonProps,\n    roundUp,\n    onChange,\n    locale,\n    dateFormat,\n    utcOffset,\n    timeFormat,\n    isOpen,\n    onPopoverToggle,\n    onPopoverClose,\n    compressed,\n    timeOptions,\n    ...rest\n  } = props;\n  const classes = classNames([\"euiDatePopoverButton\", `euiDatePopoverButton--${position}`, {\n    \"euiDatePopoverButton--compressed\": compressed,\n    \"euiDatePopoverButton-isSelected\": isOpen,\n    \"euiDatePopoverButton-isInvalid\": isInvalid,\n    \"euiDatePopoverButton-needsUpdating\": needsUpdating,\n    \"euiDatePopoverButton-disabled\": isDisabled\n  }]);\n  const formattedValue = useFormatTimeString(value, dateFormat, roundUp, locale);\n  let title = formattedValue;\n  const invalidTitle = useEuiI18n(\"euiDatePopoverButton.invalidTitle\", \"Invalid date: {title}\", {\n    title\n  });\n  const outdatedTitle = useEuiI18n(\"euiDatePopoverButton.outdatedTitle\", \"Update needed: {title}\", {\n    title\n  });\n  if (isInvalid) {\n    title = invalidTitle;\n  } else if (needsUpdating) {\n    title = outdatedTitle;\n  }\n  const button = /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onPopoverToggle,\n    className: classes,\n    title: title,\n    disabled: isDisabled,\n    \"data-test-subj\": `superDatePicker${position}DatePopoverButton`,\n    ...buttonProps,\n    children: formattedValue\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(EuiPopover, {\n    button: button,\n    isOpen: isOpen,\n    closePopover: onPopoverClose,\n    anchorPosition: position === \"start\" ? \"downLeft\" : \"downRight\",\n    display: \"block\",\n    panelPaddingSize: \"none\",\n    ...rest,\n    children: /*#__PURE__*/_jsxDEV(EuiDatePopoverContent, {\n      value: value,\n      roundUp: roundUp,\n      onChange: onChange,\n      dateFormat: dateFormat,\n      timeFormat: timeFormat,\n      locale: locale,\n      position: position,\n      utcOffset: utcOffset,\n      timeOptions: timeOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(EuiDatePopoverButton, \"WCHMFfo3Nxtlj6hENX7VYej1EeA=\", false, function () {\n  return [useFormatTimeString, useEuiI18n, useEuiI18n];\n});\n_c = EuiDatePopoverButton;\nEuiDatePopoverButton.displayName = \"EuiDatePopoverButton\";\nvar _c;\n$RefreshReg$(_c, \"EuiDatePopoverButton\");","map":{"version":3,"names":["classNames","useEuiI18n","EuiPopover","useFormatTimeString","EuiDatePopoverContent","EuiDatePopoverButton","props","position","isDisabled","isInvalid","needsUpdating","value","buttonProps","roundUp","onChange","locale","dateFormat","utcOffset","timeFormat","isOpen","onPopoverToggle","onPopoverClose","compressed","timeOptions","rest","classes","formattedValue","title","invalidTitle","outdatedTitle","button","displayName"],"sources":["/Users/nikita/Downloads/super_date_picker/src/date_picker/super_date_picker/date_popover/date_popover_button.tsx"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport {\n  FunctionComponent,\n  ButtonHTMLAttributes,\n  MouseEventHandler,\n} from \"react\";\nimport classNames from \"classnames\";\nimport { LocaleSpecifier } from \"moment\"; // eslint-disable-line import/named\n\nimport { CommonProps } from \"../../../common\";\nimport { useEuiI18n } from \"../../../i18n\";\nimport { EuiPopover, EuiPopoverProps } from \"../../../popover\";\n\nimport { TimeOptions } from \"../time_options\";\nimport { useFormatTimeString } from \"../pretty_duration\";\nimport {\n  EuiDatePopoverContent,\n  EuiDatePopoverContentProps,\n} from \"./date_popover_content\";\n\nexport interface EuiDatePopoverButtonProps {\n  className?: string;\n  buttonProps?: CommonProps & ButtonHTMLAttributes<HTMLButtonElement>;\n  dateFormat: string;\n  isDisabled?: boolean;\n  isInvalid?: boolean;\n  isOpen: boolean;\n  needsUpdating?: boolean;\n  locale?: LocaleSpecifier;\n  onChange: NonNullable<EuiDatePopoverContentProps[\"onChange\"]>;\n  onPopoverClose: EuiPopoverProps[\"closePopover\"];\n  onPopoverToggle: MouseEventHandler<HTMLButtonElement>;\n  position: \"start\" | \"end\";\n  roundUp?: boolean;\n  timeFormat: string;\n  value: string;\n  utcOffset?: number;\n  compressed?: boolean;\n  timeOptions: TimeOptions;\n}\n\nexport const EuiDatePopoverButton: FunctionComponent<\n  EuiDatePopoverButtonProps\n> = (props) => {\n  const {\n    position,\n    isDisabled,\n    isInvalid,\n    needsUpdating,\n    value,\n    buttonProps,\n    roundUp,\n    onChange,\n    locale,\n    dateFormat,\n    utcOffset,\n    timeFormat,\n    isOpen,\n    onPopoverToggle,\n    onPopoverClose,\n    compressed,\n    timeOptions,\n    ...rest\n  } = props;\n\n  const classes = classNames([\n    \"euiDatePopoverButton\",\n    `euiDatePopoverButton--${position}`,\n    {\n      \"euiDatePopoverButton--compressed\": compressed,\n      \"euiDatePopoverButton-isSelected\": isOpen,\n      \"euiDatePopoverButton-isInvalid\": isInvalid,\n      \"euiDatePopoverButton-needsUpdating\": needsUpdating,\n      \"euiDatePopoverButton-disabled\": isDisabled,\n    },\n  ]);\n\n  const formattedValue = useFormatTimeString(\n    value,\n    dateFormat,\n    roundUp,\n    locale\n  );\n  let title = formattedValue;\n\n  const invalidTitle = useEuiI18n(\n    \"euiDatePopoverButton.invalidTitle\",\n    \"Invalid date: {title}\",\n    { title }\n  );\n  const outdatedTitle = useEuiI18n(\n    \"euiDatePopoverButton.outdatedTitle\",\n    \"Update needed: {title}\",\n    { title }\n  );\n\n  if (isInvalid) {\n    title = invalidTitle;\n  } else if (needsUpdating) {\n    title = outdatedTitle;\n  }\n\n  const button = (\n    <button\n      onClick={onPopoverToggle}\n      className={classes}\n      title={title}\n      disabled={isDisabled}\n      data-test-subj={`superDatePicker${position}DatePopoverButton`}\n      {...buttonProps}\n    >\n      {formattedValue}\n    </button>\n  );\n\n  return (\n    <EuiPopover\n      button={button}\n      isOpen={isOpen}\n      closePopover={onPopoverClose}\n      anchorPosition={position === \"start\" ? \"downLeft\" : \"downRight\"}\n      display=\"block\"\n      panelPaddingSize=\"none\"\n      {...rest}\n    >\n      <EuiDatePopoverContent\n        value={value}\n        roundUp={roundUp}\n        onChange={onChange}\n        dateFormat={dateFormat}\n        timeFormat={timeFormat}\n        locale={locale}\n        position={position}\n        utcOffset={utcOffset}\n        timeOptions={timeOptions}\n      />\n    </EuiPopover>\n  );\n};\n\nEuiDatePopoverButton.displayName = \"EuiDatePopoverButton\";\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA,OAAOA,UAAU,MAAM,YAAY;AAInC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAyB,kBAAkB;AAG9D,SAASC,mBAAmB,QAAQ,oBAAoB;AACxD,SACEC,qBAAqB,QAEhB,wBAAwB;AAAC;AAuBhC,OAAO,MAAMC,oBAEZ,GAAIC,KAAK,IAAK;EAAA;EACb,MAAM;IACJC,QAAQ;IACRC,UAAU;IACVC,SAAS;IACTC,aAAa;IACbC,KAAK;IACLC,WAAW;IACXC,OAAO;IACPC,QAAQ;IACRC,MAAM;IACNC,UAAU;IACVC,SAAS;IACTC,UAAU;IACVC,MAAM;IACNC,eAAe;IACfC,cAAc;IACdC,UAAU;IACVC,WAAW;IACX,GAAGC;EACL,CAAC,GAAGlB,KAAK;EAET,MAAMmB,OAAO,GAAGzB,UAAU,CAAC,CACzB,sBAAsB,EACrB,yBAAwBO,QAAS,EAAC,EACnC;IACE,kCAAkC,EAAEe,UAAU;IAC9C,iCAAiC,EAAEH,MAAM;IACzC,gCAAgC,EAAEV,SAAS;IAC3C,oCAAoC,EAAEC,aAAa;IACnD,+BAA+B,EAAEF;EACnC,CAAC,CACF,CAAC;EAEF,MAAMkB,cAAc,GAAGvB,mBAAmB,CACxCQ,KAAK,EACLK,UAAU,EACVH,OAAO,EACPE,MAAM,CACP;EACD,IAAIY,KAAK,GAAGD,cAAc;EAE1B,MAAME,YAAY,GAAG3B,UAAU,CAC7B,mCAAmC,EACnC,uBAAuB,EACvB;IAAE0B;EAAM,CAAC,CACV;EACD,MAAME,aAAa,GAAG5B,UAAU,CAC9B,oCAAoC,EACpC,wBAAwB,EACxB;IAAE0B;EAAM,CAAC,CACV;EAED,IAAIlB,SAAS,EAAE;IACbkB,KAAK,GAAGC,YAAY;EACtB,CAAC,MAAM,IAAIlB,aAAa,EAAE;IACxBiB,KAAK,GAAGE,aAAa;EACvB;EAEA,MAAMC,MAAM,gBACV;IACE,OAAO,EAAEV,eAAgB;IACzB,SAAS,EAAEK,OAAQ;IACnB,KAAK,EAAEE,KAAM;IACb,QAAQ,EAAEnB,UAAW;IACrB,kBAAiB,kBAAiBD,QAAS,mBAAmB;IAAA,GAC1DK,WAAW;IAAA,UAEdc;EAAc;IAAA;IAAA;IAAA;EAAA,QAElB;EAED,oBACE,QAAC,UAAU;IACT,MAAM,EAAEI,MAAO;IACf,MAAM,EAAEX,MAAO;IACf,YAAY,EAAEE,cAAe;IAC7B,cAAc,EAAEd,QAAQ,KAAK,OAAO,GAAG,UAAU,GAAG,WAAY;IAChE,OAAO,EAAC,OAAO;IACf,gBAAgB,EAAC,MAAM;IAAA,GACnBiB,IAAI;IAAA,uBAER,QAAC,qBAAqB;MACpB,KAAK,EAAEb,KAAM;MACb,OAAO,EAAEE,OAAQ;MACjB,QAAQ,EAAEC,QAAS;MACnB,UAAU,EAAEE,UAAW;MACvB,UAAU,EAAEE,UAAW;MACvB,MAAM,EAAEH,MAAO;MACf,QAAQ,EAAER,QAAS;MACnB,SAAS,EAAEU,SAAU;MACrB,WAAW,EAAEM;IAAY;MAAA;MAAA;MAAA;IAAA;EACzB;IAAA;IAAA;IAAA;EAAA,QACS;AAEjB,CAAC;AAAC,GAjGWlB,oBAEZ;EAAA,QAkCwBF,mBAAmB,EAQrBF,UAAU,EAKTA,UAAU;AAAA;AAAA,KAjDrBI,oBAEZ;AAiGDA,oBAAoB,CAAC0B,WAAW,GAAG,sBAAsB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}