{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/Downloads/super_date_picker/src/text/text.tsx\",\n  _s = $RefreshSig$();\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\n/** @jsxImportSource @emotion/react */\nimport classNames from \"classnames\";\nimport { useEuiTheme } from \"../services\";\nimport { euiTextStyles } from \"./text.styles\";\nimport { EuiTextColor } from \"./text_color\";\nimport { EuiTextAlign } from \"./text_align\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport const TEXT_SIZES = [\"xs\", \"s\", \"m\", \"relative\"];\nexport const EuiText = _ref => {\n  _s();\n  let {\n    size = \"m\",\n    color,\n    grow = true,\n    textAlign,\n    children,\n    className,\n    ...rest\n  } = _ref;\n  const euiTheme = useEuiTheme();\n  const styles = euiTextStyles(euiTheme);\n  const cssStyles = [styles.euiText, !grow ? styles.constrainedWidth : undefined, styles[size]];\n  const classes = classNames(\"euiText\", className);\n  let text = _jsxDEV(\"div\", {\n    css: cssStyles,\n    className: classes,\n    ...rest,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n  if (color) {\n    text = _jsxDEV(EuiTextColor, {\n      color: color,\n      className: classes,\n      cloneElement: true,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n  if (textAlign) {\n    text = _jsxDEV(EuiTextAlign, {\n      textAlign: textAlign,\n      className: classes,\n      cloneElement: true,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n  return text;\n};\n_s(EuiText, \"Bx9xhCu9FBDDsW1EAb0vyzghspA=\", false, function () {\n  return [useEuiTheme];\n});\n_c = EuiText;\nvar _c;\n$RefreshReg$(_c, \"EuiText\");","map":{"version":3,"names":["classNames","useEuiTheme","euiTextStyles","EuiTextColor","EuiTextAlign","TEXT_SIZES","EuiText","size","color","grow","textAlign","children","className","rest","euiTheme","styles","cssStyles","euiText","constrainedWidth","undefined","classes","text"],"sources":["/Users/nikita/Downloads/super_date_picker/src/text/text.tsx"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { FunctionComponent, HTMLAttributes, CSSProperties } from \"react\";\n/** @jsxImportSource @emotion/react */\nimport classNames from \"classnames\";\nimport { CommonProps } from \"../common\";\n\nimport { useEuiTheme } from \"../services\";\nimport { euiTextStyles } from \"./text.styles\";\n\nimport { TextColor, EuiTextColor } from \"./text_color\";\n\nimport { EuiTextAlign, TextAlignment } from \"./text_align\";\n\nexport const TEXT_SIZES = [\"xs\", \"s\", \"m\", \"relative\"] as const;\nexport type TextSize = typeof TEXT_SIZES[number];\n\nexport type EuiTextProps = CommonProps &\n  Omit<HTMLAttributes<HTMLDivElement>, \"color\"> & {\n    textAlign?: TextAlignment;\n    /**\n     * Determines the text size. Choose `relative` to control the `font-size` based on the value of a parent container.\n     */\n    size?: TextSize;\n    /**\n     * Any of our named colors or a `hex`, `rgb` or `rgba` value.\n     * @default inherit\n     */\n    color?: TextColor | CSSProperties[\"color\"];\n    grow?: boolean;\n  };\n\nexport const EuiText: FunctionComponent<EuiTextProps> = ({\n  size = \"m\",\n  color,\n  grow = true,\n  textAlign,\n  children,\n  className,\n  ...rest\n}) => {\n  const euiTheme = useEuiTheme();\n  const styles = euiTextStyles(euiTheme);\n  const cssStyles = [\n    styles.euiText,\n    !grow ? styles.constrainedWidth : undefined,\n    styles[size],\n  ];\n\n  const classes = classNames(\"euiText\", className);\n\n  let text = (\n    <div css={cssStyles} className={classes} {...rest}>\n      {children}\n    </div>\n  );\n\n  if (color) {\n    text = (\n      <EuiTextColor color={color} className={classes} cloneElement>\n        {text}\n      </EuiTextColor>\n    );\n  }\n\n  if (textAlign) {\n    text = (\n      <EuiTextAlign textAlign={textAlign} className={classes} cloneElement>\n        {text}\n      </EuiTextAlign>\n    );\n  }\n\n  return text;\n};\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA,OAAOA,UAAU,MAAM,YAAY;AAGnC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,aAAa,QAAQ,eAAe;AAE7C,SAAoBC,YAAY,QAAQ,cAAc;AAEtD,SAASC,YAAY,QAAuB,cAAc;AAAC;AAE3D,OAAO,MAAMC,UAAU,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,UAAU,CAAU;AAkB/D,OAAO,MAAMC,OAAwC,GAAG,QAQlD;EAAA;EAAA,IARmD;IACvDC,IAAI,GAAG,GAAG;IACVC,KAAK;IACLC,IAAI,GAAG,IAAI;IACXC,SAAS;IACTC,QAAQ;IACRC,SAAS;IACT,GAAGC;EACL,CAAC;EACC,MAAMC,QAAQ,GAAGb,WAAW,EAAE;EAC9B,MAAMc,MAAM,GAAGb,aAAa,CAACY,QAAQ,CAAC;EACtC,MAAME,SAAS,GAAG,CAChBD,MAAM,CAACE,OAAO,EACd,CAACR,IAAI,GAAGM,MAAM,CAACG,gBAAgB,GAAGC,SAAS,EAC3CJ,MAAM,CAACR,IAAI,CAAC,CACb;EAED,MAAMa,OAAO,GAAGpB,UAAU,CAAC,SAAS,EAAEY,SAAS,CAAC;EAEhD,IAAIS,IAAI,GACN;IAAK,GAAG,EAAEL,SAAU;IAAC,SAAS,EAAEI,OAAQ;IAAA,GAAKP,IAAI;IAAA,UAC9CF;EAAQ;IAAA;IAAA;IAAA;EAAA,QAEZ;EAED,IAAIH,KAAK,EAAE;IACTa,IAAI,GACF,QAAC,YAAY;MAAC,KAAK,EAAEb,KAAM;MAAC,SAAS,EAAEY,OAAQ;MAAC,YAAY;MAAA,UACzDC;IAAI;MAAA;MAAA;MAAA;IAAA,QAER;EACH;EAEA,IAAIX,SAAS,EAAE;IACbW,IAAI,GACF,QAAC,YAAY;MAAC,SAAS,EAAEX,SAAU;MAAC,SAAS,EAAEU,OAAQ;MAAC,YAAY;MAAA,UACjEC;IAAI;MAAA;MAAA;MAAA;IAAA,QAER;EACH;EAEA,OAAOA,IAAI;AACb,CAAC;AAAC,GA1CWf,OAAwC;EAAA,QASlCL,WAAW;AAAA;AAAA,KATjBK,OAAwC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}