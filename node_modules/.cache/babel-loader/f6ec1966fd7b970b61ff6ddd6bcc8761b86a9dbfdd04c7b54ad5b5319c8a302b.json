{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/Downloads/super_date_picker/src/text/text_align.tsx\";\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { isValidElement } from \"react\";\nimport { cloneElementWithCss } from \"../services/theme/clone_element\";\nimport { euiTextAlignStyles } from \"./text_align.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ALIGNMENTS = [\"left\", \"right\", \"center\"];\nexport const EuiTextAlign = _ref => {\n  let {\n    children,\n    textAlign = \"left\",\n    cloneElement = false,\n    ...rest\n  } = _ref;\n  const styles = euiTextAlignStyles();\n  const cssStyles = [styles.euiTextAlign, styles[textAlign]];\n  const props = {\n    css: cssStyles,\n    ...rest\n  };\n  if ( /*#__PURE__*/isValidElement(children) && cloneElement) {\n    return cloneElementWithCss(children, props);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ...props,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n};\n_c = EuiTextAlign;\nvar _c;\n$RefreshReg$(_c, \"EuiTextAlign\");","map":{"version":3,"names":["isValidElement","cloneElementWithCss","euiTextAlignStyles","ALIGNMENTS","EuiTextAlign","children","textAlign","cloneElement","rest","styles","cssStyles","euiTextAlign","props","css"],"sources":["/Users/nikita/Downloads/super_date_picker/src/text/text_align.tsx"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { FunctionComponent, HTMLAttributes, isValidElement } from \"react\";\nimport { CommonProps } from \"../common\";\nimport { cloneElementWithCss } from \"../services/theme/clone_element\";\n\nimport { euiTextAlignStyles } from \"./text_align.styles\";\n\nexport const ALIGNMENTS = [\"left\", \"right\", \"center\"] as const;\nexport type TextAlignment = typeof ALIGNMENTS[number];\n\nexport type EuiTextAlignProps = CommonProps &\n  HTMLAttributes<HTMLDivElement> & {\n    textAlign?: TextAlignment;\n    /**\n     * Applies text styling to the child element instead of rendering a parent wrapper `div`.\n     * Can only be used when wrapping a *single* child element/tag, and not raw text.\n     */\n    cloneElement?: boolean;\n  };\n\nexport const EuiTextAlign: FunctionComponent<EuiTextAlignProps> = ({\n  children,\n  textAlign = \"left\",\n  cloneElement = false,\n  ...rest\n}) => {\n  const styles = euiTextAlignStyles();\n  const cssStyles = [styles.euiTextAlign, styles[textAlign]];\n\n  const props = { css: cssStyles, ...rest };\n\n  if (isValidElement(children) && cloneElement) {\n    return cloneElementWithCss(children, props);\n  } else {\n    return <div {...props}>{children}</div>;\n  }\n};\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAA4CA,cAAc,QAAQ,OAAO;AAEzE,SAASC,mBAAmB,QAAQ,iCAAiC;AAErE,SAASC,kBAAkB,QAAQ,qBAAqB;AAAC;AAEzD,OAAO,MAAMC,UAAU,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAU;AAa9D,OAAO,MAAMC,YAAkD,GAAG,QAK5D;EAAA,IAL6D;IACjEC,QAAQ;IACRC,SAAS,GAAG,MAAM;IAClBC,YAAY,GAAG,KAAK;IACpB,GAAGC;EACL,CAAC;EACC,MAAMC,MAAM,GAAGP,kBAAkB,EAAE;EACnC,MAAMQ,SAAS,GAAG,CAACD,MAAM,CAACE,YAAY,EAAEF,MAAM,CAACH,SAAS,CAAC,CAAC;EAE1D,MAAMM,KAAK,GAAG;IAAEC,GAAG,EAAEH,SAAS;IAAE,GAAGF;EAAK,CAAC;EAEzC,IAAI,cAAAR,cAAc,CAACK,QAAQ,CAAC,IAAIE,YAAY,EAAE;IAC5C,OAAON,mBAAmB,CAACI,QAAQ,EAAEO,KAAK,CAAC;EAC7C,CAAC,MAAM;IACL,oBAAO;MAAA,GAASA,KAAK;MAAA,UAAGP;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAO;EACzC;AACF,CAAC;AAAC,KAhBWD,YAAkD;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}