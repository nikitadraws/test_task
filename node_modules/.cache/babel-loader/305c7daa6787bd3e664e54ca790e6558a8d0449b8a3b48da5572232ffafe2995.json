{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/Downloads/super_date_picker/src/button/button_display/_button_display.tsx\",\n  _s = $RefreshSig$();\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { forwardRef } from \"react\";\n\n// @ts-ignore module doesn't export `createElement`\nimport { createElement } from \"@emotion/react\";\nimport { getSecureRelForTarget, useEuiTheme } from \"../../services\";\nimport { euiButtonDisplayStyles } from \"./_button_display.styles\";\nimport { EuiButtonDisplayContent } from \"./_button_display_content\";\nimport { validateHref } from \"../../services/security/href_validator\";\nimport { useEuiButtonRadiusCSS } from \"../../themes/amsterdam/global_styling/mixins\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIZES = [\"xs\", \"s\", \"m\"];\nexport function isButtonDisabled(_ref) {\n  let {\n    href,\n    isDisabled,\n    isLoading\n  } = _ref;\n  const isHrefValid = !href || validateHref(href);\n  return isLoading || isDisabled || !isHrefValid;\n}\n\n/**\n * EuiButtonDisplay is an internal-only component used for displaying\n * any element as a button.\n */\nexport const EuiButtonDisplay = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((_ref2, ref) => {\n  _s();\n  let {\n    children,\n    iconType,\n    iconSide = \"left\",\n    iconSize,\n    size = \"m\",\n    isDisabled,\n    disabled,\n    isLoading,\n    isSelected,\n    fullWidth,\n    minWidth,\n    contentProps,\n    textProps,\n    href,\n    target,\n    rel,\n    type = \"button\",\n    style,\n    ...rest\n  } = _ref2;\n  const buttonIsDisabled = isButtonDisabled({\n    href,\n    isDisabled: isDisabled || disabled,\n    isLoading\n  });\n  const theme = useEuiTheme();\n  const styles = euiButtonDisplayStyles(theme);\n  const buttonRadiusStyle = useEuiButtonRadiusCSS()[size];\n  const cssStyles = [styles.euiButtonDisplay, styles[size], fullWidth && styles.fullWidth, buttonIsDisabled && styles.isDisabled, buttonRadiusStyle];\n  const innerNode = /*#__PURE__*/_jsxDEV(EuiButtonDisplayContent, {\n    isLoading: isLoading,\n    isDisabled: buttonIsDisabled,\n    iconType: iconType,\n    iconSide: iconSide,\n    iconSize: iconSize,\n    textProps: textProps,\n    ...contentProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 7\n  }, this);\n  const element = href && !buttonIsDisabled ? \"a\" : \"button\";\n  let elementProps = {};\n  // Element-specific attributes\n  if (element === \"button\") {\n    elementProps = {\n      ...elementProps,\n      disabled: buttonIsDisabled,\n      \"aria-pressed\": isSelected\n    };\n  }\n  const relObj = {};\n  if (href && !buttonIsDisabled) {\n    relObj.href = href;\n    relObj.rel = getSecureRelForTarget({\n      href,\n      target,\n      rel\n    });\n    relObj.target = target;\n  } else {\n    relObj.type = type;\n  }\n  return createElement(element, {\n    css: cssStyles,\n    style: minWidth != null ? {\n      ...style,\n      minInlineSize: minWidth\n    } : style,\n    ref,\n    ...elementProps,\n    ...relObj,\n    ...rest\n  }, innerNode);\n}, \"XLVlLp9emIpcmPLJ98hrEmdl//Y=\", false, function () {\n  return [useEuiTheme, useEuiButtonRadiusCSS];\n})), \"XLVlLp9emIpcmPLJ98hrEmdl//Y=\", false, function () {\n  return [useEuiTheme, useEuiButtonRadiusCSS];\n});\n_c2 = EuiButtonDisplay;\nEuiButtonDisplay.displayName = \"EuiButtonDisplay\";\nvar _c, _c2;\n$RefreshReg$(_c, \"EuiButtonDisplay$forwardRef\");\n$RefreshReg$(_c2, \"EuiButtonDisplay\");","map":{"version":3,"names":["forwardRef","createElement","getSecureRelForTarget","useEuiTheme","euiButtonDisplayStyles","EuiButtonDisplayContent","validateHref","useEuiButtonRadiusCSS","SIZES","isButtonDisabled","href","isDisabled","isLoading","isHrefValid","EuiButtonDisplay","ref","children","iconType","iconSide","iconSize","size","disabled","isSelected","fullWidth","minWidth","contentProps","textProps","target","rel","type","style","rest","buttonIsDisabled","theme","styles","buttonRadiusStyle","cssStyles","euiButtonDisplay","innerNode","element","elementProps","relObj","css","minInlineSize","displayName"],"sources":["/Users/nikita/Downloads/super_date_picker/src/button/button_display/_button_display.tsx"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport {\n  forwardRef,\n  CSSProperties,\n  ReactNode,\n  Ref,\n  ButtonHTMLAttributes,\n} from \"react\";\n\n// @ts-ignore module doesn't export `createElement`\nimport { createElement } from \"@emotion/react\";\nimport { getSecureRelForTarget, useEuiTheme } from \"../../services\";\n\nimport {\n  CommonProps,\n  ExclusiveUnion,\n  PropsForAnchor,\n  PropsForButton,\n} from \"../../common\";\n\nimport { euiButtonDisplayStyles } from \"./_button_display.styles\";\nimport {\n  EuiButtonDisplayContent,\n  EuiButtonDisplayContentProps,\n  EuiButtonDisplayContentType,\n} from \"./_button_display_content\";\nimport { validateHref } from \"../../services/security/href_validator\";\nimport { useEuiButtonRadiusCSS } from \"../../themes/amsterdam/global_styling/mixins\";\n\nconst SIZES = [\"xs\", \"s\", \"m\"] as const;\nexport type EuiButtonDisplaySizes = typeof SIZES[number];\n\n/**\n * Extends EuiButtonDisplayContentProps which provides\n * `iconType`, `iconSide`, and `textProps`\n */\nexport interface EuiButtonDisplayCommonProps\n  extends EuiButtonDisplayContentProps,\n    CommonProps {\n  children?: ReactNode;\n  size?: EuiButtonDisplaySizes;\n  /**\n   * Applies the boolean state as the `aria-pressed` property to create a toggle button.\n   * *Only use when the readable text does not change between states.*\n   */\n  isSelected?: boolean;\n  /**\n   * Extends the button to 100% width\n   */\n  fullWidth?: boolean;\n  /**\n   * Override the default minimum width\n   */\n  minWidth?: CSSProperties[\"minWidth\"];\n  /**\n   * Force disables the button and changes the icon to a loading spinner\n   */\n  isLoading?: boolean;\n  /**\n   * Object of props passed to the <span/> wrapping the button's content\n   */\n  contentProps?: CommonProps & EuiButtonDisplayContentType;\n  style?: CSSProperties;\n}\n\nexport type EuiButtonDisplayPropsForAnchor = PropsForAnchor<\n  EuiButtonDisplayCommonProps,\n  {\n    buttonRef?: Ref<HTMLAnchorElement>;\n  }\n>;\n\nexport type EuiButtonDisplayPropsForButton = PropsForButton<\n  EuiButtonDisplayCommonProps,\n  {\n    buttonRef?: Ref<HTMLButtonElement>;\n  }\n>;\n\nexport type EuiButtonDisplayProps = ExclusiveUnion<\n  EuiButtonDisplayPropsForAnchor,\n  EuiButtonDisplayPropsForButton\n>;\n\nexport function isButtonDisabled({\n  href,\n  isDisabled,\n  isLoading,\n}: {\n  href?: string;\n  isDisabled?: boolean;\n  isLoading?: boolean;\n}) {\n  const isHrefValid = !href || validateHref(href);\n  return isLoading || isDisabled || !isHrefValid;\n}\n\n/**\n * EuiButtonDisplay is an internal-only component used for displaying\n * any element as a button.\n */\nexport const EuiButtonDisplay = forwardRef<HTMLElement, EuiButtonDisplayProps>(\n  (\n    {\n      children,\n      iconType,\n      iconSide = \"left\",\n      iconSize,\n      size = \"m\",\n      isDisabled,\n      disabled,\n      isLoading,\n      isSelected,\n      fullWidth,\n      minWidth,\n      contentProps,\n      textProps,\n      href,\n      target,\n      rel,\n      type = \"button\",\n      style,\n      ...rest\n    },\n    ref\n  ) => {\n    const buttonIsDisabled = isButtonDisabled({\n      href,\n      isDisabled: isDisabled || disabled,\n      isLoading,\n    });\n\n    const theme = useEuiTheme();\n\n    const styles = euiButtonDisplayStyles(theme);\n    const buttonRadiusStyle = useEuiButtonRadiusCSS()[size];\n    const cssStyles = [\n      styles.euiButtonDisplay,\n      styles[size],\n      fullWidth && styles.fullWidth,\n      buttonIsDisabled && styles.isDisabled,\n      buttonRadiusStyle,\n    ];\n\n    const innerNode = (\n      <EuiButtonDisplayContent\n        isLoading={isLoading}\n        isDisabled={buttonIsDisabled}\n        iconType={iconType}\n        iconSide={iconSide}\n        iconSize={iconSize}\n        textProps={textProps}\n        {...contentProps}\n      >\n        {children}\n      </EuiButtonDisplayContent>\n    );\n\n    const element = href && !buttonIsDisabled ? \"a\" : \"button\";\n    let elementProps = {};\n    // Element-specific attributes\n    if (element === \"button\") {\n      elementProps = {\n        ...elementProps,\n        disabled: buttonIsDisabled,\n        \"aria-pressed\": isSelected,\n      };\n    }\n\n    const relObj: {\n      rel?: string;\n      href?: string;\n      type?: ButtonHTMLAttributes<HTMLButtonElement>[\"type\"];\n      target?: string;\n    } = {};\n\n    if (href && !buttonIsDisabled) {\n      relObj.href = href;\n      relObj.rel = getSecureRelForTarget({ href, target, rel });\n      relObj.target = target;\n    } else {\n      relObj.type = type as ButtonHTMLAttributes<HTMLButtonElement>[\"type\"];\n    }\n\n    return createElement(\n      element,\n      {\n        css: cssStyles,\n        style: minWidth != null ? { ...style, minInlineSize: minWidth } : style,\n        ref,\n        ...elementProps,\n        ...relObj,\n        ...rest,\n      },\n      innerNode\n    );\n  }\n);\n\nEuiButtonDisplay.displayName = \"EuiButtonDisplay\";\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}