{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/Downloads/super_date_picker/src/form/form_control_layout/form_control_layout_icons.tsx\";\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { Fragment, Component } from \"react\";\nimport { EuiLoadingSpinner } from \"../../loading\";\nimport { EuiFormControlLayoutClearButton } from \"./form_control_layout_clear_button\";\nimport { EuiFormControlLayoutCustomIcon } from \"./form_control_layout_custom_icon\";\nimport { EuiIcon } from \"../../icon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ICON_SIDES = [\"left\", \"right\"];\nfunction isIconShape(icon) {\n  return !!icon && icon.hasOwnProperty(\"type\");\n}\nexport class EuiFormControlLayoutIcons extends Component {\n  render() {\n    const {\n      icon,\n      isInvalid,\n      isDropdown\n    } = this.props;\n    const iconSide = isIconShape(icon) && icon.side ? icon.side : \"left\";\n    const customIcon = this.renderCustomIcon();\n    const loadingSpinner = this.renderLoadingSpinner();\n    const clearButton = this.renderClearButton();\n    const invalidIcon = this.renderInvalidIcon();\n    const dropdownIcon = this.renderDropdownIcon();\n    let leftIcons;\n    if (customIcon && iconSide === \"left\") {\n      leftIcons = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"euiFormControlLayoutIcons\",\n        children: customIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }, this);\n    }\n    let rightIcons;\n\n    // If the icon is on the right, it should be placed after the clear button in the DOM.\n    if (clearButton || loadingSpinner || isInvalid || isDropdown || customIcon && iconSide === \"right\") {\n      rightIcons = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"euiFormControlLayoutIcons euiFormControlLayoutIcons--right\",\n        children: [clearButton, loadingSpinner, invalidIcon, iconSide === \"right\" ? customIcon : undefined, dropdownIcon]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [leftIcons, rightIcons]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n  renderCustomIcon() {\n    const {\n      icon,\n      compressed\n    } = this.props;\n    if (!icon) {\n      return null;\n    }\n\n    // Normalize the icon to an object if it's a string.\n    const iconProps = isIconShape(icon) ? icon : {\n      type: icon\n    };\n    const {\n      ref: iconRef,\n      side,\n      ...iconRest\n    } = iconProps;\n    return /*#__PURE__*/_jsxDEV(EuiFormControlLayoutCustomIcon, {\n      size: compressed ? \"s\" : \"m\",\n      iconRef: iconRef,\n      ...iconRest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n  renderDropdownIcon() {\n    const {\n      isDropdown,\n      compressed\n    } = this.props;\n    if (!isDropdown) {\n      return null;\n    }\n    return /*#__PURE__*/_jsxDEV(EuiFormControlLayoutCustomIcon, {\n      size: compressed ? \"s\" : \"m\",\n      type: \"arrowDown\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n  }\n  renderLoadingSpinner() {\n    const {\n      isLoading,\n      compressed\n    } = this.props;\n    if (!isLoading) {\n      return null;\n    }\n    return /*#__PURE__*/_jsxDEV(EuiLoadingSpinner, {\n      size: compressed ? \"s\" : \"m\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 12\n    }, this);\n  }\n  renderClearButton() {\n    const {\n      clear,\n      compressed\n    } = this.props;\n    if (!clear) {\n      return null;\n    }\n    return /*#__PURE__*/_jsxDEV(EuiFormControlLayoutClearButton, {\n      size: compressed ? \"s\" : \"m\",\n      ...clear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this);\n  }\n  renderInvalidIcon() {\n    const {\n      isInvalid,\n      compressed\n    } = this.props;\n    if (!isInvalid) {\n      return null;\n    }\n    return /*#__PURE__*/_jsxDEV(EuiIcon, {\n      size: compressed ? \"s\" : \"m\",\n      color: \"danger\",\n      type: \"alert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["Fragment","Component","EuiLoadingSpinner","EuiFormControlLayoutClearButton","EuiFormControlLayoutCustomIcon","EuiIcon","ICON_SIDES","isIconShape","icon","hasOwnProperty","EuiFormControlLayoutIcons","render","isInvalid","isDropdown","props","iconSide","side","customIcon","renderCustomIcon","loadingSpinner","renderLoadingSpinner","clearButton","renderClearButton","invalidIcon","renderInvalidIcon","dropdownIcon","renderDropdownIcon","leftIcons","rightIcons","undefined","compressed","iconProps","type","ref","iconRef","iconRest","isLoading","clear"],"sources":["/Users/nikita/Downloads/super_date_picker/src/form/form_control_layout/form_control_layout_icons.tsx"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { Fragment, Component } from \"react\";\n\nimport { EuiLoadingSpinner } from \"../../loading\";\nimport {\n  EuiFormControlLayoutClearButton,\n  EuiFormControlLayoutClearButtonProps,\n} from \"./form_control_layout_clear_button\";\nimport {\n  EuiFormControlLayoutCustomIcon,\n  EuiFormControlLayoutCustomIconProps,\n} from \"./form_control_layout_custom_icon\";\nimport { EuiIcon, IconColor, IconType } from \"../../icon\";\nimport { DistributiveOmit } from \"../../common\";\n\nexport const ICON_SIDES: [\"left\", \"right\"] = [\"left\", \"right\"];\n\ntype IconShape = DistributiveOmit<\n  EuiFormControlLayoutCustomIconProps,\n  \"type\" | \"iconRef\"\n> & {\n  type: IconType;\n  side?: typeof ICON_SIDES[number];\n  color?: IconColor;\n  ref?: EuiFormControlLayoutCustomIconProps[\"iconRef\"];\n};\n\nfunction isIconShape(\n  icon: EuiFormControlLayoutIconsProps[\"icon\"]\n): icon is IconShape {\n  return !!icon && icon.hasOwnProperty(\"type\");\n}\n\nexport interface EuiFormControlLayoutIconsProps {\n  icon?: IconType | IconShape;\n  clear?: EuiFormControlLayoutClearButtonProps;\n  isLoading?: boolean;\n  isInvalid?: boolean;\n  isDropdown?: boolean;\n  compressed?: boolean;\n}\n\nexport class EuiFormControlLayoutIcons extends Component<EuiFormControlLayoutIconsProps> {\n  render() {\n    const { icon, isInvalid, isDropdown } = this.props;\n    const iconSide = isIconShape(icon) && icon.side ? icon.side : \"left\";\n    const customIcon = this.renderCustomIcon();\n    const loadingSpinner = this.renderLoadingSpinner();\n    const clearButton = this.renderClearButton();\n    const invalidIcon = this.renderInvalidIcon();\n    const dropdownIcon = this.renderDropdownIcon();\n\n    let leftIcons;\n\n    if (customIcon && iconSide === \"left\") {\n      leftIcons = <div className=\"euiFormControlLayoutIcons\">{customIcon}</div>;\n    }\n\n    let rightIcons;\n\n    // If the icon is on the right, it should be placed after the clear button in the DOM.\n    if (\n      clearButton ||\n      loadingSpinner ||\n      isInvalid ||\n      isDropdown ||\n      (customIcon && iconSide === \"right\")\n    ) {\n      rightIcons = (\n        <div className=\"euiFormControlLayoutIcons euiFormControlLayoutIcons--right\">\n          {clearButton}\n          {loadingSpinner}\n          {invalidIcon}\n          {iconSide === \"right\" ? customIcon : undefined}\n          {dropdownIcon}\n        </div>\n      );\n    }\n\n    return (\n      <Fragment>\n        {leftIcons}\n        {rightIcons}\n      </Fragment>\n    );\n  }\n\n  renderCustomIcon() {\n    const { icon, compressed } = this.props;\n\n    if (!icon) {\n      return null;\n    }\n\n    // Normalize the icon to an object if it's a string.\n    const iconProps: IconShape = isIconShape(icon)\n      ? icon\n      : {\n          type: icon,\n        };\n    const { ref: iconRef, side, ...iconRest } = iconProps;\n\n    return (\n      <EuiFormControlLayoutCustomIcon\n        size={compressed ? \"s\" : \"m\"}\n        iconRef={iconRef}\n        {...iconRest}\n      />\n    );\n  }\n\n  renderDropdownIcon() {\n    const { isDropdown, compressed } = this.props;\n\n    if (!isDropdown) {\n      return null;\n    }\n\n    return (\n      <EuiFormControlLayoutCustomIcon\n        size={compressed ? \"s\" : \"m\"}\n        type=\"arrowDown\"\n      />\n    );\n  }\n\n  renderLoadingSpinner() {\n    const { isLoading, compressed } = this.props;\n\n    if (!isLoading) {\n      return null;\n    }\n\n    return <EuiLoadingSpinner size={compressed ? \"s\" : \"m\"} />;\n  }\n\n  renderClearButton() {\n    const { clear, compressed } = this.props;\n    if (!clear) {\n      return null;\n    }\n\n    return (\n      <EuiFormControlLayoutClearButton\n        size={compressed ? \"s\" : \"m\"}\n        {...clear}\n      />\n    );\n  }\n\n  renderInvalidIcon() {\n    const { isInvalid, compressed } = this.props;\n    if (!isInvalid) {\n      return null;\n    }\n\n    return (\n      <EuiIcon size={compressed ? \"s\" : \"m\"} color=\"danger\" type=\"alert\" />\n    );\n  }\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,SAASC,iBAAiB,QAAQ,eAAe;AACjD,SACEC,+BAA+B,QAE1B,oCAAoC;AAC3C,SACEC,8BAA8B,QAEzB,mCAAmC;AAC1C,SAASC,OAAO,QAA6B,YAAY;AAAC;AAG1D,OAAO,MAAMC,UAA6B,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC;AAY9D,SAASC,WAAW,CAClBC,IAA4C,EACzB;EACnB,OAAO,CAAC,CAACA,IAAI,IAAIA,IAAI,CAACC,cAAc,CAAC,MAAM,CAAC;AAC9C;AAWA,OAAO,MAAMC,yBAAyB,SAAST,SAAS,CAAiC;EACvFU,MAAM,GAAG;IACP,MAAM;MAAEH,IAAI;MAAEI,SAAS;MAAEC;IAAW,CAAC,GAAG,IAAI,CAACC,KAAK;IAClD,MAAMC,QAAQ,GAAGR,WAAW,CAACC,IAAI,CAAC,IAAIA,IAAI,CAACQ,IAAI,GAAGR,IAAI,CAACQ,IAAI,GAAG,MAAM;IACpE,MAAMC,UAAU,GAAG,IAAI,CAACC,gBAAgB,EAAE;IAC1C,MAAMC,cAAc,GAAG,IAAI,CAACC,oBAAoB,EAAE;IAClD,MAAMC,WAAW,GAAG,IAAI,CAACC,iBAAiB,EAAE;IAC5C,MAAMC,WAAW,GAAG,IAAI,CAACC,iBAAiB,EAAE;IAC5C,MAAMC,YAAY,GAAG,IAAI,CAACC,kBAAkB,EAAE;IAE9C,IAAIC,SAAS;IAEb,IAAIV,UAAU,IAAIF,QAAQ,KAAK,MAAM,EAAE;MACrCY,SAAS,gBAAG;QAAK,SAAS,EAAC,2BAA2B;QAAA,UAAEV;MAAU;QAAA;QAAA;QAAA;MAAA,QAAO;IAC3E;IAEA,IAAIW,UAAU;;IAEd;IACA,IACEP,WAAW,IACXF,cAAc,IACdP,SAAS,IACTC,UAAU,IACTI,UAAU,IAAIF,QAAQ,KAAK,OAAQ,EACpC;MACAa,UAAU,gBACR;QAAK,SAAS,EAAC,4DAA4D;QAAA,WACxEP,WAAW,EACXF,cAAc,EACdI,WAAW,EACXR,QAAQ,KAAK,OAAO,GAAGE,UAAU,GAAGY,SAAS,EAC7CJ,YAAY;MAAA;QAAA;QAAA;QAAA;MAAA,QAEhB;IACH;IAEA,oBACE,QAAC,QAAQ;MAAA,WACNE,SAAS,EACTC,UAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAEf;EAEAV,gBAAgB,GAAG;IACjB,MAAM;MAAEV,IAAI;MAAEsB;IAAW,CAAC,GAAG,IAAI,CAAChB,KAAK;IAEvC,IAAI,CAACN,IAAI,EAAE;MACT,OAAO,IAAI;IACb;;IAEA;IACA,MAAMuB,SAAoB,GAAGxB,WAAW,CAACC,IAAI,CAAC,GAC1CA,IAAI,GACJ;MACEwB,IAAI,EAAExB;IACR,CAAC;IACL,MAAM;MAAEyB,GAAG,EAAEC,OAAO;MAAElB,IAAI;MAAE,GAAGmB;IAAS,CAAC,GAAGJ,SAAS;IAErD,oBACE,QAAC,8BAA8B;MAC7B,IAAI,EAAED,UAAU,GAAG,GAAG,GAAG,GAAI;MAC7B,OAAO,EAAEI,OAAQ;MAAA,GACbC;IAAQ;MAAA;MAAA;MAAA;IAAA,QACZ;EAEN;EAEAT,kBAAkB,GAAG;IACnB,MAAM;MAAEb,UAAU;MAAEiB;IAAW,CAAC,GAAG,IAAI,CAAChB,KAAK;IAE7C,IAAI,CAACD,UAAU,EAAE;MACf,OAAO,IAAI;IACb;IAEA,oBACE,QAAC,8BAA8B;MAC7B,IAAI,EAAEiB,UAAU,GAAG,GAAG,GAAG,GAAI;MAC7B,IAAI,EAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAChB;EAEN;EAEAV,oBAAoB,GAAG;IACrB,MAAM;MAAEgB,SAAS;MAAEN;IAAW,CAAC,GAAG,IAAI,CAAChB,KAAK;IAE5C,IAAI,CAACsB,SAAS,EAAE;MACd,OAAO,IAAI;IACb;IAEA,oBAAO,QAAC,iBAAiB;MAAC,IAAI,EAAEN,UAAU,GAAG,GAAG,GAAG;IAAI;MAAA;MAAA;MAAA;IAAA,QAAG;EAC5D;EAEAR,iBAAiB,GAAG;IAClB,MAAM;MAAEe,KAAK;MAAEP;IAAW,CAAC,GAAG,IAAI,CAAChB,KAAK;IACxC,IAAI,CAACuB,KAAK,EAAE;MACV,OAAO,IAAI;IACb;IAEA,oBACE,QAAC,+BAA+B;MAC9B,IAAI,EAAEP,UAAU,GAAG,GAAG,GAAG,GAAI;MAAA,GACzBO;IAAK;MAAA;MAAA;MAAA;IAAA,QACT;EAEN;EAEAb,iBAAiB,GAAG;IAClB,MAAM;MAAEZ,SAAS;MAAEkB;IAAW,CAAC,GAAG,IAAI,CAAChB,KAAK;IAC5C,IAAI,CAACF,SAAS,EAAE;MACd,OAAO,IAAI;IACb;IAEA,oBACE,QAAC,OAAO;MAAC,IAAI,EAAEkB,UAAU,GAAG,GAAG,GAAG,GAAI;MAAC,KAAK,EAAC,QAAQ;MAAC,IAAI,EAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG;EAEzE;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}