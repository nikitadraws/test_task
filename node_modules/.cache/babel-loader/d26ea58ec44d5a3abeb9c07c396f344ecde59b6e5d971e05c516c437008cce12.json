{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/Downloads/super_date_picker/src/responsive/hide_for.tsx\",\n  _s = $RefreshSig$();\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { Fragment } from \"react\";\nimport { useCurrentEuiBreakpoint } from \"../services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EuiHideFor = _ref => {\n  _s();\n  let {\n    children,\n    sizes\n  } = _ref;\n  const currentBreakpoint = useCurrentEuiBreakpoint();\n  const isWithinBreakpointSizes = currentBreakpoint && sizes.includes(currentBreakpoint);\n  if (sizes === \"all\" || isWithinBreakpointSizes) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n};\n_s(EuiHideFor, \"gYhaNKJRMeFiHk8yWKPNiCwWeQo=\", false, function () {\n  return [useCurrentEuiBreakpoint];\n});\n_c = EuiHideFor;\nvar _c;\n$RefreshReg$(_c, \"EuiHideFor\");","map":{"version":3,"names":["Fragment","useCurrentEuiBreakpoint","EuiHideFor","children","sizes","currentBreakpoint","isWithinBreakpointSizes","includes"],"sources":["/Users/nikita/Downloads/super_date_picker/src/responsive/hide_for.tsx"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { ReactNode, FunctionComponent, Fragment } from \"react\";\nimport { useCurrentEuiBreakpoint, EuiBreakpointSize } from \"../services\";\n\nexport type EuiHideForBreakpoints = EuiBreakpointSize;\n\nexport interface EuiHideForProps {\n  /**\n   * Required otherwise nothing ever gets returned\n   */\n  children: ReactNode;\n  /**\n   * List of all the responsive sizes to hide the children for.\n   * Array of #EuiBreakpointSize\n   */\n  sizes: EuiHideForBreakpoints[] | \"all\" | \"none\";\n}\n\nexport const EuiHideFor: FunctionComponent<EuiHideForProps> = ({\n  children,\n  sizes,\n}) => {\n  const currentBreakpoint = useCurrentEuiBreakpoint();\n  const isWithinBreakpointSizes =\n    currentBreakpoint && sizes.includes(currentBreakpoint);\n\n  if (sizes === \"all\" || isWithinBreakpointSizes) {\n    return null;\n  }\n\n  return <Fragment>{children}</Fragment>;\n};\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAuCA,QAAQ,QAAQ,OAAO;AAC9D,SAASC,uBAAuB,QAA2B,aAAa;AAAC;AAgBzE,OAAO,MAAMC,UAA8C,GAAG,QAGxD;EAAA;EAAA,IAHyD;IAC7DC,QAAQ;IACRC;EACF,CAAC;EACC,MAAMC,iBAAiB,GAAGJ,uBAAuB,EAAE;EACnD,MAAMK,uBAAuB,GAC3BD,iBAAiB,IAAID,KAAK,CAACG,QAAQ,CAACF,iBAAiB,CAAC;EAExD,IAAID,KAAK,KAAK,KAAK,IAAIE,uBAAuB,EAAE;IAC9C,OAAO,IAAI;EACb;EAEA,oBAAO,QAAC,QAAQ;IAAA,UAAEH;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAY;AACxC,CAAC;AAAC,GAbWD,UAA8C;EAAA,QAI/BD,uBAAuB;AAAA;AAAA,KAJtCC,UAA8C;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}