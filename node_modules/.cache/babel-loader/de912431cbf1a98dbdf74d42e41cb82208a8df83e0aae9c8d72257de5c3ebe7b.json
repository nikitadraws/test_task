{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/Downloads/super_date_picker/src/form/select/select.tsx\",\n  _s = $RefreshSig$();\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport classNames from \"classnames\";\nimport { EuiFormControlLayout } from \"../form_control_layout\";\nimport { EuiValidatableControl } from \"../validatable_control\";\nimport { useFormContext } from \"../eui_form_context\";\nimport { getFormControlClassNameForIconCount } from \"../form_control_layout/_num_icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nexport const EuiSelect = props => {\n  _s();\n  const {\n    defaultFullWidth\n  } = useFormContext();\n  const {\n    className,\n    options = [],\n    id,\n    name,\n    inputRef,\n    isInvalid,\n    fullWidth = defaultFullWidth,\n    isLoading = false,\n    hasNoInitialSelection = false,\n    defaultValue,\n    compressed = false,\n    value: _value,\n    prepend,\n    append,\n    onMouseUp,\n    disabled,\n    ...rest\n  } = props;\n  // if this is injecting an empty option for `hasNoInitialSelection` then\n  // value needs to fallback to an empty string to interact properly with `defaultValue`\n  const value = hasNoInitialSelection ? _value !== null && _value !== void 0 ? _value : \"\" : _value;\n  const handleMouseUp = e => {\n    // Normalizes cross-browser mouse eventing by preventing propagation,\n    // notably for use in conjunction with EuiOutsideClickDetector.\n    // See https://github.com/elastic/eui/pull/1926 for full discussion on\n    // rationale and alternatives should this intervention become problematic.\n    e.nativeEvent.stopImmediatePropagation();\n    if (onMouseUp) onMouseUp(e);\n  };\n  const numIconsClass = getFormControlClassNameForIconCount({\n    isInvalid,\n    isLoading,\n    isDropdown: true\n  });\n  const classes = classNames(\"euiSelect\", numIconsClass, {\n    \"euiSelect--fullWidth\": fullWidth,\n    \"euiSelect--compressed\": compressed,\n    \"euiSelect--inGroup\": prepend || append,\n    \"euiSelect-isLoading\": isLoading\n  }, className);\n  let emptyOptionNode;\n  if (hasNoInitialSelection) {\n    emptyOptionNode = /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      disabled: true,\n      hidden: true,\n      style: {\n        display: \"none\"\n      },\n      children: \"\\xA0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  }\n\n  // React HTML input can not have both value and defaultValue properties.\n  // https://reactjs.org/docs/uncontrolled-components.html#default-values\n  let selectDefaultValue;\n  if (value == null) {\n    selectDefaultValue = defaultValue || \"\";\n  }\n  return /*#__PURE__*/_jsxDEV(EuiFormControlLayout, {\n    isDropdown: true,\n    fullWidth: fullWidth,\n    isLoading: isLoading,\n    isInvalid: isInvalid,\n    isDisabled: disabled,\n    compressed: compressed,\n    prepend: prepend,\n    append: append,\n    inputId: id,\n    children: /*#__PURE__*/_jsxDEV(EuiValidatableControl, {\n      isInvalid: isInvalid,\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        id: id,\n        name: name,\n        className: classes,\n        ref: inputRef,\n        defaultValue: selectDefaultValue,\n        value: value,\n        onMouseUp: handleMouseUp,\n        disabled: disabled,\n        ...rest,\n        children: [emptyOptionNode, options.map((option, index) => {\n          const {\n            text,\n            ...rest\n          } = option;\n          return /*#__PURE__*/_createElement(\"option\", {\n            ...rest,\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }\n          }, text);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(EuiSelect, \"r29orIZyy5tmCzP1W2OcvSFKH7Q=\", false, function () {\n  return [useFormContext];\n});\n_c = EuiSelect;\nvar _c;\n$RefreshReg$(_c, \"EuiSelect\");","map":{"version":3,"names":["classNames","EuiFormControlLayout","EuiValidatableControl","useFormContext","getFormControlClassNameForIconCount","EuiSelect","props","defaultFullWidth","className","options","id","name","inputRef","isInvalid","fullWidth","isLoading","hasNoInitialSelection","defaultValue","compressed","value","_value","prepend","append","onMouseUp","disabled","rest","handleMouseUp","e","nativeEvent","stopImmediatePropagation","numIconsClass","isDropdown","classes","emptyOptionNode","display","selectDefaultValue","map","option","index","text"],"sources":["/Users/nikita/Downloads/super_date_picker/src/form/select/select.tsx"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport {\n  SelectHTMLAttributes,\n  OptionHTMLAttributes,\n  Ref,\n  FunctionComponent,\n} from \"react\";\nimport { CommonProps } from \"../../common\";\nimport classNames from \"classnames\";\nimport {\n  EuiFormControlLayout,\n  EuiFormControlLayoutProps,\n} from \"../form_control_layout\";\nimport { EuiValidatableControl } from \"../validatable_control\";\nimport { useFormContext } from \"../eui_form_context\";\nimport { getFormControlClassNameForIconCount } from \"../form_control_layout/_num_icons\";\n\nexport interface EuiSelectOption\n  extends OptionHTMLAttributes<HTMLOptionElement> {\n  text: React.ReactNode;\n}\n\nexport type EuiSelectProps = Omit<\n  SelectHTMLAttributes<HTMLSelectElement>,\n  \"value\"\n> &\n  CommonProps & {\n    /**\n     * @default []\n     */\n    options?: EuiSelectOption[];\n    isInvalid?: boolean;\n    /**\n     * Expand to fill 100% of the parent.\n     * Defaults to `fullWidth` prop of `<EuiForm>`.\n     * @default false\n     */\n    fullWidth?: boolean;\n    isLoading?: boolean;\n\n    /**\n     * Simulates no selection by creating an empty, selected, hidden first option\n     * @default false\n     */\n    hasNoInitialSelection?: boolean;\n    inputRef?: Ref<HTMLSelectElement>;\n    value?: string | number;\n\n    /**\n     * when `true` creates a shorter height input\n     * @default false\n     */\n    compressed?: boolean;\n\n    /**\n     * Creates an input group with element(s) coming before select.\n     * `string` | `ReactElement` or an array of these\n     */\n    prepend?: EuiFormControlLayoutProps[\"prepend\"];\n    /**\n     * Creates an input group with element(s) coming after select.\n     * `string` | `ReactElement` or an array of these\n     */\n    append?: EuiFormControlLayoutProps[\"append\"];\n  };\n\nexport const EuiSelect: FunctionComponent<EuiSelectProps> = (props) => {\n  const { defaultFullWidth } = useFormContext();\n  const {\n    className,\n    options = [],\n    id,\n    name,\n    inputRef,\n    isInvalid,\n    fullWidth = defaultFullWidth,\n    isLoading = false,\n    hasNoInitialSelection = false,\n    defaultValue,\n    compressed = false,\n    value: _value,\n    prepend,\n    append,\n    onMouseUp,\n    disabled,\n    ...rest\n  } = props;\n  // if this is injecting an empty option for `hasNoInitialSelection` then\n  // value needs to fallback to an empty string to interact properly with `defaultValue`\n  const value = hasNoInitialSelection ? _value ?? \"\" : _value;\n\n  const handleMouseUp = (e: React.MouseEvent<HTMLSelectElement>) => {\n    // Normalizes cross-browser mouse eventing by preventing propagation,\n    // notably for use in conjunction with EuiOutsideClickDetector.\n    // See https://github.com/elastic/eui/pull/1926 for full discussion on\n    // rationale and alternatives should this intervention become problematic.\n    e.nativeEvent.stopImmediatePropagation();\n    if (onMouseUp) onMouseUp(e);\n  };\n\n  const numIconsClass = getFormControlClassNameForIconCount({\n    isInvalid,\n    isLoading,\n    isDropdown: true,\n  });\n\n  const classes = classNames(\n    \"euiSelect\",\n    numIconsClass,\n    {\n      \"euiSelect--fullWidth\": fullWidth,\n      \"euiSelect--compressed\": compressed,\n      \"euiSelect--inGroup\": prepend || append,\n      \"euiSelect-isLoading\": isLoading,\n    },\n    className\n  );\n\n  let emptyOptionNode;\n  if (hasNoInitialSelection) {\n    emptyOptionNode = (\n      <option value=\"\" disabled hidden style={{ display: \"none\" }}>\n        &nbsp;\n      </option>\n    );\n  }\n\n  // React HTML input can not have both value and defaultValue properties.\n  // https://reactjs.org/docs/uncontrolled-components.html#default-values\n  let selectDefaultValue;\n  if (value == null) {\n    selectDefaultValue = defaultValue || \"\";\n  }\n\n  return (\n    <EuiFormControlLayout\n      isDropdown={true}\n      fullWidth={fullWidth}\n      isLoading={isLoading}\n      isInvalid={isInvalid}\n      isDisabled={disabled}\n      compressed={compressed}\n      prepend={prepend}\n      append={append}\n      inputId={id}\n    >\n      <EuiValidatableControl isInvalid={isInvalid}>\n        <select\n          id={id}\n          name={name}\n          className={classes}\n          ref={inputRef}\n          defaultValue={selectDefaultValue}\n          value={value}\n          onMouseUp={handleMouseUp}\n          disabled={disabled}\n          {...rest}\n        >\n          {emptyOptionNode}\n          {options.map((option, index) => {\n            const { text, ...rest } = option;\n            return (\n              <option {...rest} key={index}>\n                {text}\n              </option>\n            );\n          })}\n        </select>\n      </EuiValidatableControl>\n    </EuiFormControlLayout>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}