{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/Downloads/super_date_picker/src/form/form.tsx\",\n  _s = $RefreshSig$();\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { useCallback, forwardRef } from \"react\";\nimport classNames from \"classnames\";\nimport { EuiCallOut } from \"../call_out\";\nimport { EuiI18n } from \"../i18n\";\nimport { FormContext } from \"./eui_form_context\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EuiForm = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((_ref, ref) => {\n  _s();\n  let {\n    children,\n    className,\n    isInvalid,\n    error,\n    component = \"div\",\n    invalidCallout = \"above\",\n    fullWidth,\n    ...rest\n  } = _ref;\n  const formContext = React.useMemo(() => ({\n    defaultFullWidth: fullWidth !== null && fullWidth !== void 0 ? fullWidth : false\n  }), [fullWidth]);\n  const handleFocus = useCallback(node => {\n    node === null || node === void 0 ? void 0 : node.focus();\n  }, []);\n  const classes = classNames(\"euiForm\", className);\n  let optionalErrors = null;\n  if (error) {\n    const errorTexts = Array.isArray(error) ? error : [error];\n    optionalErrors = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: errorTexts.map((error, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"euiForm__error\",\n        children: error\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this);\n  }\n  let optionalErrorAlert;\n  if (isInvalid && invalidCallout === \"above\") {\n    optionalErrorAlert = /*#__PURE__*/_jsxDEV(EuiI18n, {\n      token: \"euiForm.addressFormErrors\",\n      default: \"Please address the highlighted errors.\",\n      children: addressFormErrors => /*#__PURE__*/_jsxDEV(EuiCallOut, {\n        tabIndex: -1,\n        ref: handleFocus,\n        className: \"euiForm__errors\",\n        title: addressFormErrors,\n        color: \"danger\",\n        role: \"alert\",\n        \"aria-live\": \"assertive\",\n        children: optionalErrors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this);\n  }\n  const Element = component;\n  return /*#__PURE__*/_jsxDEV(Element\n  // @ts-expect-error Element is a <div> or <form>, but TypeScript wants to support both\n  , {\n    ref: ref,\n    className: classes,\n    ...rest,\n    children: /*#__PURE__*/_jsxDEV(FormContext.Provider, {\n      value: formContext,\n      children: [optionalErrorAlert, children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 7\n  }, this);\n}, \"7jisLcKiKQYn6laIQ8o8fE9NF8I=\")), \"7jisLcKiKQYn6laIQ8o8fE9NF8I=\");\n_c2 = EuiForm;\nEuiForm.displayName = \"EuiForm\";\nvar _c, _c2;\n$RefreshReg$(_c, \"EuiForm$forwardRef\");\n$RefreshReg$(_c2, \"EuiForm\");","map":{"version":3,"names":["useCallback","forwardRef","classNames","EuiCallOut","EuiI18n","FormContext","React","EuiForm","ref","children","className","isInvalid","error","component","invalidCallout","fullWidth","rest","formContext","useMemo","defaultFullWidth","handleFocus","node","focus","classes","optionalErrors","errorTexts","Array","isArray","map","index","optionalErrorAlert","addressFormErrors","Element","displayName"],"sources":["/Users/nikita/Downloads/super_date_picker/src/form/form.tsx"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport {\n  ReactNode,\n  HTMLAttributes,\n  FormHTMLAttributes,\n  useCallback,\n  forwardRef,\n} from \"react\";\nimport classNames from \"classnames\";\nimport { EuiCallOut } from \"../call_out\";\nimport { EuiI18n } from \"../i18n\";\nimport { CommonProps, ExclusiveUnion } from \"../common\";\n\nimport { FormContext, FormContextValue } from \"./eui_form_context\";\nimport React from \"react\";\n\nexport type EuiFormProps = CommonProps &\n  ExclusiveUnion<\n    { component: \"form\" } & FormHTMLAttributes<HTMLFormElement>,\n    { component?: \"div\" } & HTMLAttributes<HTMLDivElement>\n  > & {\n    isInvalid?: boolean;\n    /**\n     * Which HTML element to render `div` or `form`\n     */\n    component?: \"form\" | \"div\";\n    error?: ReactNode | ReactNode[];\n    /**\n     * Where to display the callout with the list of errors\n     */\n    invalidCallout?: \"above\" | \"none\";\n    /**\n     * When set to `true`, all the rows/controls in this form will\n     * default to taking up 100% of the width of their continer. You\n     * can specify `fullWidth={false}` on individual rows/controls to\n     * disable this behavior for specific components.\n     * @default false\n     */\n    fullWidth?: boolean;\n  };\n\nexport const EuiForm = forwardRef<HTMLElement, EuiFormProps>(\n  (\n    {\n      children,\n      className,\n      isInvalid,\n      error,\n      component = \"div\",\n      invalidCallout = \"above\",\n      fullWidth,\n      ...rest\n    },\n    ref\n  ) => {\n    const formContext = React.useMemo(\n      (): FormContextValue => ({\n        defaultFullWidth: fullWidth ?? false,\n      }),\n      [fullWidth]\n    );\n\n    const handleFocus = useCallback((node: any) => {\n      node?.focus();\n    }, []);\n\n    const classes = classNames(\"euiForm\", className);\n\n    let optionalErrors: JSX.Element | null = null;\n\n    if (error) {\n      const errorTexts = Array.isArray(error) ? error : [error];\n      optionalErrors = (\n        <ul>\n          {errorTexts.map((error, index) => (\n            <li className=\"euiForm__error\" key={index}>\n              {error}\n            </li>\n          ))}\n        </ul>\n      );\n    }\n\n    let optionalErrorAlert;\n\n    if (isInvalid && invalidCallout === \"above\") {\n      optionalErrorAlert = (\n        <EuiI18n\n          token=\"euiForm.addressFormErrors\"\n          default=\"Please address the highlighted errors.\"\n        >\n          {(addressFormErrors: string) => (\n            <EuiCallOut\n              tabIndex={-1}\n              ref={handleFocus}\n              className=\"euiForm__errors\"\n              title={addressFormErrors}\n              color=\"danger\"\n              role=\"alert\"\n              aria-live=\"assertive\"\n            >\n              {optionalErrors}\n            </EuiCallOut>\n          )}\n        </EuiI18n>\n      );\n    }\n\n    const Element = component;\n\n    return (\n      <Element\n        // @ts-expect-error Element is a <div> or <form>, but TypeScript wants to support both\n        ref={ref}\n        className={classes}\n        {...(rest as HTMLAttributes<HTMLElement>)}\n      >\n        <FormContext.Provider value={formContext}>\n          {optionalErrorAlert}\n          {children}\n        </FormContext.Provider>\n      </Element>\n    );\n  }\n);\nEuiForm.displayName = \"EuiForm\";\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAIEA,WAAW,EACXC,UAAU,QACL,OAAO;AACd,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,UAAU,QAAQ,aAAa;AACxC,SAASC,OAAO,QAAQ,SAAS;AAGjC,SAASC,WAAW,QAA0B,oBAAoB;AAClE,OAAOC,KAAK,MAAM,OAAO;AAAC;AA2B1B,OAAO,MAAMC,OAAO,iCAAGN,UAAU,SAC/B,OAWEO,GAAG,KACA;EAAA;EAAA,IAXH;IACEC,QAAQ;IACRC,SAAS;IACTC,SAAS;IACTC,KAAK;IACLC,SAAS,GAAG,KAAK;IACjBC,cAAc,GAAG,OAAO;IACxBC,SAAS;IACT,GAAGC;EACL,CAAC;EAGD,MAAMC,WAAW,GAAGX,KAAK,CAACY,OAAO,CAC/B,OAAyB;IACvBC,gBAAgB,EAAEJ,SAAS,aAATA,SAAS,cAATA,SAAS,GAAI;EACjC,CAAC,CAAC,EACF,CAACA,SAAS,CAAC,CACZ;EAED,MAAMK,WAAW,GAAGpB,WAAW,CAAEqB,IAAS,IAAK;IAC7CA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,KAAK,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,OAAO,GAAGrB,UAAU,CAAC,SAAS,EAAEQ,SAAS,CAAC;EAEhD,IAAIc,cAAkC,GAAG,IAAI;EAE7C,IAAIZ,KAAK,EAAE;IACT,MAAMa,UAAU,GAAGC,KAAK,CAACC,OAAO,CAACf,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC;IACzDY,cAAc,gBACZ;MAAA,UACGC,UAAU,CAACG,GAAG,CAAC,CAAChB,KAAK,EAAEiB,KAAK,kBAC3B;QAAI,SAAS,EAAC,gBAAgB;QAAA,UAC3BjB;MAAK,GAD4BiB,KAAK;QAAA;QAAA;QAAA;MAAA,QAG1C;IAAC;MAAA;MAAA;MAAA;IAAA,QAEL;EACH;EAEA,IAAIC,kBAAkB;EAEtB,IAAInB,SAAS,IAAIG,cAAc,KAAK,OAAO,EAAE;IAC3CgB,kBAAkB,gBAChB,QAAC,OAAO;MACN,KAAK,EAAC,2BAA2B;MACjC,OAAO,EAAC,wCAAwC;MAAA,UAE9CC,iBAAyB,iBACzB,QAAC,UAAU;QACT,QAAQ,EAAE,CAAC,CAAE;QACb,GAAG,EAAEX,WAAY;QACjB,SAAS,EAAC,iBAAiB;QAC3B,KAAK,EAAEW,iBAAkB;QACzB,KAAK,EAAC,QAAQ;QACd,IAAI,EAAC,OAAO;QACZ,aAAU,WAAW;QAAA,UAEpBP;MAAc;QAAA;QAAA;QAAA;MAAA;IAElB;MAAA;MAAA;MAAA;IAAA,QAEJ;EACH;EAEA,MAAMQ,OAAO,GAAGnB,SAAS;EAEzB,oBACE,QAAC;EACC;EAAA;IACA,GAAG,EAAEL,GAAI;IACT,SAAS,EAAEe,OAAQ;IAAA,GACdP,IAAI;IAAA,uBAET,QAAC,WAAW,CAAC,QAAQ;MAAC,KAAK,EAAEC,WAAY;MAAA,WACtCa,kBAAkB,EAClBrB,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA;EACY;IAAA;IAAA;IAAA;EAAA,QACf;AAEd,CAAC,kCACF;AAAC,MAnFWF,OAAO;AAoFpBA,OAAO,CAAC0B,WAAW,GAAG,SAAS;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}