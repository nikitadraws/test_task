{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/Downloads/super_date_picker/src/date_picker/super_date_picker/super_update_button.tsx\";\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { Component, Fragment } from \"react\";\nimport classNames from \"classnames\";\nimport { EuiButton } from \"../../button\";\nimport { EuiI18n } from \"../../i18n\";\nimport { EuiToolTip } from \"../../tool_tip\";\nimport { EuiHideFor, EuiShowFor } from \"../../responsive\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class EuiSuperUpdateButton extends Component {\n  constructor() {\n    super(...arguments);\n    this._isMounted = false;\n    this.tooltipTimeout = void 0;\n    this.tooltip = null;\n    this.setTootipRef = node => {\n      this.tooltip = node;\n    };\n    this.showTooltip = () => {\n      if (!this._isMounted || !this.tooltip) {\n        return;\n      }\n      this.tooltip.showToolTip();\n    };\n    this.hideTooltip = () => {\n      if (!this._isMounted || !this.tooltip) {\n        return;\n      }\n      this.tooltip.hideToolTip();\n    };\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  componentDidMount() {\n    this._isMounted = true;\n  }\n  componentDidUpdate() {\n    if (this.props.showTooltip && this.props.needsUpdate && !this.props.isDisabled && !this.props.isLoading) {\n      this.showTooltip();\n      this.tooltipTimeout = setTimeout(() => {\n        this.hideTooltip();\n      }, 2000);\n    }\n  }\n  render() {\n    const {\n      className,\n      needsUpdate,\n      isLoading,\n      isDisabled,\n      onClick,\n      toolTipProps,\n      showTooltip,\n      iconOnly,\n      responsive: _responsive,\n      textProps: restTextProps,\n      fill,\n      ...rest\n    } = this.props;\n    // Force responsive for \"all\" if `iconOnly = true`\n    const responsive = iconOnly ? \"all\" : _responsive;\n    const classes = classNames(\"euiSuperUpdateButton\", className);\n    let buttonText = /*#__PURE__*/_jsxDEV(EuiI18n, {\n      token: \"euiSuperUpdateButton.refreshButtonLabel\",\n      default: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this);\n    if (needsUpdate || isLoading) {\n      buttonText = isLoading ? /*#__PURE__*/_jsxDEV(EuiI18n, {\n        token: \"euiSuperUpdateButton.updatingButtonLabel\",\n        default: \"Updating\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(EuiI18n, {\n        token: \"euiSuperUpdateButton.updateButtonLabel\",\n        default: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this);\n    }\n    let tooltipContent;\n    if (isDisabled) {\n      tooltipContent = /*#__PURE__*/_jsxDEV(EuiI18n, {\n        token: \"euiSuperUpdateButton.cannotUpdateTooltip\",\n        default: \"Cannot update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this);\n    } else if (needsUpdate && !isLoading) {\n      tooltipContent = /*#__PURE__*/_jsxDEV(EuiI18n, {\n        token: \"euiSuperUpdateButton.clickToApplyTooltip\",\n        default: \"Click to apply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this);\n    }\n    const sharedButtonProps = {\n      color: needsUpdate || isLoading ? \"success\" : \"primary\",\n      iconType: needsUpdate || isLoading ? \"kqlFunction\" : \"refresh\",\n      isDisabled: isDisabled,\n      onClick: onClick,\n      isLoading: isLoading\n    };\n    return /*#__PURE__*/_jsxDEV(EuiToolTip, {\n      ref: this.setTootipRef,\n      content: tooltipContent,\n      position: \"bottom\",\n      ...toolTipProps,\n      children: /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(EuiShowFor, {\n          sizes: responsive || \"none\",\n          children: /*#__PURE__*/_jsxDEV(EuiButton, {\n            className: classes,\n            minWidth: 0,\n            ...sharedButtonProps,\n            fill: fill,\n            textProps: {\n              ...restTextProps,\n              className: classNames(\"euiScreenReaderOnly\", restTextProps === null || restTextProps === void 0 ? void 0 : restTextProps.className)\n            },\n            ...rest,\n            children: buttonText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EuiHideFor, {\n          sizes: responsive || \"none\",\n          children: /*#__PURE__*/_jsxDEV(EuiButton, {\n            className: classes,\n            minWidth: 118,\n            ...sharedButtonProps,\n            fill: fill,\n            textProps: restTextProps,\n            ...rest,\n            children: buttonText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this);\n  }\n}\nEuiSuperUpdateButton.defaultProps = {\n  needsUpdate: false,\n  isLoading: false,\n  isDisabled: false,\n  showTooltip: false,\n  responsive: [\"xs\", \"s\"],\n  fill: true\n};","map":{"version":3,"names":["Component","Fragment","classNames","EuiButton","EuiI18n","EuiToolTip","EuiHideFor","EuiShowFor","EuiSuperUpdateButton","_isMounted","tooltipTimeout","tooltip","setTootipRef","node","showTooltip","showToolTip","hideTooltip","hideToolTip","componentWillUnmount","componentDidMount","componentDidUpdate","props","needsUpdate","isDisabled","isLoading","setTimeout","render","className","onClick","toolTipProps","iconOnly","responsive","_responsive","textProps","restTextProps","fill","rest","classes","buttonText","tooltipContent","sharedButtonProps","color","iconType","defaultProps"],"sources":["/Users/nikita/Downloads/super_date_picker/src/date_picker/super_date_picker/super_update_button.tsx"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { Component, MouseEventHandler, ElementRef, Fragment } from \"react\";\nimport classNames from \"classnames\";\n\nimport { EuiButton, EuiButtonProps } from \"../../button\";\nimport { EuiI18n } from \"../../i18n\";\nimport { EuiToolTip, EuiToolTipProps } from \"../../tool_tip\";\nimport { EuiBreakpointSize } from \"../../services/breakpoint\";\nimport { EuiHideFor, EuiShowFor } from \"../../responsive\";\n\ntype ToolTipRef = ElementRef<typeof EuiToolTip> | null;\n\ntype EuiSuperUpdateButtonInternalProps = {\n  isDisabled?: boolean;\n  isLoading?: boolean;\n  needsUpdate?: boolean;\n  onClick: MouseEventHandler<HTMLButtonElement>;\n};\n\nexport type EuiSuperUpdateButtonProps = {\n  /**\n   * Show the \"Click to apply\" tooltip\n   */\n  showTooltip?: boolean;\n\n  /**\n   * Passes props to `EuiToolTip`\n   */\n  toolTipProps?: EuiToolTipProps;\n\n  /**\n   * Returns an IconButton instead\n   */\n  iconOnly?: boolean;\n\n  /**\n   * Forces state to be `iconOnly` when within provided breakpoints.\n   * Remove completely with `false` or provide your own list of breakpoints.\n   */\n  responsive?: false | EuiBreakpointSize[];\n} & Partial<Omit<EuiButtonProps, \"isDisabled\" | \"isLoading\" | \"onClick\">>;\n\nexport class EuiSuperUpdateButton extends Component<\n  EuiSuperUpdateButtonInternalProps & EuiSuperUpdateButtonProps\n> {\n  static defaultProps = {\n    needsUpdate: false,\n    isLoading: false,\n    isDisabled: false,\n    showTooltip: false,\n    responsive: [\"xs\", \"s\"],\n    fill: true,\n  };\n  _isMounted = false;\n  tooltipTimeout: number | undefined;\n  tooltip: ToolTipRef = null;\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentDidUpdate() {\n    if (\n      this.props.showTooltip &&\n      this.props.needsUpdate &&\n      !this.props.isDisabled &&\n      !this.props.isLoading\n    ) {\n      this.showTooltip();\n      this.tooltipTimeout = setTimeout(() => {\n        this.hideTooltip();\n      }, 2000) as unknown as number | undefined;\n    }\n  }\n\n  setTootipRef = (node: ToolTipRef) => {\n    this.tooltip = node;\n  };\n\n  showTooltip = () => {\n    if (!this._isMounted || !this.tooltip) {\n      return;\n    }\n    this.tooltip.showToolTip();\n  };\n\n  hideTooltip = () => {\n    if (!this._isMounted || !this.tooltip) {\n      return;\n    }\n    this.tooltip.hideToolTip();\n  };\n\n  render() {\n    const {\n      className,\n      needsUpdate,\n      isLoading,\n      isDisabled,\n      onClick,\n      toolTipProps,\n      showTooltip,\n      iconOnly,\n      responsive: _responsive,\n      textProps: restTextProps,\n      fill,\n      ...rest\n    } = this.props;\n    // Force responsive for \"all\" if `iconOnly = true`\n    const responsive = iconOnly ? \"all\" : _responsive;\n\n    const classes = classNames(\"euiSuperUpdateButton\", className);\n\n    let buttonText = (\n      <EuiI18n\n        token=\"euiSuperUpdateButton.refreshButtonLabel\"\n        default=\"Refresh\"\n      />\n    );\n    if (needsUpdate || isLoading) {\n      buttonText = isLoading ? (\n        <EuiI18n\n          token=\"euiSuperUpdateButton.updatingButtonLabel\"\n          default=\"Updating\"\n        />\n      ) : (\n        <EuiI18n\n          token=\"euiSuperUpdateButton.updateButtonLabel\"\n          default=\"Update\"\n        />\n      );\n    }\n\n    let tooltipContent;\n    if (isDisabled) {\n      tooltipContent = (\n        <EuiI18n\n          token=\"euiSuperUpdateButton.cannotUpdateTooltip\"\n          default=\"Cannot update\"\n        />\n      );\n    } else if (needsUpdate && !isLoading) {\n      tooltipContent = (\n        <EuiI18n\n          token=\"euiSuperUpdateButton.clickToApplyTooltip\"\n          default=\"Click to apply\"\n        />\n      );\n    }\n\n    const sharedButtonProps = {\n      color: needsUpdate || isLoading ? \"success\" : \"primary\",\n      iconType: needsUpdate || isLoading ? \"kqlFunction\" : \"refresh\",\n      isDisabled: isDisabled,\n      onClick: onClick,\n      isLoading: isLoading,\n    };\n\n    return (\n      <EuiToolTip\n        ref={this.setTootipRef}\n        content={tooltipContent}\n        position=\"bottom\"\n        {...toolTipProps}\n      >\n        <Fragment>\n          <EuiShowFor sizes={responsive || \"none\"}>\n            <EuiButton\n              className={classes}\n              minWidth={0}\n              {...(sharedButtonProps as EuiButtonProps)}\n              fill={fill}\n              textProps={{\n                ...restTextProps,\n                className: classNames(\n                  \"euiScreenReaderOnly\",\n                  restTextProps?.className\n                ),\n              }}\n              {...rest}\n            >\n              {buttonText}\n            </EuiButton>\n          </EuiShowFor>\n          <EuiHideFor sizes={responsive || \"none\"}>\n            <EuiButton\n              className={classes}\n              minWidth={118}\n              {...(sharedButtonProps as EuiButtonProps)}\n              fill={fill}\n              textProps={restTextProps}\n              {...rest}\n            >\n              {buttonText}\n            </EuiButton>\n          </EuiHideFor>\n        </Fragment>\n      </EuiToolTip>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}