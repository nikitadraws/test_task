{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/Downloads/super_date_picker/src/tabs/tabbed_content/tabbed_content.tsx\";\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { Component, createRef } from \"react\";\nimport { htmlIdGenerator } from \"../../services\";\nimport { EuiTabs } from \"../tabs\";\nimport { EuiTab } from \"../tab\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\n * Marked as const so type is `['initial', 'selected']` instead of `string[]`\n */\nexport const AUTOFOCUS = [\"initial\", \"selected\"];\nexport class EuiTabbedContent extends Component {\n  constructor(props) {\n    super(props);\n    this.rootId = htmlIdGenerator()();\n    this.tabsRef = /*#__PURE__*/createRef();\n    this.focusTab = () => {\n      const targetTab = this.tabsRef.current.querySelector(`#${this.state.selectedTabId}`);\n      targetTab.focus();\n    };\n    this.initializeFocus = () => {\n      if (!this.state.inFocus && this.props.autoFocus === \"selected\") {\n        // Must wait for setState to finish before calling `.focus()`\n        // as the focus call triggers a blur on the first tab\n        this.setState({\n          inFocus: true\n        }, () => {\n          this.focusTab();\n        });\n      }\n    };\n    this.removeFocus = blurEvent => {\n      // only set inFocus to false if the wrapping div doesn't contain the now-focusing element\n      const currentTarget = blurEvent.currentTarget;\n      const relatedTarget = blurEvent.relatedTarget;\n      if (currentTarget.contains(relatedTarget) === false) {\n        this.setState({\n          inFocus: false\n        });\n      }\n    };\n    this.onTabClick = selectedTab => {\n      const {\n        onTabClick,\n        selectedTab: externalSelectedTab\n      } = this.props;\n      if (onTabClick) {\n        onTabClick(selectedTab);\n      }\n\n      // Only track selection state if it's not controlled externally.\n      if (!externalSelectedTab) {\n        this.setState({\n          selectedTabId: selectedTab.id\n        }, () => {\n          this.focusTab();\n        });\n      }\n    };\n    const {\n      initialSelectedTab,\n      selectedTab: _selectedTab,\n      tabs\n    } = props;\n\n    // Only track selection state if it's not controlled externally.\n    let selectedTabId;\n    if (!_selectedTab) {\n      selectedTabId = initialSelectedTab && initialSelectedTab.id || tabs[0].id;\n    }\n    this.state = {\n      selectedTabId,\n      inFocus: false\n    };\n  }\n  render() {\n    const {\n      className,\n      expand,\n      initialSelectedTab,\n      onTabClick,\n      selectedTab: externalSelectedTab,\n      size,\n      tabs,\n      autoFocus,\n      ...rest\n    } = this.props;\n\n    // Allow the consumer to control tab selection.\n    const selectedTab = externalSelectedTab || tabs.find(tab => tab.id === this.state.selectedTabId);\n    const {\n      content: selectedTabContent,\n      id: selectedTabId\n    } = selectedTab;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      ...rest,\n      children: [/*#__PURE__*/_jsxDEV(EuiTabs, {\n        ref: this.tabsRef,\n        expand: expand,\n        size: size,\n        onFocus: this.initializeFocus,\n        onBlur: this.removeFocus,\n        children: tabs.map(tab => {\n          const {\n            id,\n            name,\n            content,\n            // eslint-disable-line no-unused-vars\n            ...tabProps\n          } = tab;\n          const props = {\n            key: id,\n            id,\n            ...tabProps,\n            onClick: () => this.onTabClick(tab),\n            isSelected: tab === selectedTab,\n            \"aria-controls\": `${this.rootId}`\n          };\n          return /*#__PURE__*/_jsxDEV(EuiTab, {\n            ...props,\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"tabpanel\",\n        id: `${this.rootId}`,\n        \"aria-labelledby\": selectedTabId,\n        children: selectedTabContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this);\n  }\n}\nEuiTabbedContent.defaultProps = {\n  autoFocus: \"initial\"\n};","map":{"version":3,"names":["Component","createRef","htmlIdGenerator","EuiTabs","EuiTab","AUTOFOCUS","EuiTabbedContent","constructor","props","rootId","tabsRef","focusTab","targetTab","current","querySelector","state","selectedTabId","focus","initializeFocus","inFocus","autoFocus","setState","removeFocus","blurEvent","currentTarget","relatedTarget","contains","onTabClick","selectedTab","externalSelectedTab","id","initialSelectedTab","tabs","render","className","expand","size","rest","find","tab","content","selectedTabContent","map","name","tabProps","key","onClick","isSelected","defaultProps"],"sources":["/Users/nikita/Downloads/super_date_picker/src/tabs/tabbed_content/tabbed_content.tsx"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport {\n  Component,\n  createRef,\n  HTMLAttributes,\n  ReactNode,\n  FocusEvent,\n} from \"react\";\n\nimport { htmlIdGenerator } from \"../../services\";\n\nimport { EuiTabs, EuiTabsSizes } from \"../tabs\";\nimport { EuiTab, EuiTabProps } from \"../tab\";\nimport { CommonProps } from \"../../common\";\n\n/**\n * Marked as const so type is `['initial', 'selected']` instead of `string[]`\n */\nexport const AUTOFOCUS = [\"initial\", \"selected\"] as const;\n\nexport interface EuiTabbedContentTab extends EuiTabProps {\n  id: string;\n  name: ReactNode;\n  content: ReactNode;\n}\n\ninterface EuiTabbedContentState {\n  selectedTabId: string | undefined;\n  inFocus: boolean;\n}\n\nexport type EuiTabbedContentProps = CommonProps &\n  HTMLAttributes<HTMLDivElement> & {\n    /**\n     * When tabbing into the tabs, set the focus on `initial` for the first tab,\n     * or `selected` for the currently selected tab. Best use case is for inside of\n     * overlay content like popovers or flyouts.\n     */\n    autoFocus?: \"initial\" | \"selected\";\n    /**\n     * Evenly stretches each tab to fill the horizontal space\n     */\n    expand?: boolean;\n    /**\n     * Use this prop to set the initially selected tab while letting the tabbed content component\n     * control selection state internally\n     */\n    initialSelectedTab?: EuiTabbedContentTab;\n    onTabClick?: (selectedTab: EuiTabbedContentTab) => void;\n    /**\n     * Use this prop if you want to control selection state within the owner component\n     */\n    selectedTab?: EuiTabbedContentTab;\n    size?: EuiTabsSizes;\n    /**\n     * Each tab needs id and content properties, so we can associate it with its panel for accessibility.\n     * The name property (a node) is also required to display to the user.\n     */\n    tabs: EuiTabbedContentTab[];\n  };\n\nexport class EuiTabbedContent extends Component<\n  EuiTabbedContentProps,\n  EuiTabbedContentState\n> {\n  static defaultProps = {\n    autoFocus: \"initial\",\n  };\n\n  private readonly rootId = htmlIdGenerator()();\n\n  private readonly tabsRef = createRef<HTMLDivElement>();\n\n  constructor(props: EuiTabbedContentProps) {\n    super(props);\n\n    const { initialSelectedTab, selectedTab, tabs } = props;\n\n    // Only track selection state if it's not controlled externally.\n    let selectedTabId;\n    if (!selectedTab) {\n      selectedTabId =\n        (initialSelectedTab && initialSelectedTab.id) || tabs[0].id;\n    }\n\n    this.state = {\n      selectedTabId,\n      inFocus: false,\n    };\n  }\n\n  focusTab = () => {\n    const targetTab: HTMLDivElement | null =\n      this.tabsRef.current!.querySelector(`#${this.state.selectedTabId}`);\n    targetTab!.focus();\n  };\n\n  initializeFocus = () => {\n    if (!this.state.inFocus && this.props.autoFocus === \"selected\") {\n      // Must wait for setState to finish before calling `.focus()`\n      // as the focus call triggers a blur on the first tab\n      this.setState({ inFocus: true }, () => {\n        this.focusTab();\n      });\n    }\n  };\n\n  removeFocus = (blurEvent: FocusEvent<HTMLDivElement>) => {\n    // only set inFocus to false if the wrapping div doesn't contain the now-focusing element\n    const currentTarget = blurEvent.currentTarget! as HTMLElement;\n    const relatedTarget = blurEvent.relatedTarget! as HTMLElement;\n    if (currentTarget.contains(relatedTarget) === false) {\n      this.setState({\n        inFocus: false,\n      });\n    }\n  };\n\n  onTabClick = (selectedTab: EuiTabbedContentTab) => {\n    const { onTabClick, selectedTab: externalSelectedTab } = this.props;\n\n    if (onTabClick) {\n      onTabClick(selectedTab);\n    }\n\n    // Only track selection state if it's not controlled externally.\n    if (!externalSelectedTab) {\n      this.setState({ selectedTabId: selectedTab.id }, () => {\n        this.focusTab();\n      });\n    }\n  };\n\n  render() {\n    const {\n      className,\n      expand,\n      initialSelectedTab,\n      onTabClick,\n      selectedTab: externalSelectedTab,\n      size,\n      tabs,\n      autoFocus,\n      ...rest\n    } = this.props;\n\n    // Allow the consumer to control tab selection.\n    const selectedTab =\n      externalSelectedTab ||\n      tabs.find(\n        (tab: EuiTabbedContentTab) => tab.id === this.state.selectedTabId\n      );\n\n    const { content: selectedTabContent, id: selectedTabId } = selectedTab!;\n\n    return (\n      <div className={className} {...rest}>\n        <EuiTabs\n          ref={this.tabsRef}\n          expand={expand}\n          size={size}\n          onFocus={this.initializeFocus}\n          onBlur={this.removeFocus}\n        >\n          {tabs.map((tab: EuiTabbedContentTab) => {\n            const {\n              id,\n              name,\n              content, // eslint-disable-line no-unused-vars\n              ...tabProps\n            } = tab;\n            const props = {\n              key: id,\n              id,\n              ...tabProps,\n              onClick: () => this.onTabClick(tab),\n              isSelected: tab === selectedTab,\n              \"aria-controls\": `${this.rootId}`,\n            };\n\n            return <EuiTab {...props}>{name}</EuiTab>;\n          })}\n        </EuiTabs>\n\n        <div\n          role=\"tabpanel\"\n          id={`${this.rootId}`}\n          aria-labelledby={selectedTabId}\n        >\n          {selectedTabContent}\n        </div>\n      </div>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}