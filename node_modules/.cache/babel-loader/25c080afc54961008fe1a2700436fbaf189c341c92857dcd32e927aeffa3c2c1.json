{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/Downloads/super_date_picker/src/date_picker/super_date_picker/pretty_duration.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport React, { Fragment } from \"react\";\nimport dateMath from \"@elastic/datemath\";\nimport moment from \"moment\"; // eslint-disable-line import/named\nimport { useEuiI18n } from \"../../i18n\";\nimport { getDateMode, DATE_MODES } from \"./date_modes\";\nimport { parseRelativeParts } from \"./relative_utils\";\nimport { useI18nTimeOptions } from \"./time_options\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\n * Pretty duration i18n strings\n * Units should not be simply concatenated because different languages\n * will have different grammar/positions for time than English\n */\n\nconst useRelativeDurationI18n = duration => {\n  _s();\n  return {\n    s: useEuiI18n(\"euiPrettyDuration.lastDurationSeconds\", _ref => {\n      let {\n        duration\n      } = _ref;\n      return `Last ${duration} second${duration === 1 ? \"\" : \"s\"}`;\n    }, {\n      duration\n    }),\n    \"s+\": useEuiI18n(\"euiPrettyDuration.nextDurationSeconds\", _ref2 => {\n      let {\n        duration\n      } = _ref2;\n      return `Next ${duration} second${duration === 1 ? \"\" : \"s\"}`;\n    }, {\n      duration\n    }),\n    m: useEuiI18n(\"euiPrettyDuration.lastDurationMinutes\", _ref3 => {\n      let {\n        duration\n      } = _ref3;\n      return `Last ${duration} minute${duration === 1 ? \"\" : \"s\"}`;\n    }, {\n      duration\n    }),\n    \"m+\": useEuiI18n(\"euiPrettyDuration.nextDurationMinutes\", _ref4 => {\n      let {\n        duration\n      } = _ref4;\n      return `Next ${duration} minute${duration === 1 ? \"\" : \"s\"}`;\n    }, {\n      duration\n    }),\n    h: useEuiI18n(\"euiPrettyDuration.lastDurationHours\", _ref5 => {\n      let {\n        duration\n      } = _ref5;\n      return `Last ${duration} hour${duration === 1 ? \"\" : \"s\"}`;\n    }, {\n      duration\n    }),\n    \"h+\": useEuiI18n(\"euiPrettyDuration.nextDurationHours\", _ref6 => {\n      let {\n        duration\n      } = _ref6;\n      return `Next ${duration} hour${duration === 1 ? \"\" : \"s\"}`;\n    }, {\n      duration\n    }),\n    d: useEuiI18n(\"euiPrettyDuration.lastDurationDays\", _ref7 => {\n      let {\n        duration\n      } = _ref7;\n      return `Last ${duration} day${duration === 1 ? \"\" : \"s\"}`;\n    }, {\n      duration\n    }),\n    \"d+\": useEuiI18n(\"euiPrettyDuration.nexttDurationDays\", _ref8 => {\n      let {\n        duration\n      } = _ref8;\n      return `Next ${duration} day${duration === 1 ? \"\" : \"s\"}`;\n    }, {\n      duration\n    }),\n    w: useEuiI18n(\"euiPrettyDuration.lastDurationWeeks\", _ref9 => {\n      let {\n        duration\n      } = _ref9;\n      return `Last ${duration} week${duration === 1 ? \"\" : \"s\"}`;\n    }, {\n      duration\n    }),\n    \"w+\": useEuiI18n(\"euiPrettyDuration.nextDurationWeeks\", _ref10 => {\n      let {\n        duration\n      } = _ref10;\n      return `Next ${duration} week${duration === 1 ? \"\" : \"s\"}`;\n    }, {\n      duration\n    }),\n    M: useEuiI18n(\"euiPrettyDuration.lastDurationMonths\", _ref11 => {\n      let {\n        duration\n      } = _ref11;\n      return `Last ${duration} month${duration === 1 ? \"\" : \"s\"}`;\n    }, {\n      duration\n    }),\n    \"M+\": useEuiI18n(\"euiPrettyDuration.nextDurationMonths\", _ref12 => {\n      let {\n        duration\n      } = _ref12;\n      return `Next ${duration} month${duration === 1 ? \"\" : \"s\"}`;\n    }, {\n      duration\n    }),\n    y: useEuiI18n(\"euiPrettyDuration.lastDurationYears\", _ref13 => {\n      let {\n        duration\n      } = _ref13;\n      return `Last ${duration} year${duration === 1 ? \"\" : \"s\"}`;\n    }, {\n      duration\n    }),\n    \"y+\": useEuiI18n(\"euiPrettyDuration.nextDurationYears\", _ref14 => {\n      let {\n        duration\n      } = _ref14;\n      return `Next ${duration} year${duration === 1 ? \"\" : \"s\"}`;\n    }, {\n      duration\n    })\n  };\n};\n_s(useRelativeDurationI18n, \"B6OC7UBXlXXjEqvg2egjyvx4y50=\", false, function () {\n  return [useEuiI18n, useEuiI18n, useEuiI18n, useEuiI18n, useEuiI18n, useEuiI18n, useEuiI18n, useEuiI18n, useEuiI18n, useEuiI18n, useEuiI18n, useEuiI18n, useEuiI18n, useEuiI18n];\n});\nconst useRelativeDurationRoundedI18n = prettyDuration => {\n  _s2();\n  return {\n    s: useEuiI18n(\"euiPrettyDuration.durationRoundedToSecond\", \"{prettyDuration} rounded to the second\", {\n      prettyDuration\n    }),\n    m: useEuiI18n(\"euiPrettyDuration.durationRoundedToMinute\", \"{prettyDuration} rounded to the minute\", {\n      prettyDuration\n    }),\n    h: useEuiI18n(\"euiPrettyDuration.durationRoundedToHour\", \"{prettyDuration} rounded to the hour\", {\n      prettyDuration\n    }),\n    d: useEuiI18n(\"euiPrettyDuration.durationRoundedToDay\", \"{prettyDuration} rounded to the day\", {\n      prettyDuration\n    }),\n    w: useEuiI18n(\"euiPrettyDuration.durationRoundedToWeek\", \"{prettyDuration} rounded to the week\", {\n      prettyDuration\n    }),\n    M: useEuiI18n(\"euiPrettyDuration.durationRoundedToMonth\", \"{prettyDuration} rounded to the month\", {\n      prettyDuration\n    }),\n    y: useEuiI18n(\"euiPrettyDuration.durationRoundedToYear\", \"{prettyDuration} rounded to the year\", {\n      prettyDuration\n    })\n  };\n};\n\n/**\n * Reusable format time string util\n */\n_s2(useRelativeDurationRoundedI18n, \"czwFQNxtC71fKkYmRV8OcQaShgU=\", false, function () {\n  return [useEuiI18n, useEuiI18n, useEuiI18n, useEuiI18n, useEuiI18n, useEuiI18n, useEuiI18n];\n});\nconst ISO_FORMAT = \"YYYY-MM-DDTHH:mm:ss.SSSZ\";\nexport const useFormatTimeString = function (timeString, dateFormat) {\n  _s3();\n  let roundUp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  let locale = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"en\";\n  // i18n'd strings\n  const nowDisplay = useEuiI18n(\"euiPrettyDuration.now\", \"now\");\n  const invalidDateDisplay = useEuiI18n(\"euiPrettyDuration.invalid\", \"Invalid date\");\n  const timeAsMoment = moment(timeString, ISO_FORMAT, true);\n  if (timeAsMoment.isValid()) {\n    return timeAsMoment.locale(locale).format(dateFormat);\n  }\n  if (timeString === \"now\") {\n    return nowDisplay;\n  }\n  const tryParse = dateMath.parse(timeString, {\n    roundUp: roundUp\n  });\n  if (!moment(tryParse).isValid()) {\n    return invalidDateDisplay;\n  }\n  if (moment.isMoment(tryParse)) {\n    return `~ ${tryParse.locale(locale).fromNow()}`;\n  }\n  return timeString;\n};\n\n/**\n * Pretty duration hook+component\n */\n_s3(useFormatTimeString, \"739PMylc9+KGrblq3p0CZucQMSA=\", false, function () {\n  return [useEuiI18n, useEuiI18n];\n});\nexport const usePrettyDuration = _ref15 => {\n  _s4();\n  let {\n    timeFrom,\n    timeTo,\n    quickRanges,\n    dateFormat\n  } = _ref15;\n  let prettyDuration = \"\";\n\n  /**\n   * If it's a quick range, use the quick range label\n   */\n  const {\n    commonDurationRanges\n  } = useI18nTimeOptions();\n  const matchingQuickRange = hasRangeMatch(timeFrom, timeTo, quickRanges || commonDurationRanges);\n  if (matchingQuickRange && matchingQuickRange.label) {\n    prettyDuration = matchingQuickRange.label;\n  }\n\n  /**\n   * Otherwise if it's a relative (possibly rounded) duration, figure out\n   * a pretty i18n'd duration to display\n   */\n  let relativeDuration = 0;\n  let relativeParts = {};\n  if (isRelativeToNow(timeFrom, timeTo)) {\n    if (getDateMode(timeTo) === DATE_MODES.NOW) {\n      relativeParts = parseRelativeParts(timeFrom);\n    } else {\n      relativeParts = parseRelativeParts(timeTo);\n    }\n    relativeDuration = relativeParts.count;\n  }\n  const relativeDurationI18n = useRelativeDurationI18n(relativeDuration);\n  const relativeDurationString = relativeParts.unit ? relativeDurationI18n[relativeParts.unit] : \"\";\n  const roundedDurationI18n = useRelativeDurationRoundedI18n(relativeDurationString);\n  const roundedDurationString = relativeParts.round && relativeParts.roundUnit ? roundedDurationI18n[relativeParts.roundUnit] : \"\";\n  if (!prettyDuration) {\n    prettyDuration = roundedDurationString || relativeDurationString;\n  }\n\n  /**\n   * If it's none of the above, display basic fallback copy\n   */\n  const displayFrom = useFormatTimeString(timeFrom, dateFormat);\n  const displayTo = useFormatTimeString(timeTo, dateFormat, true);\n  const fallbackDuration = useEuiI18n(\"euiPrettyDuration.fallbackDuration\", \"{displayFrom} to {displayTo}\", {\n    displayFrom,\n    displayTo\n  });\n  if (!prettyDuration) {\n    prettyDuration = fallbackDuration;\n  }\n  return prettyDuration;\n};\n_s4(usePrettyDuration, \"JmlvxGGP6kjwgOoHTKATn5KEjg0=\", false, function () {\n  return [useI18nTimeOptions, useRelativeDurationI18n, useRelativeDurationRoundedI18n, useFormatTimeString, useFormatTimeString, useEuiI18n];\n});\nexport const PrettyDuration = _ref16 => {\n  _s5();\n  let {\n    timeFrom,\n    timeTo,\n    quickRanges,\n    dateFormat\n  } = _ref16;\n  const prettyDuration = usePrettyDuration({\n    timeFrom,\n    timeTo,\n    quickRanges,\n    dateFormat\n  });\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: prettyDuration\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 10\n  }, this);\n};\n\n/**\n * Non-hook utils\n */\n_s5(PrettyDuration, \"Cf49ksNEc+MZxEAZMk4H196TIJ8=\", false, function () {\n  return [usePrettyDuration];\n});\n_c = PrettyDuration;\nconst hasRangeMatch = (timeFrom, timeTo, ranges) => {\n  return ranges.find(_ref17 => {\n    let {\n      start,\n      end\n    } = _ref17;\n    return timeFrom === start && timeTo === end;\n  });\n};\nconst isRelativeToNow = (timeFrom, timeTo) => {\n  const fromDateMode = getDateMode(timeFrom);\n  const toDateMode = getDateMode(timeTo);\n  const isLast = fromDateMode === DATE_MODES.RELATIVE && toDateMode === DATE_MODES.NOW;\n  const isNext = fromDateMode === DATE_MODES.NOW && toDateMode === DATE_MODES.RELATIVE;\n  return isLast || isNext;\n};\nexport const showPrettyDuration = (timeFrom, timeTo, quickRanges) => {\n  if (hasRangeMatch(timeFrom, timeTo, quickRanges)) {\n    return true;\n  }\n  return isRelativeToNow(timeFrom, timeTo);\n};\nvar _c;\n$RefreshReg$(_c, \"PrettyDuration\");","map":{"version":3,"names":["React","Fragment","dateMath","moment","useEuiI18n","getDateMode","DATE_MODES","parseRelativeParts","useI18nTimeOptions","useRelativeDurationI18n","duration","s","m","h","d","w","M","y","useRelativeDurationRoundedI18n","prettyDuration","ISO_FORMAT","useFormatTimeString","timeString","dateFormat","roundUp","locale","nowDisplay","invalidDateDisplay","timeAsMoment","isValid","format","tryParse","parse","isMoment","fromNow","usePrettyDuration","timeFrom","timeTo","quickRanges","commonDurationRanges","matchingQuickRange","hasRangeMatch","label","relativeDuration","relativeParts","isRelativeToNow","NOW","count","relativeDurationI18n","relativeDurationString","unit","roundedDurationI18n","roundedDurationString","round","roundUnit","displayFrom","displayTo","fallbackDuration","PrettyDuration","ranges","find","start","end","fromDateMode","toDateMode","isLast","RELATIVE","isNext","showPrettyDuration"],"sources":["/Users/nikita/Downloads/super_date_picker/src/date_picker/super_date_picker/pretty_duration.tsx"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport React, { Fragment } from \"react\";\nimport dateMath from \"@elastic/datemath\";\nimport moment, { LocaleSpecifier } from \"moment\"; // eslint-disable-line import/named\nimport { useEuiI18n } from \"../../i18n\";\nimport { getDateMode, DATE_MODES } from \"./date_modes\";\nimport { parseRelativeParts } from \"./relative_utils\";\nimport { useI18nTimeOptions } from \"./time_options\";\nimport {\n  DurationRange,\n  TimeUnitAllId,\n  ShortDate,\n  RelativeParts,\n} from \"../types\";\n\n/**\n * Pretty duration i18n strings\n * Units should not be simply concatenated because different languages\n * will have different grammar/positions for time than English\n */\n\nconst useRelativeDurationI18n = (duration: number) => ({\n  s: useEuiI18n(\n    \"euiPrettyDuration.lastDurationSeconds\",\n    ({ duration }) => `Last ${duration} second${duration === 1 ? \"\" : \"s\"}`,\n    { duration }\n  ),\n  \"s+\": useEuiI18n(\n    \"euiPrettyDuration.nextDurationSeconds\",\n    ({ duration }) => `Next ${duration} second${duration === 1 ? \"\" : \"s\"}`,\n    { duration }\n  ),\n  m: useEuiI18n(\n    \"euiPrettyDuration.lastDurationMinutes\",\n    ({ duration }) => `Last ${duration} minute${duration === 1 ? \"\" : \"s\"}`,\n    { duration }\n  ),\n  \"m+\": useEuiI18n(\n    \"euiPrettyDuration.nextDurationMinutes\",\n    ({ duration }) => `Next ${duration} minute${duration === 1 ? \"\" : \"s\"}`,\n    { duration }\n  ),\n  h: useEuiI18n(\n    \"euiPrettyDuration.lastDurationHours\",\n    ({ duration }) => `Last ${duration} hour${duration === 1 ? \"\" : \"s\"}`,\n    { duration }\n  ),\n  \"h+\": useEuiI18n(\n    \"euiPrettyDuration.nextDurationHours\",\n    ({ duration }) => `Next ${duration} hour${duration === 1 ? \"\" : \"s\"}`,\n    { duration }\n  ),\n  d: useEuiI18n(\n    \"euiPrettyDuration.lastDurationDays\",\n    ({ duration }) => `Last ${duration} day${duration === 1 ? \"\" : \"s\"}`,\n    { duration }\n  ),\n  \"d+\": useEuiI18n(\n    \"euiPrettyDuration.nexttDurationDays\",\n    ({ duration }) => `Next ${duration} day${duration === 1 ? \"\" : \"s\"}`,\n    { duration }\n  ),\n  w: useEuiI18n(\n    \"euiPrettyDuration.lastDurationWeeks\",\n    ({ duration }) => `Last ${duration} week${duration === 1 ? \"\" : \"s\"}`,\n    { duration }\n  ),\n  \"w+\": useEuiI18n(\n    \"euiPrettyDuration.nextDurationWeeks\",\n    ({ duration }) => `Next ${duration} week${duration === 1 ? \"\" : \"s\"}`,\n    { duration }\n  ),\n  M: useEuiI18n(\n    \"euiPrettyDuration.lastDurationMonths\",\n    ({ duration }) => `Last ${duration} month${duration === 1 ? \"\" : \"s\"}`,\n    { duration }\n  ),\n  \"M+\": useEuiI18n(\n    \"euiPrettyDuration.nextDurationMonths\",\n    ({ duration }) => `Next ${duration} month${duration === 1 ? \"\" : \"s\"}`,\n    { duration }\n  ),\n  y: useEuiI18n(\n    \"euiPrettyDuration.lastDurationYears\",\n    ({ duration }) => `Last ${duration} year${duration === 1 ? \"\" : \"s\"}`,\n    { duration }\n  ),\n  \"y+\": useEuiI18n(\n    \"euiPrettyDuration.nextDurationYears\",\n    ({ duration }) => `Next ${duration} year${duration === 1 ? \"\" : \"s\"}`,\n    { duration }\n  ),\n});\n\nconst useRelativeDurationRoundedI18n = (prettyDuration: string) => ({\n  s: useEuiI18n(\n    \"euiPrettyDuration.durationRoundedToSecond\",\n    \"{prettyDuration} rounded to the second\",\n    { prettyDuration }\n  ),\n  m: useEuiI18n(\n    \"euiPrettyDuration.durationRoundedToMinute\",\n    \"{prettyDuration} rounded to the minute\",\n    { prettyDuration }\n  ),\n  h: useEuiI18n(\n    \"euiPrettyDuration.durationRoundedToHour\",\n    \"{prettyDuration} rounded to the hour\",\n    { prettyDuration }\n  ),\n  d: useEuiI18n(\n    \"euiPrettyDuration.durationRoundedToDay\",\n    \"{prettyDuration} rounded to the day\",\n    { prettyDuration }\n  ),\n  w: useEuiI18n(\n    \"euiPrettyDuration.durationRoundedToWeek\",\n    \"{prettyDuration} rounded to the week\",\n    { prettyDuration }\n  ),\n  M: useEuiI18n(\n    \"euiPrettyDuration.durationRoundedToMonth\",\n    \"{prettyDuration} rounded to the month\",\n    { prettyDuration }\n  ),\n  y: useEuiI18n(\n    \"euiPrettyDuration.durationRoundedToYear\",\n    \"{prettyDuration} rounded to the year\",\n    { prettyDuration }\n  ),\n});\n\n/**\n * Reusable format time string util\n */\n\nconst ISO_FORMAT = \"YYYY-MM-DDTHH:mm:ss.SSSZ\";\n\nexport const useFormatTimeString = (\n  timeString: string,\n  dateFormat: string,\n  roundUp = false,\n  locale: LocaleSpecifier = \"en\"\n): string => {\n  // i18n'd strings\n  const nowDisplay = useEuiI18n(\"euiPrettyDuration.now\", \"now\");\n  const invalidDateDisplay = useEuiI18n(\n    \"euiPrettyDuration.invalid\",\n    \"Invalid date\"\n  );\n\n  const timeAsMoment = moment(timeString, ISO_FORMAT, true);\n  if (timeAsMoment.isValid()) {\n    return timeAsMoment.locale(locale).format(dateFormat);\n  }\n\n  if (timeString === \"now\") {\n    return nowDisplay;\n  }\n\n  const tryParse = dateMath.parse(timeString, { roundUp: roundUp });\n  if (!moment(tryParse).isValid()) {\n    return invalidDateDisplay;\n  }\n\n  if (moment.isMoment(tryParse)) {\n    return `~ ${tryParse.locale(locale).fromNow()}`;\n  }\n\n  return timeString;\n};\n\n/**\n * Pretty duration hook+component\n */\n\ninterface PrettyDurationProps {\n  timeFrom: ShortDate;\n  timeTo: ShortDate;\n  quickRanges?: DurationRange[];\n  dateFormat: string;\n}\n\nexport const usePrettyDuration = ({\n  timeFrom,\n  timeTo,\n  quickRanges,\n  dateFormat,\n}: PrettyDurationProps) => {\n  let prettyDuration: string = \"\";\n\n  /**\n   * If it's a quick range, use the quick range label\n   */\n  const { commonDurationRanges } = useI18nTimeOptions();\n  const matchingQuickRange = hasRangeMatch(\n    timeFrom,\n    timeTo,\n    quickRanges || commonDurationRanges\n  );\n  if (matchingQuickRange && matchingQuickRange.label) {\n    prettyDuration = matchingQuickRange.label;\n  }\n\n  /**\n   * Otherwise if it's a relative (possibly rounded) duration, figure out\n   * a pretty i18n'd duration to display\n   */\n  let relativeDuration: number = 0;\n  let relativeParts = {} as RelativeParts;\n\n  if (isRelativeToNow(timeFrom, timeTo)) {\n    if (getDateMode(timeTo) === DATE_MODES.NOW) {\n      relativeParts = parseRelativeParts(timeFrom);\n    } else {\n      relativeParts = parseRelativeParts(timeTo);\n    }\n    relativeDuration = relativeParts.count;\n  }\n\n  const relativeDurationI18n = useRelativeDurationI18n(relativeDuration);\n  const relativeDurationString = relativeParts.unit\n    ? relativeDurationI18n[relativeParts.unit as TimeUnitAllId]\n    : \"\";\n\n  const roundedDurationI18n = useRelativeDurationRoundedI18n(\n    relativeDurationString\n  );\n  const roundedDurationString =\n    relativeParts.round && relativeParts.roundUnit\n      ? roundedDurationI18n[relativeParts.roundUnit]\n      : \"\";\n\n  if (!prettyDuration) {\n    prettyDuration = roundedDurationString || relativeDurationString;\n  }\n\n  /**\n   * If it's none of the above, display basic fallback copy\n   */\n  const displayFrom = useFormatTimeString(timeFrom, dateFormat);\n  const displayTo = useFormatTimeString(timeTo, dateFormat, true);\n  const fallbackDuration = useEuiI18n(\n    \"euiPrettyDuration.fallbackDuration\",\n    \"{displayFrom} to {displayTo}\",\n    { displayFrom, displayTo }\n  );\n  if (!prettyDuration) {\n    prettyDuration = fallbackDuration;\n  }\n\n  return prettyDuration;\n};\n\nexport const PrettyDuration: React.FC<PrettyDurationProps> = ({\n  timeFrom,\n  timeTo,\n  quickRanges,\n  dateFormat,\n}) => {\n  const prettyDuration = usePrettyDuration({\n    timeFrom,\n    timeTo,\n    quickRanges,\n    dateFormat,\n  });\n  return <Fragment>{prettyDuration}</Fragment>;\n};\n\n/**\n * Non-hook utils\n */\n\nconst hasRangeMatch = (\n  timeFrom: ShortDate,\n  timeTo: ShortDate,\n  ranges: DurationRange[]\n) => {\n  return ranges.find(({ start, end }) => timeFrom === start && timeTo === end);\n};\n\nconst isRelativeToNow = (timeFrom: ShortDate, timeTo: ShortDate): boolean => {\n  const fromDateMode = getDateMode(timeFrom);\n  const toDateMode = getDateMode(timeTo);\n  const isLast =\n    fromDateMode === DATE_MODES.RELATIVE && toDateMode === DATE_MODES.NOW;\n  const isNext =\n    fromDateMode === DATE_MODES.NOW && toDateMode === DATE_MODES.RELATIVE;\n  return isLast || isNext;\n};\n\nexport const showPrettyDuration = (\n  timeFrom: ShortDate,\n  timeTo: ShortDate,\n  quickRanges: DurationRange[]\n): boolean => {\n  if (hasRangeMatch(timeFrom, timeTo, quickRanges)) {\n    return true;\n  }\n  return isRelativeToNow(timeFrom, timeTo);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}