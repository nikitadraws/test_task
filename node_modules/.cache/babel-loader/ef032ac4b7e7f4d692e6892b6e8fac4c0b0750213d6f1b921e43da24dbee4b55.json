{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/Downloads/super_date_picker/src/panel/panel.tsx\",\n  _s = $RefreshSig$();\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\n/** @jsxImportSource @emotion/react */\nimport classNames from \"classnames\";\nimport { useEuiTheme } from \"../services\";\nimport { useEuiBackgroundColorCSS, useEuiPaddingCSS, BACKGROUND_COLORS, PADDING_SIZES } from \"../global_styling\";\nimport { keysOf } from \"../common\";\nimport { euiPanelStyles } from \"./panel.styles\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport const SIZES = PADDING_SIZES;\n\n// Exported padding sizes and class names necessary for EuiPopover and EuiCard.\n// Which currently will only maintain support for the original values until conversion.\nconst paddingSizeToClassNameMap = {\n  none: null,\n  s: \"paddingSmall\",\n  m: \"paddingMedium\",\n  l: \"paddingLarge\"\n};\nconst _SIZES = keysOf(paddingSizeToClassNameMap);\nexport const BORDER_RADII = [\"none\", \"m\"];\nexport const COLORS = BACKGROUND_COLORS;\nexport const EuiPanel = _ref => {\n  _s();\n  let {\n    children,\n    className,\n    paddingSize = \"m\",\n    borderRadius = \"m\",\n    color = \"plain\",\n    hasShadow = true,\n    hasBorder = false,\n    grow = true,\n    panelRef,\n    element,\n    ...rest\n  } = _ref;\n  const euiTheme = useEuiTheme();\n  // Shadows are only allowed when there's a white background (plain)\n  const canHaveShadow = !hasBorder && color === \"plain\";\n  const canHaveBorder = color === \"plain\" || color === \"transparent\";\n  const styles = euiPanelStyles(euiTheme);\n  const cssStyles = [styles.euiPanel, grow && styles.grow, styles.radius[borderRadius], useEuiPaddingCSS()[paddingSize], useEuiBackgroundColorCSS()[color], canHaveShadow && hasShadow === true && styles.hasShadow, canHaveBorder && hasBorder === true && styles.hasBorder, rest.onClick && styles.isClickable];\n  const classes = classNames(\"euiPanel\", `euiPanel--${color}`, {\n    [`euiPanel--${paddingSizeToClassNameMap[paddingSize]}`]: paddingSizeToClassNameMap[paddingSize]\n  }, className);\n  if (rest.onClick && element !== \"div\") {\n    return _jsxDEV(\"button\", {\n      ref: panelRef,\n      className: classes,\n      css: cssStyles,\n      ...rest,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(\"div\", {\n    ref: panelRef,\n    className: classes,\n    css: cssStyles,\n    ...rest,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(EuiPanel, \"a5k+1yIW9z30oWtsqjSX/ZYiZic=\", false, function () {\n  return [useEuiTheme, useEuiPaddingCSS, useEuiBackgroundColorCSS];\n});\n_c = EuiPanel;\nvar _c;\n$RefreshReg$(_c, \"EuiPanel\");","map":{"version":3,"names":["classNames","useEuiTheme","useEuiBackgroundColorCSS","useEuiPaddingCSS","BACKGROUND_COLORS","PADDING_SIZES","keysOf","euiPanelStyles","SIZES","paddingSizeToClassNameMap","none","s","m","l","_SIZES","BORDER_RADII","COLORS","EuiPanel","children","className","paddingSize","borderRadius","color","hasShadow","hasBorder","grow","panelRef","element","rest","euiTheme","canHaveShadow","canHaveBorder","styles","cssStyles","euiPanel","radius","onClick","isClickable","classes"],"sources":["/Users/nikita/Downloads/super_date_picker/src/panel/panel.tsx"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport {\n  ButtonHTMLAttributes,\n  FunctionComponent,\n  HTMLAttributes,\n  Ref,\n} from \"react\";\n/** @jsxImportSource @emotion/react */\nimport classNames from \"classnames\";\nimport { useEuiTheme } from \"../services\";\nimport {\n  useEuiBackgroundColorCSS,\n  useEuiPaddingCSS,\n  _EuiBackgroundColor,\n  EuiPaddingSize,\n  BACKGROUND_COLORS,\n  PADDING_SIZES,\n} from \"../global_styling\";\nimport { CommonProps, ExclusiveUnion, keysOf } from \"../common\";\nimport { euiPanelStyles } from \"./panel.styles\";\n\nexport const SIZES = PADDING_SIZES;\n\n// Exported padding sizes and class names necessary for EuiPopover and EuiCard.\n// Which currently will only maintain support for the original values until conversion.\nconst paddingSizeToClassNameMap: {\n  [value in EuiPaddingSize]?: string | null;\n} = {\n  none: null,\n  s: \"paddingSmall\",\n  m: \"paddingMedium\",\n  l: \"paddingLarge\",\n};\nconst _SIZES = keysOf(paddingSizeToClassNameMap);\nexport type PanelPaddingSize = typeof _SIZES[number];\n\nexport const BORDER_RADII = [\"none\", \"m\"] as const;\nexport type PanelBorderRadius = typeof BORDER_RADII[number];\n\nexport const COLORS = BACKGROUND_COLORS;\nexport type PanelColor = _EuiBackgroundColor;\n\nexport interface _EuiPanelProps extends CommonProps {\n  /**\n   * Adds a medium shadow to the panel;\n   * Only works when `color=\"plain\"`\n   */\n  hasShadow?: boolean;\n  /**\n   * Adds a slight 1px border on all edges.\n   * Only works when `color=\"plain | transparent\"`\n   */\n  hasBorder?: boolean;\n  /**\n   * Padding for all four sides\n   */\n  paddingSize?: EuiPaddingSize;\n  /**\n   * Corner border radius\n   */\n  borderRadius?: PanelBorderRadius;\n  /**\n   * When true the panel will grow in height to match `EuiFlexItem`\n   */\n  grow?: boolean;\n  panelRef?: Ref<HTMLDivElement>;\n  /**\n   * Background color of the panel;\n   * Usually a lightened form of the brand colors\n   */\n  color?: PanelColor;\n}\n\nexport interface _EuiPanelDivlike\n  extends _EuiPanelProps,\n    Omit<HTMLAttributes<HTMLDivElement>, \"color\"> {\n  element?: \"div\";\n}\n\nexport interface _EuiPanelButtonlike\n  extends _EuiPanelProps,\n    Omit<ButtonHTMLAttributes<HTMLButtonElement>, \"color\"> {\n  element?: \"button\";\n}\n\nexport type EuiPanelProps = ExclusiveUnion<\n  _EuiPanelButtonlike,\n  _EuiPanelDivlike\n>;\n\nexport const EuiPanel: FunctionComponent<EuiPanelProps> = ({\n  children,\n  className,\n  paddingSize = \"m\",\n  borderRadius = \"m\",\n  color = \"plain\",\n  hasShadow = true,\n  hasBorder = false,\n  grow = true,\n  panelRef,\n  element,\n  ...rest\n}) => {\n  const euiTheme = useEuiTheme();\n  // Shadows are only allowed when there's a white background (plain)\n  const canHaveShadow = !hasBorder && color === \"plain\";\n  const canHaveBorder = color === \"plain\" || color === \"transparent\";\n\n  const styles = euiPanelStyles(euiTheme);\n  const cssStyles = [\n    styles.euiPanel,\n    grow && styles.grow,\n    styles.radius[borderRadius],\n    useEuiPaddingCSS()[paddingSize],\n    useEuiBackgroundColorCSS()[color],\n    canHaveShadow && hasShadow === true && styles.hasShadow,\n    canHaveBorder && hasBorder === true && styles.hasBorder,\n    rest.onClick && styles.isClickable,\n  ];\n\n  const classes = classNames(\n    \"euiPanel\",\n    `euiPanel--${color}`,\n    {\n      [`euiPanel--${paddingSizeToClassNameMap[paddingSize]}`]:\n        paddingSizeToClassNameMap[paddingSize],\n    },\n    className\n  );\n\n  if (rest.onClick && element !== \"div\") {\n    return (\n      <button\n        ref={panelRef as Ref<HTMLButtonElement>}\n        className={classes}\n        css={cssStyles}\n        {...(rest as ButtonHTMLAttributes<HTMLButtonElement>)}\n      >\n        {children}\n      </button>\n    );\n  }\n\n  return (\n    <div\n      ref={panelRef as Ref<HTMLDivElement>}\n      className={classes}\n      css={cssStyles}\n      {...(rest as HTMLAttributes<HTMLDivElement>)}\n    >\n      {children}\n    </div>\n  );\n};\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA;AACA,OAAOA,UAAU,MAAM,YAAY;AACnC,SAASC,WAAW,QAAQ,aAAa;AACzC,SACEC,wBAAwB,EACxBC,gBAAgB,EAGhBC,iBAAiB,EACjBC,aAAa,QACR,mBAAmB;AAC1B,SAAsCC,MAAM,QAAQ,WAAW;AAC/D,SAASC,cAAc,QAAQ,gBAAgB;AAAC;AAEhD,OAAO,MAAMC,KAAK,GAAGH,aAAa;;AAElC;AACA;AACA,MAAMI,yBAEL,GAAG;EACFC,IAAI,EAAE,IAAI;EACVC,CAAC,EAAE,cAAc;EACjBC,CAAC,EAAE,eAAe;EAClBC,CAAC,EAAE;AACL,CAAC;AACD,MAAMC,MAAM,GAAGR,MAAM,CAACG,yBAAyB,CAAC;AAGhD,OAAO,MAAMM,YAAY,GAAG,CAAC,MAAM,EAAE,GAAG,CAAU;AAGlD,OAAO,MAAMC,MAAM,GAAGZ,iBAAiB;AAmDvC,OAAO,MAAMa,QAA0C,GAAG,QAYpD;EAAA;EAAA,IAZqD;IACzDC,QAAQ;IACRC,SAAS;IACTC,WAAW,GAAG,GAAG;IACjBC,YAAY,GAAG,GAAG;IAClBC,KAAK,GAAG,OAAO;IACfC,SAAS,GAAG,IAAI;IAChBC,SAAS,GAAG,KAAK;IACjBC,IAAI,GAAG,IAAI;IACXC,QAAQ;IACRC,OAAO;IACP,GAAGC;EACL,CAAC;EACC,MAAMC,QAAQ,GAAG5B,WAAW,EAAE;EAC9B;EACA,MAAM6B,aAAa,GAAG,CAACN,SAAS,IAAIF,KAAK,KAAK,OAAO;EACrD,MAAMS,aAAa,GAAGT,KAAK,KAAK,OAAO,IAAIA,KAAK,KAAK,aAAa;EAElE,MAAMU,MAAM,GAAGzB,cAAc,CAACsB,QAAQ,CAAC;EACvC,MAAMI,SAAS,GAAG,CAChBD,MAAM,CAACE,QAAQ,EACfT,IAAI,IAAIO,MAAM,CAACP,IAAI,EACnBO,MAAM,CAACG,MAAM,CAACd,YAAY,CAAC,EAC3BlB,gBAAgB,EAAE,CAACiB,WAAW,CAAC,EAC/BlB,wBAAwB,EAAE,CAACoB,KAAK,CAAC,EACjCQ,aAAa,IAAIP,SAAS,KAAK,IAAI,IAAIS,MAAM,CAACT,SAAS,EACvDQ,aAAa,IAAIP,SAAS,KAAK,IAAI,IAAIQ,MAAM,CAACR,SAAS,EACvDI,IAAI,CAACQ,OAAO,IAAIJ,MAAM,CAACK,WAAW,CACnC;EAED,MAAMC,OAAO,GAAGtC,UAAU,CACxB,UAAU,EACT,aAAYsB,KAAM,EAAC,EACpB;IACE,CAAE,aAAYb,yBAAyB,CAACW,WAAW,CAAE,EAAC,GACpDX,yBAAyB,CAACW,WAAW;EACzC,CAAC,EACDD,SAAS,CACV;EAED,IAAIS,IAAI,CAACQ,OAAO,IAAIT,OAAO,KAAK,KAAK,EAAE;IACrC,OACE;MACE,GAAG,EAAED,QAAmC;MACxC,SAAS,EAAEY,OAAQ;MACnB,GAAG,EAAEL,SAAU;MAAA,GACVL,IAAI;MAAA,UAERV;IAAQ;MAAA;MAAA;MAAA;IAAA,QACF;EAEb;EAEA,OACE;IACE,GAAG,EAAEQ,QAAgC;IACrC,SAAS,EAAEY,OAAQ;IACnB,GAAG,EAAEL,SAAU;IAAA,GACVL,IAAI;IAAA,UAERV;EAAQ;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAC,GA/DWD,QAA0C;EAAA,QAapChB,WAAW,EAU1BE,gBAAgB,EAChBD,wBAAwB;AAAA;AAAA,KAxBfe,QAA0C;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}