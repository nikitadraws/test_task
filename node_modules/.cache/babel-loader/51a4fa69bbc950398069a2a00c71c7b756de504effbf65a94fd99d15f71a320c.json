{"ast":null,"code":"var _s = $RefreshSig$();\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { v1 as uuidv1 } from 'uuid';\nimport { useMemo } from 'react';\n\n/**\n * This function returns a function to generate ids.\n * This can be used to generate unique, but predictable ids to pair labels\n * with their inputs. It takes an optional prefix as a parameter. If you don't\n * specify it, it generates a random id prefix. If you specify a custom prefix\n * it should begin with an letter to be HTML4 compliant.\n */\nexport function htmlIdGenerator() {\n  let idPrefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  const staticUuid = uuidv1();\n  return function () {\n    let idSuffix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    const prefix = `${idPrefix}${idPrefix !== '' ? '_' : 'i'}`;\n    const suffix = idSuffix ? `_${idSuffix}` : '';\n    return `${prefix}${suffix ? staticUuid : uuidv1()}${suffix}`;\n  };\n}\n\n/**\n * Generates a memoized ID that remains static until component unmount.\n * This prevents IDs from being re-randomized on every component update.\n */\n\nexport const useGeneratedHtmlId = function () {\n  _s();\n  let {\n    prefix,\n    suffix,\n    conditionalId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return useMemo(() => {\n    return conditionalId || htmlIdGenerator(prefix)(suffix);\n  }, [conditionalId, prefix, suffix]);\n};\n_s(useGeneratedHtmlId, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");","map":{"version":3,"names":["v1","uuidv1","useMemo","htmlIdGenerator","idPrefix","staticUuid","idSuffix","prefix","suffix","useGeneratedHtmlId","conditionalId"],"sources":["/Users/nikita/Downloads/super_date_picker/src/services/accessibility/html_id_generator.ts"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { v1 as uuidv1 } from 'uuid';\nimport { useMemo } from 'react';\n\n/**\n * This function returns a function to generate ids.\n * This can be used to generate unique, but predictable ids to pair labels\n * with their inputs. It takes an optional prefix as a parameter. If you don't\n * specify it, it generates a random id prefix. If you specify a custom prefix\n * it should begin with an letter to be HTML4 compliant.\n */\nexport function htmlIdGenerator(idPrefix: string = '') {\n  const staticUuid = uuidv1();\n  return (idSuffix: string = '') => {\n    const prefix = `${idPrefix}${idPrefix !== '' ? '_' : 'i'}`;\n    const suffix = idSuffix ? `_${idSuffix}` : '';\n    return `${prefix}${suffix ? staticUuid : uuidv1()}${suffix}`;\n  };\n}\n\n/**\n * Generates a memoized ID that remains static until component unmount.\n * This prevents IDs from being re-randomized on every component update.\n */\nexport type UseGeneratedHtmlIdOptions = {\n  /**\n   * Optional prefix to prepend to the generated ID\n   */\n  prefix?: string;\n  /**\n   * Optional suffix to append to the generated ID\n   */\n  suffix?: string;\n  /**\n   * Optional conditional ID to use instead of a randomly generated ID.\n   * Typically used by EUI components where IDs can be passed in as custom props\n   */\n  conditionalId?: string;\n};\nexport const useGeneratedHtmlId = ({\n  prefix,\n  suffix,\n  conditionalId,\n}: UseGeneratedHtmlIdOptions = {}) => {\n  return useMemo<string>(() => {\n    return conditionalId || htmlIdGenerator(prefix)(suffix);\n  }, [conditionalId, prefix, suffix]);\n};\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,SAASC,OAAO,QAAQ,OAAO;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,eAAe,GAAwB;EAAA,IAAvBC,QAAgB,uEAAG,EAAE;EACnD,MAAMC,UAAU,GAAGJ,MAAM,EAAE;EAC3B,OAAO,YAA2B;IAAA,IAA1BK,QAAgB,uEAAG,EAAE;IAC3B,MAAMC,MAAM,GAAI,GAAEH,QAAS,GAAEA,QAAQ,KAAK,EAAE,GAAG,GAAG,GAAG,GAAI,EAAC;IAC1D,MAAMI,MAAM,GAAGF,QAAQ,GAAI,IAAGA,QAAS,EAAC,GAAG,EAAE;IAC7C,OAAQ,GAAEC,MAAO,GAAEC,MAAM,GAAGH,UAAU,GAAGJ,MAAM,EAAG,GAAEO,MAAO,EAAC;EAC9D,CAAC;AACH;;AAEA;AACA;AACA;AACA;;AAgBA,OAAO,MAAMC,kBAAkB,GAAG,YAII;EAAA;EAAA,IAJH;IACjCF,MAAM;IACNC,MAAM;IACNE;EACyB,CAAC,uEAAG,CAAC,CAAC;EAC/B,OAAOR,OAAO,CAAS,MAAM;IAC3B,OAAOQ,aAAa,IAAIP,eAAe,CAACI,MAAM,CAAC,CAACC,MAAM,CAAC;EACzD,CAAC,EAAE,CAACE,aAAa,EAAEH,MAAM,EAAEC,MAAM,CAAC,CAAC;AACrC,CAAC;AAAC,GARWC,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}