{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/Downloads/super_date_picker/src/services/theme/hooks.tsx\",\n  _s = $RefreshSig$();\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { forwardRef, useContext, useMemo } from \"react\";\nimport { EuiThemeContext, EuiModificationsContext, EuiColorModeContext, defaultComputedTheme } from \"./context\";\nimport { getEuiDevProviderWarning } from \"./provider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst providerMessage = `\\`EuiProvider\\` is missing which can result in negative effects.\nWrap your component in \\`EuiProvider\\`: https://ela.st/euiprovider.`;\nexport const useEuiTheme = () => {\n  _s();\n  const theme = useContext(EuiThemeContext);\n  const colorMode = useContext(EuiColorModeContext);\n  const modifications = useContext(EuiModificationsContext);\n  if (process.env.NODE_ENV !== \"production\") {\n    const isFallback = theme === defaultComputedTheme;\n    const warningLevel = getEuiDevProviderWarning();\n    if (isFallback && typeof warningLevel !== \"undefined\") {\n      switch (warningLevel) {\n        case \"log\":\n          console.log(providerMessage);\n          break;\n        case \"warn\":\n          console.warn(providerMessage);\n          break;\n        case \"error\":\n          throw new Error(providerMessage);\n        default:\n          break;\n      }\n    }\n  }\n  const assembledTheme = useMemo(() => ({\n    euiTheme: theme,\n    colorMode,\n    modifications: modifications\n  }), [theme, colorMode, modifications]);\n  return assembledTheme;\n};\n_s(useEuiTheme, \"eDtuNBUNob80bmK0fFthqlELmoY=\");\n// Provide the component props interface as the generic to allow the docs props table to populate.\n// e.g., `const EuiComponent = withEuiTheme<EuiComponentProps>(_EuiComponent)`\nexport const withEuiTheme = Component => {\n  var _s2 = $RefreshSig$();\n  const componentName = Component.displayName || Component.name || \"ComponentWithTheme\";\n  const Render = (props, ref) => {\n    _s2();\n    const theme = useEuiTheme();\n    return /*#__PURE__*/_jsxDEV(Component, {\n      theme: theme,\n      ref: ref,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }, this);\n  };\n  _s2(Render, \"EmLuvSS+ygRTODy5Y6XCUN9YNgU=\", false, function () {\n    return [useEuiTheme];\n  });\n  const WithEuiTheme = /*#__PURE__*/forwardRef(Render);\n  WithEuiTheme.displayName = componentName;\n  return WithEuiTheme;\n};","map":{"version":3,"names":["forwardRef","useContext","useMemo","EuiThemeContext","EuiModificationsContext","EuiColorModeContext","defaultComputedTheme","getEuiDevProviderWarning","providerMessage","useEuiTheme","theme","colorMode","modifications","process","env","NODE_ENV","isFallback","warningLevel","console","log","warn","Error","assembledTheme","euiTheme","withEuiTheme","Component","componentName","displayName","name","Render","props","ref","WithEuiTheme"],"sources":["/Users/nikita/Downloads/super_date_picker/src/services/theme/hooks.tsx"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { forwardRef, useContext, useMemo } from \"react\";\n\nimport {\n  EuiThemeContext,\n  EuiModificationsContext,\n  EuiColorModeContext,\n  defaultComputedTheme,\n} from \"./context\";\nimport { getEuiDevProviderWarning } from \"./provider\";\nimport {\n  EuiThemeColorModeStandard,\n  EuiThemeModifications,\n  EuiThemeComputed,\n} from \"./types\";\n\nconst providerMessage = `\\`EuiProvider\\` is missing which can result in negative effects.\nWrap your component in \\`EuiProvider\\`: https://ela.st/euiprovider.`;\n\nexport interface UseEuiTheme<T extends {} = {}> {\n  euiTheme: EuiThemeComputed<T>;\n  colorMode: EuiThemeColorModeStandard;\n  modifications: EuiThemeModifications<T>;\n}\n\nexport const useEuiTheme = <T extends {} = {}>(): UseEuiTheme<T> => {\n  const theme = useContext(EuiThemeContext);\n  const colorMode = useContext(EuiColorModeContext);\n  const modifications = useContext(EuiModificationsContext);\n\n  if (process.env.NODE_ENV !== \"production\") {\n    const isFallback = theme === defaultComputedTheme;\n    const warningLevel = getEuiDevProviderWarning();\n    if (isFallback && typeof warningLevel !== \"undefined\") {\n      switch (warningLevel) {\n        case \"log\":\n          console.log(providerMessage);\n          break;\n        case \"warn\":\n          console.warn(providerMessage);\n          break;\n        case \"error\":\n          throw new Error(providerMessage);\n        default:\n          break;\n      }\n    }\n  }\n\n  const assembledTheme = useMemo(\n    () => ({\n      euiTheme: theme as EuiThemeComputed<T>,\n      colorMode,\n      modifications: modifications as EuiThemeModifications<T>,\n    }),\n    [theme, colorMode, modifications]\n  );\n\n  return assembledTheme;\n};\n\nexport interface WithEuiThemeProps<P extends {} = {}> {\n  theme: UseEuiTheme<P>;\n}\n// Provide the component props interface as the generic to allow the docs props table to populate.\n// e.g., `const EuiComponent = withEuiTheme<EuiComponentProps>(_EuiComponent)`\nexport const withEuiTheme = <T extends {} = {}, U extends {} = {}>(\n  Component: React.ComponentType<T & WithEuiThemeProps<U>>\n) => {\n  const componentName =\n    Component.displayName || Component.name || \"ComponentWithTheme\";\n  const Render = (\n    props: Omit<T, keyof WithEuiThemeProps<U>>,\n    ref: React.Ref<Omit<T, keyof WithEuiThemeProps<U>>>\n  ) => {\n    const theme = useEuiTheme<U>();\n    return <Component theme={theme} ref={ref} {...(props as T)} />;\n  };\n\n  const WithEuiTheme = forwardRef(Render);\n\n  WithEuiTheme.displayName = componentName;\n\n  return WithEuiTheme;\n};\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,UAAU,EAAEC,UAAU,EAAEC,OAAO,QAAQ,OAAO;AAEvD,SACEC,eAAe,EACfC,uBAAuB,EACvBC,mBAAmB,EACnBC,oBAAoB,QACf,WAAW;AAClB,SAASC,wBAAwB,QAAQ,YAAY;AAAC;AAOtD,MAAMC,eAAe,GAAI;AACzB,oEAAoE;AAQpE,OAAO,MAAMC,WAAW,GAAG,MAAyC;EAAA;EAClE,MAAMC,KAAK,GAAGT,UAAU,CAACE,eAAe,CAAC;EACzC,MAAMQ,SAAS,GAAGV,UAAU,CAACI,mBAAmB,CAAC;EACjD,MAAMO,aAAa,GAAGX,UAAU,CAACG,uBAAuB,CAAC;EAEzD,IAAIS,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,MAAMC,UAAU,GAAGN,KAAK,KAAKJ,oBAAoB;IACjD,MAAMW,YAAY,GAAGV,wBAAwB,EAAE;IAC/C,IAAIS,UAAU,IAAI,OAAOC,YAAY,KAAK,WAAW,EAAE;MACrD,QAAQA,YAAY;QAClB,KAAK,KAAK;UACRC,OAAO,CAACC,GAAG,CAACX,eAAe,CAAC;UAC5B;QACF,KAAK,MAAM;UACTU,OAAO,CAACE,IAAI,CAACZ,eAAe,CAAC;UAC7B;QACF,KAAK,OAAO;UACV,MAAM,IAAIa,KAAK,CAACb,eAAe,CAAC;QAClC;UACE;MAAM;IAEZ;EACF;EAEA,MAAMc,cAAc,GAAGpB,OAAO,CAC5B,OAAO;IACLqB,QAAQ,EAAEb,KAA4B;IACtCC,SAAS;IACTC,aAAa,EAAEA;EACjB,CAAC,CAAC,EACF,CAACF,KAAK,EAAEC,SAAS,EAAEC,aAAa,CAAC,CAClC;EAED,OAAOU,cAAc;AACvB,CAAC;AAAC,GAlCWb,WAAW;AAuCxB;AACA;AACA,OAAO,MAAMe,YAAY,GACvBC,SAAwD,IACrD;EAAA;EACH,MAAMC,aAAa,GACjBD,SAAS,CAACE,WAAW,IAAIF,SAAS,CAACG,IAAI,IAAI,oBAAoB;EACjE,MAAMC,MAAM,GAAG,CACbC,KAA0C,EAC1CC,GAAmD,KAChD;IAAA;IACH,MAAMrB,KAAK,GAAGD,WAAW,EAAK;IAC9B,oBAAO,QAAC,SAAS;MAAC,KAAK,EAAEC,KAAM;MAAC,GAAG,EAAEqB,GAAI;MAAA,GAAMD;IAAK;MAAA;MAAA;MAAA;IAAA,QAAU;EAChE,CAAC;EAAC,IANID,MAAM;IAAA,QAIIpB,WAAW;EAAA;EAI3B,MAAMuB,YAAY,gBAAGhC,UAAU,CAAC6B,MAAM,CAAC;EAEvCG,YAAY,CAACL,WAAW,GAAGD,aAAa;EAExC,OAAOM,YAAY;AACrB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}