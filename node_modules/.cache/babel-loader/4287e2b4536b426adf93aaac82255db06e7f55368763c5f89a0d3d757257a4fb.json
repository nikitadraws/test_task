{"ast":null,"code":"/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\n/** @jsxImportSource @emotion/react */import { css } from '@emotion/react';\nexport const euiTextColorStyles = _ref => {\n  let {\n    euiTheme\n  } = _ref;\n  return {\n    euiTextColor: css``,\n    default: css`\n    color: ${euiTheme.colors.text};\n  `,\n    subdued: css`\n    color: ${euiTheme.colors.subduedText};\n  `,\n    success: css`\n    color: ${euiTheme.colors.successText};\n  `,\n    accent: css`\n    color: ${euiTheme.colors.accentText};\n  `,\n    danger: css`\n    color: ${euiTheme.colors.dangerText};\n  `,\n    warning: css`\n    color: ${euiTheme.colors.warningText};\n  `,\n    ghost: css`\n    color: ${euiTheme.colors.ghost} !important;\n  `,\n    inherit: css`\n    color: inherit;\n  `,\n    customColor: css`` // Handled by `style` tag - this is just here for a className hook\n  };\n};","map":{"version":3,"names":["css","euiTextColorStyles","euiTheme","euiTextColor","default","colors","text","subdued","subduedText","success","successText","accent","accentText","danger","dangerText","warning","warningText","ghost","inherit","customColor"],"sources":["/Users/nikita/Downloads/super_date_picker/src/text/text_color.styles.ts"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\n/** @jsxImportSource @emotion/react */ import { css } from '@emotion/react';\nimport { UseEuiTheme } from '../services';\n\nexport const euiTextColorStyles = ({ euiTheme }: UseEuiTheme) => ({\n  euiTextColor: css``,\n  default: css`\n    color: ${euiTheme.colors.text};\n  `,\n  subdued: css`\n    color: ${euiTheme.colors.subduedText};\n  `,\n  success: css`\n    color: ${euiTheme.colors.successText};\n  `,\n  accent: css`\n    color: ${euiTheme.colors.accentText};\n  `,\n  danger: css`\n    color: ${euiTheme.colors.dangerText};\n  `,\n  warning: css`\n    color: ${euiTheme.colors.warningText};\n  `,\n  ghost: css`\n    color: ${euiTheme.colors.ghost} !important;\n  `,\n  inherit: css`\n    color: inherit;\n  `,\n  customColor: css``, // Handled by `style` tag - this is just here for a className hook\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAuC,SAASA,GAAG,QAAQ,gBAAgB;AAG3E,OAAO,MAAMC,kBAAkB,GAAG;EAAA,IAAC;IAAEC;EAAsB,CAAC;EAAA,OAAM;IAChEC,YAAY,EAAEH,GAAI,EAAC;IACnBI,OAAO,EAAEJ,GAAI;AACf,aAAaE,QAAQ,CAACG,MAAM,CAACC,IAAK;AAClC,GAAG;IACDC,OAAO,EAAEP,GAAI;AACf,aAAaE,QAAQ,CAACG,MAAM,CAACG,WAAY;AACzC,GAAG;IACDC,OAAO,EAAET,GAAI;AACf,aAAaE,QAAQ,CAACG,MAAM,CAACK,WAAY;AACzC,GAAG;IACDC,MAAM,EAAEX,GAAI;AACd,aAAaE,QAAQ,CAACG,MAAM,CAACO,UAAW;AACxC,GAAG;IACDC,MAAM,EAAEb,GAAI;AACd,aAAaE,QAAQ,CAACG,MAAM,CAACS,UAAW;AACxC,GAAG;IACDC,OAAO,EAAEf,GAAI;AACf,aAAaE,QAAQ,CAACG,MAAM,CAACW,WAAY;AACzC,GAAG;IACDC,KAAK,EAAEjB,GAAI;AACb,aAAaE,QAAQ,CAACG,MAAM,CAACY,KAAM;AACnC,GAAG;IACDC,OAAO,EAAElB,GAAI;AACf;AACA,GAAG;IACDmB,WAAW,EAAEnB,GAAI,EAAC,CAAE;EACtB,CAAC;AAAA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}